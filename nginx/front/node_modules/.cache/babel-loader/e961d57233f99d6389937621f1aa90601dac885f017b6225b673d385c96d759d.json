{"ast":null,"code":"var _jsxFileName = \"/data/front/src/pages/GamePage.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport BackGround from \"../components/BackGround\";\nimport \"../components/GamePage/PingPong\";\nimport PingPong from \"../components/GamePage/PingPong\";\nimport TopBar from \"../components/TopBar\";\nimport { useAtom } from \"jotai\";\nimport { isQueueAtom } from \"../components/atom/GameAtom\";\nimport { GameCoordinateAtom } from \"../components/atom/GameAtom\";\nimport * as game from \"../socket/game.socket\";\nimport { gameResultModalAtom } from \"../components/atom/ModalAtom\";\nimport GameResultModal from \"../components/GamePage/GameResultModal\";\nimport LadderBoard from \"../components/GamePage/LadderBoard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GamePage() {\n  _s();\n  const [showComponent, setShowComponent] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameResultModal, setGameResultModal] = useAtom(gameResultModalAtom);\n  const [isQueue, setIsQueue] = useAtom(isQueueAtom);\n  const [coordinate, setCoordinate] = useAtom(GameCoordinateAtom);\n  if (isQueue === false) {\n    console.log(\"gameSocket connect\");\n    game.gameSocket.connect();\n    setIsQueue(true);\n  }\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowComponent(false);\n    }, 5000);\n    //   return () => {\n    //     clearTimeout(timer);\n    //   };\n    // }, []);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BackGround, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        const loading = !isLoading;\n        setIsLoading(loading);\n      },\n      children: \"LadderRanking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        const gameOverModal = !gameResultModal;\n        setGameResultModal(gameOverModal);\n      },\n      children: \"GameOver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(LadderBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(PingPong, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 38\n    }, this), gameResultModal ? /*#__PURE__*/_jsxDEV(GameResultModal, {\n      result: true,\n      leftScore: 5,\n      rightScore: 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 26\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(GamePage, \"0gtqXKofnzBZnMzNWQ5wkAYQekk=\", false, function () {\n  return [useAtom, useAtom, useAtom];\n});\n_c = GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["useEffect","useState","BackGround","PingPong","TopBar","useAtom","isQueueAtom","GameCoordinateAtom","game","gameResultModalAtom","GameResultModal","LadderBoard","jsxDEV","_jsxDEV","GamePage","_s","showComponent","setShowComponent","isLoading","setIsLoading","gameResultModal","setGameResultModal","isQueue","setIsQueue","coordinate","setCoordinate","console","log","gameSocket","connect","timer","setTimeout","children","onClick","loading","fileName","_jsxFileName","lineNumber","columnNumber","gameOverModal","result","leftScore","rightScore","_c","$RefreshReg$"],"sources":["/data/front/src/pages/GamePage.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport BackGround from \"../components/BackGround\";\nimport \"../components/GamePage/PingPong\";\nimport PingPong from \"../components/GamePage/PingPong\";\nimport TopBar from \"../components/TopBar\";\n\nimport { useAtom } from \"jotai\";\nimport { isQueueAtom } from \"../components/atom/GameAtom\";\n\nimport { GameCoordinateAtom } from \"../components/atom/GameAtom\";\nimport * as game from \"../socket/game.socket\";\n\nimport { gameResultModalAtom } from \"../components/atom/ModalAtom\";\nimport GameResultModal from \"../components/GamePage/GameResultModal\";\nimport LadderBoard from \"../components/GamePage/LadderBoard\";\n\nexport default function GamePage() {\n  const [showComponent, setShowComponent] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameResultModal, setGameResultModal] = useAtom(gameResultModalAtom);\n\n  const [isQueue, setIsQueue] = useAtom(isQueueAtom);\n\n  const [coordinate, setCoordinate] = useAtom(GameCoordinateAtom);\n\n  if (isQueue === false) {\n    console.log(\"gameSocket connect\");\n    game.gameSocket.connect();\n    setIsQueue(true);\n  }\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowComponent(false);\n    }, 5000);\n    //   return () => {\n    //     clearTimeout(timer);\n    //   };\n    // }, []);\n  }, []);\n\n  return (\n    <BackGround>\n      <button\n        onClick={() => {\n          const loading = !isLoading;\n          setIsLoading(loading);\n        }}\n      >\n        LadderRanking\n      </button>\n      <button\n        onClick={() => {\n          const gameOverModal = !gameResultModal;\n          setGameResultModal(gameOverModal);\n        }}\n      >\n        GameOver\n      </button>\n\n      <TopBar />\n      {isLoading ? <LadderBoard /> : <PingPong />}\n      {gameResultModal ? <GameResultModal result={true} leftScore={5} rightScore={4} /> : null}\n    </BackGround>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}