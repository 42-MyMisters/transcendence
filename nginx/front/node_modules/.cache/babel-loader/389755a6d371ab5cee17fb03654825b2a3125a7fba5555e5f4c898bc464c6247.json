{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/GamePage/GameInviteModal.tsx\",\n  _s = $RefreshSig$();\nimport { useAtomValue, useSetAtom } from \"jotai\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as chatAtom from \"../../components/atom/ChatAtom\";\nimport { PressKey } from \"../../event/event.util\";\nimport * as socket from \"../../socket/chat.socket\";\nimport \"../../styles/GameInviteModal.css\";\nimport { gameInviteInfoAtom, gameinviteFromAtom, isPrivateAtom } from \"../atom/GameAtom\";\nimport { gameInviteModalAtom } from \"../atom/ModalAtom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GameInviteModal() {\n  _s();\n  const setGameInviteModal = useSetAtom(gameInviteModalAtom);\n  const setIsPrivate = useSetAtom(isPrivateAtom);\n  const setGameInviteInfo = useSetAtom(gameInviteInfoAtom);\n  const userList = useAtomValue(chatAtom.userListAtom);\n  const gameInviteFrom = useAtomValue(gameinviteFromAtom);\n  const adminConsole = useAtomValue(chatAtom.adminConsoleAtom);\n  const navigate = useNavigate();\n  const declineHandler = () => {\n    setGameInviteModal(false);\n    socket.emitGameInviteCheck({\n      adminConsole\n    }, gameInviteFrom, 'decline');\n  };\n  const acceptHandler = () => {\n    socket.emitGameInviteCheck({\n      adminConsole\n    }, gameInviteFrom, 'accept');\n    setGameInviteInfo({\n      gameType: 'invite',\n      userId: gameInviteFrom\n    });\n    setIsPrivate(true);\n    setGameInviteModal(false);\n    navigate(\"/game\");\n  };\n  PressKey([\"Escape\"], () => {\n    declineHandler();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GameInviteModalBG\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GameInviteModal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GameInviteModalTxt\",\n        children: `Game Invite\\nfrom ${userList[gameInviteFrom].userDisplayName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"GameInviteModalAcceptBtn\",\n        onClick: acceptHandler,\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"GameInviteModalDeclineBtn\",\n        onClick: declineHandler,\n        children: \"Decline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(GameInviteModal, \"CJzbcpLd4RJP7R0nlHrs0p+ioxU=\", false, function () {\n  return [useSetAtom, useSetAtom, useSetAtom, useAtomValue, useAtomValue, useAtomValue, useNavigate];\n});\n_c = GameInviteModal;\nvar _c;\n$RefreshReg$(_c, \"GameInviteModal\");","map":{"version":3,"names":["useAtomValue","useSetAtom","useNavigate","chatAtom","PressKey","socket","gameInviteInfoAtom","gameinviteFromAtom","isPrivateAtom","gameInviteModalAtom","jsxDEV","_jsxDEV","Fragment","_Fragment","GameInviteModal","_s","setGameInviteModal","setIsPrivate","setGameInviteInfo","userList","userListAtom","gameInviteFrom","adminConsole","adminConsoleAtom","navigate","declineHandler","emitGameInviteCheck","acceptHandler","gameType","userId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","userDisplayName","onClick","_c","$RefreshReg$"],"sources":["/data/front/src/components/GamePage/GameInviteModal.tsx"],"sourcesContent":["import { useAtomValue, useSetAtom } from \"jotai\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as chatAtom from \"../../components/atom/ChatAtom\";\nimport { PressKey } from \"../../event/event.util\";\nimport * as socket from \"../../socket/chat.socket\";\nimport \"../../styles/GameInviteModal.css\";\nimport { gameInviteInfoAtom, gameinviteFromAtom, isPrivateAtom } from \"../atom/GameAtom\";\nimport { gameInviteModalAtom } from \"../atom/ModalAtom\";\n\nexport default function GameInviteModal() {\n  const setGameInviteModal = useSetAtom(gameInviteModalAtom);\n  const setIsPrivate = useSetAtom(isPrivateAtom);\n  const setGameInviteInfo = useSetAtom(gameInviteInfoAtom);\n  const userList = useAtomValue(chatAtom.userListAtom);\n  const gameInviteFrom = useAtomValue(gameinviteFromAtom);\n  const adminConsole = useAtomValue(chatAtom.adminConsoleAtom);\n  const navigate = useNavigate();\n\n  const declineHandler = () => {\n    setGameInviteModal(false);\n    socket.emitGameInviteCheck({ adminConsole }, gameInviteFrom, 'decline');\n  }\n\n  const acceptHandler = () => {\n    socket.emitGameInviteCheck({ adminConsole }, gameInviteFrom, 'accept');\n    setGameInviteInfo({ gameType: 'invite', userId: gameInviteFrom })\n    setIsPrivate(true);\n    setGameInviteModal(false);\n    navigate(\"/game\");\n  }\n\n  PressKey([\"Escape\"], () => {\n    declineHandler();\n  });\n\n  return (\n    <>\n      <div className=\"GameInviteModalBG\" />\n      <div className=\"GameInviteModal\">\n        <div className=\"GameInviteModalTxt\">{`Game Invite\\nfrom ${userList[gameInviteFrom].userDisplayName}`}</div>\n        <button\n          className=\"GameInviteModalAcceptBtn\"\n          onClick={acceptHandler}\n        >\n          Accept\n        </button>\n        <button\n          className=\"GameInviteModalDeclineBtn\"\n          onClick={declineHandler}\n        >\n          Decline\n        </button>\n      </div >\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}