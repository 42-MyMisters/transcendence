{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/GamePage/PingPong.tsx\",\n  _s = $RefreshSig$();\nimport \"../../styles/BackGround.css\";\nimport \"../../styles/PingPong.css\";\nimport React, { useEffect } from \"react\";\nimport * as chatAtom from \"../atom/ChatAtom\";\nimport { isGameStartedAtom, isPrivateAtom } from \"../atom/GameAtom\";\nimport { Game } from \"./Pong\";\nimport { useAtom } from \"jotai\";\nimport { useRef, useState } from \"react\";\nimport { gameResultModalAtom, isLoadingAtom } from \"../atom/ModalAtom\";\nimport { ball, Direction, HEIGHT, Hit, p1, p2, paddle, WIDTH } from \"./GameInfo\";\nimport { AdminLogPrinter } from \"../../event/event.util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// interface GameSocketDto {\n//   gameSocket: Socket;\n// };\n\nexport default function PingPong(_ref) {\n  _s();\n  let {\n    gameSocket\n  } = _ref;\n  console.log(\"gameSocket connected? \", gameSocket.connected);\n  const [upArrow, setUpArrow] = useState(false);\n  const [downArrow, setDownArrow] = useState(false);\n  const [adminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const canvas = useRef(null);\n  const [isLoading, setIsLoading] = useAtom(isLoadingAtom);\n  const [isPrivate, setIsPrivate] = useAtom(isPrivateAtom);\n  const [isGameStart, setIsGameStart] = useAtom(isGameStartedAtom);\n  // const [isQueue, setIsQueue] = useAtom(isQueueAtom);\n  const [gameResultModal, setGameResultModal] = useAtom(gameResultModalAtom);\n\n  // const [serverClientTimeDiff, setServerClientTimeDiff] = useAtom(serverClientTimeDiffAtom);\n\n  let serverClientTimeDiff = 1000;\n  let coords = {\n    paddle1Y: 225,\n    ballX: 1150 / 2,\n    ballY: 300,\n    paddle2Y: 225,\n    ballSpeedX: 0,\n    ballSpeedY: 0,\n    paddleSpeed: 0.6,\n    keyPress: [0, 0, 0, 0],\n    time: Date.now()\n  };\n  let lastUpdateTime = coords.time;\n  let requestAnimationId = 0;\n\n  // 1 sec delay for init value\n  let pingRTTmin = 2000;\n  let pingInterval;\n  const pingEvent = () => {\n    if (!isGameStart) {\n      clearInterval(pingInterval);\n    }\n    console.log(gameSocket.connected);\n    console.log(gameSocket.id);\n    console.log(gameSocket);\n    const curTime = Date.now();\n    const pingEventHandler = serverTime => {\n      const now = Date.now();\n      const pingRTT = now - curTime;\n      AdminLogPrinter(adminConsole, `\\npingRTT: ${pingRTT}ms`);\n      if (pingRTTmin > pingRTT) {\n        pingRTTmin = pingRTT;\n        const adjServerTime = serverTime + pingRTTmin / 2;\n        serverClientTimeDiff = now - adjServerTime;\n      }\n      AdminLogPrinter(adminConsole, `pingRTTmin: ${pingRTTmin}ms`);\n    };\n    gameSocket.emit(\"ping\", pingEventHandler);\n  };\n  useEffect(() => {\n    console.log(\"pingInterval\");\n    pingInterval = setInterval(pingEvent, 1000);\n    return () => {\n      console.log(\"clear pingInterval\");\n      clearInterval(pingInterval);\n    };\n  }, []);\n  const syncDataHandler = gameCoord => {\n    coords = gameCoord;\n    for (let i = 0; i < 4; i++) {\n      if (coords.keyPress[i] !== 0) {\n        coords.keyPress[i] += serverClientTimeDiff;\n      }\n    }\n    coords.time += serverClientTimeDiff;\n    update(Date.now(), coords.time);\n    console.log(\"syncData update\");\n  };\n  const scoreEventHandler = scoreInfo => {\n    p1.score = scoreInfo.p1Score;\n    p2.score = scoreInfo.p2Score;\n    coords.ballSpeedX = 0;\n    coords.ballSpeedY = 0;\n    coords.paddleSpeed = 0;\n    update(Date.now(), coords.time);\n    Game(coords, canvas);\n  };\n  const finishEventHandler = scoreInfo => {\n    console.log(\"finished!!!!!!\");\n    p1.score = scoreInfo.p1Score;\n    p2.score = scoreInfo.p2Score;\n    coords.ballSpeedX = 0;\n    coords.ballSpeedY = 0;\n    coords.paddleSpeed = 0;\n    update(Date.now(), coords.time);\n    Game(coords, canvas);\n    setGameResultModal(true);\n  };\n  const countdownEventHandler = () => {\n    AdminLogPrinter(adminConsole, \"countdown!!!\");\n  };\n  useEffect(() => {\n    gameSocket.on(\"syncData\", syncDataHandler);\n    gameSocket.on(\"scoreInfo\", scoreEventHandler);\n    gameSocket.on(\"finished\", finishEventHandler);\n    gameSocket.on(\"countdown\", countdownEventHandler);\n    return () => {\n      gameSocket.off(\"syncData\", syncDataHandler);\n      gameSocket.off(\"scoreInfo\", scoreEventHandler);\n      gameSocket.off(\"finished\", finishEventHandler);\n      gameSocket.off(\"countdown\", countdownEventHandler);\n    };\n  }, []);\n  useEffect(() => {\n    requestAnimationLoop(Date.now(), lastUpdateTime);\n    return () => {\n      cancelAnimationFrame(requestAnimationId);\n    };\n  }, []);\n\n  // // the connection is denied by the server in a middleware function\n  // gameSocket.on(\"connect_error\", (err) => {\n  //   if (err.message === \"unauthorized\") {\n  //     // handle each case\n  //   }\n  //   console.log(err.message); // prints the message associated with the error\n  // });\n\n  function requestAnimationLoop(curTime, lastUpdate) {\n    if (coords.keyPress !== null) {\n      update(curTime, lastUpdate);\n    }\n    requestAnimationId = requestAnimationFrame(() => requestAnimationLoop(Date.now(), lastUpdateTime));\n  }\n\n  // paddle update first, and then ball position update.\n  function update(curTime, lastUpdate) {\n    const dt = curTime - lastUpdate;\n    if (dt > 0) {\n      const keyPressDt = getKeyPressDt(curTime);\n      paddleUpdate(keyPressDt);\n      coords.ballX += coords.ballSpeedX * dt;\n      coords.ballY += coords.ballSpeedY * dt;\n      const isHitY = collisionCheckY();\n      const isHitX = collisionCheckX();\n      if (isHitY !== Direction.NONE) {\n        if (isHitY === Direction.UP) {\n          coords.ballY = 2 * ball.radius - coords.ballY;\n          coords.ballSpeedY = -coords.ballSpeedY;\n        } else {\n          coords.ballY = 2 * (HEIGHT - ball.radius) - coords.ballY;\n          coords.ballSpeedY = -coords.ballSpeedY;\n        }\n      }\n      if (isHitX !== Direction.NONE) {\n        if (isHitX === Direction.LEFT) {\n          if (collisionCheckP1Paddle() === Hit.PADDLE) {\n            coords.ballX = 2 * (ball.radius + paddle.width) - coords.ballX;\n            coords.ballSpeedX = -coords.ballSpeedX;\n          }\n        } else {\n          if (collisionCheckP2Paddle() === Hit.PADDLE) {\n            coords.ballX = 2 * (WIDTH - ball.radius - paddle.width) - coords.ballX;\n            coords.ballSpeedX = -coords.ballSpeedX;\n          }\n        }\n      }\n      lastUpdateTime = curTime;\n      Game(coords, canvas);\n    }\n  }\n  function getKeyPressDt(curTime) {\n    const keyPressDt = [];\n    for (let i = 0; i < 4; i++) {\n      if (coords.keyPress[i] !== 0 && curTime > coords.keyPress[i]) {\n        keyPressDt.push(curTime - coords.keyPress[i]);\n        coords.keyPress[i] = curTime;\n      } else {\n        keyPressDt.push(0);\n      }\n    }\n    return keyPressDt;\n  }\n  function paddleUpdate(keyPressDt) {\n    if (keyPressDt[0] !== 0) {\n      if (coords.paddle1Y > 0) {\n        coords.paddle1Y -= coords.paddleSpeed * keyPressDt[0];\n      }\n      if (coords.paddle1Y < 0) {\n        coords.paddle1Y = 0;\n      }\n    }\n    if (keyPressDt[1] !== 0) {\n      if (coords.paddle1Y < HEIGHT - paddle.height) {\n        coords.paddle1Y += coords.paddleSpeed * keyPressDt[1];\n      }\n      if (coords.paddle1Y > HEIGHT - paddle.height) {\n        coords.paddle1Y = HEIGHT - paddle.height;\n      }\n    }\n    if (keyPressDt[2] !== 0) {\n      if (coords.paddle2Y > 0) {\n        coords.paddle2Y -= coords.paddleSpeed * keyPressDt[2];\n      }\n      if (coords.paddle2Y < 0) {\n        coords.paddle2Y = 0;\n      }\n    }\n    if (keyPressDt[3] !== 0) {\n      if (coords.paddle2Y < HEIGHT - paddle.height) {\n        coords.paddle2Y += coords.paddleSpeed * keyPressDt[3];\n      }\n      if (coords.paddle2Y > HEIGHT - paddle.height) {\n        coords.paddle2Y = HEIGHT - paddle.height;\n      }\n    }\n  }\n  function collisionCheckX() {\n    if (coords.ballX <= ball.radius + paddle.width) {\n      return Direction.LEFT;\n    } else if (coords.ballX >= WIDTH - ball.radius - paddle.width) {\n      return Direction.RIGHT;\n    }\n    return Direction.NONE;\n  }\n  function collisionCheckY() {\n    if (coords.ballY >= HEIGHT - ball.radius) {\n      return Direction.DOWN;\n    } else if (coords.ballY <= ball.radius) {\n      return Direction.UP;\n    }\n    return Direction.NONE;\n  }\n  function collisionCheckP1Paddle() {\n    if (coords.ballY >= coords.paddle1Y && coords.ballY <= coords.paddle1Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n  function collisionCheckP2Paddle() {\n    if (coords.ballY >= coords.paddle2Y && coords.ballY <= coords.paddle2Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n  useEffect(() => {\n    // first draw\n    p1.score = 0;\n    p2.score = 0;\n    Game(coords, canvas);\n  }, []);\n  useEffect(() => {\n    function handleKeyPress(event) {\n      if (event.code === \"ArrowUp\") {\n        if (!upArrow) {\n          setUpArrow(true);\n          gameSocket.emit(\"upPress\");\n          AdminLogPrinter(adminConsole, \"up press\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        if (!downArrow) {\n          setDownArrow(true);\n          gameSocket.emit(\"downPress\");\n          AdminLogPrinter(adminConsole, \"down press\");\n        }\n      }\n    }\n    function handleKeyRelease(event) {\n      if (event.code === \"ArrowUp\") {\n        if (upArrow) {\n          setUpArrow(false);\n          gameSocket.emit(\"upRelease\");\n          AdminLogPrinter(adminConsole, \"up release\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        if (downArrow) {\n          setDownArrow(false);\n          gameSocket.emit(\"downRelease\");\n          AdminLogPrinter(adminConsole, \"down release\");\n        }\n      }\n    }\n    window.addEventListener(\"keydown\", handleKeyPress);\n    window.addEventListener(\"keyup\", handleKeyRelease);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n      window.removeEventListener(\"keyup\", handleKeyRelease);\n    };\n  }, [upArrow, downArrow]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"QueueBackGround\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas,\n      id: \"pong\",\n      width: 1150,\n      height: 600\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this);\n}\n_s(PingPong, \"mUroC7cLt+NyKilsilS6iX/sYn0=\", false, function () {\n  return [useAtom, useAtom, useAtom, useAtom, useAtom];\n});\n_c = PingPong;\nvar _c;\n$RefreshReg$(_c, \"PingPong\");","map":{"version":3,"names":["React","useEffect","chatAtom","isGameStartedAtom","isPrivateAtom","Game","useAtom","useRef","useState","gameResultModalAtom","isLoadingAtom","ball","Direction","HEIGHT","Hit","p1","p2","paddle","WIDTH","AdminLogPrinter","jsxDEV","_jsxDEV","PingPong","_ref","_s","gameSocket","console","log","connected","upArrow","setUpArrow","downArrow","setDownArrow","adminConsole","adminConsoleAtom","canvas","isLoading","setIsLoading","isPrivate","setIsPrivate","isGameStart","setIsGameStart","gameResultModal","setGameResultModal","serverClientTimeDiff","coords","paddle1Y","ballX","ballY","paddle2Y","ballSpeedX","ballSpeedY","paddleSpeed","keyPress","time","Date","now","lastUpdateTime","requestAnimationId","pingRTTmin","pingInterval","pingEvent","clearInterval","id","curTime","pingEventHandler","serverTime","pingRTT","adjServerTime","emit","setInterval","syncDataHandler","gameCoord","i","update","scoreEventHandler","scoreInfo","score","p1Score","p2Score","finishEventHandler","countdownEventHandler","on","off","requestAnimationLoop","cancelAnimationFrame","lastUpdate","requestAnimationFrame","dt","keyPressDt","getKeyPressDt","paddleUpdate","isHitY","collisionCheckY","isHitX","collisionCheckX","NONE","UP","radius","LEFT","collisionCheckP1Paddle","PADDLE","width","collisionCheckP2Paddle","push","height","RIGHT","DOWN","WALL","handleKeyPress","event","code","handleKeyRelease","window","addEventListener","removeEventListener","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/data/front/src/components/GamePage/PingPong.tsx"],"sourcesContent":["import \"../../styles/BackGround.css\";\nimport \"../../styles/PingPong.css\";\n\nimport React, { useEffect } from \"react\";\n\nimport * as chatAtom from \"../atom/ChatAtom\";\nimport { isGameStartedAtom, isPrivateAtom } from \"../atom/GameAtom\";\nimport { Game } from \"./Pong\";\n\n\nimport { useAtom } from \"jotai\";\nimport { useRef, useState } from \"react\";\nimport { gameResultModalAtom, isLoadingAtom } from \"../atom/ModalAtom\";\nimport {\n  ball,\n  Direction,\n  HEIGHT,\n  Hit,\n  p1,\n  p2,\n  paddle,\n  paddleInfo,\n  scoreInfo,\n  WIDTH,\n} from \"./GameInfo\";\n\nimport { AdminLogPrinter } from \"../../event/event.util\";\nimport { GameCoordinate } from \"../../socket/game.dto\";\nimport { Socket } from \"socket.io-client\";\n\n\n// interface GameSocketDto {\n//   gameSocket: Socket;\n// };\n\nexport default function PingPong({\n  gameSocket,\n}: {\n  gameSocket: Socket,\n}){\n  console.log(\"gameSocket connected? \",gameSocket.connected);\n\n  const [upArrow, setUpArrow] = useState(false);\n  const [downArrow, setDownArrow] = useState(false);\n  const [adminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const canvas = useRef<HTMLCanvasElement>(null);\n\n  const [isLoading, setIsLoading] = useAtom(isLoadingAtom);\n  const [isPrivate, setIsPrivate] = useAtom(isPrivateAtom);\n  const [isGameStart, setIsGameStart] = useAtom(isGameStartedAtom);\n  // const [isQueue, setIsQueue] = useAtom(isQueueAtom);\n  const [gameResultModal, setGameResultModal] = useAtom(gameResultModalAtom);\n\n  // const [serverClientTimeDiff, setServerClientTimeDiff] = useAtom(serverClientTimeDiffAtom);\n\n  let serverClientTimeDiff: number = 1000;\n\n  let coords: GameCoordinate = {\n    paddle1Y: 225,\n    ballX: 1150 / 2,\n    ballY: 300,\n    paddle2Y: 225,\n    ballSpeedX: 0,\n    ballSpeedY: 0,\n    paddleSpeed: 0.6,\n    keyPress: [0, 0, 0, 0],\n    time: Date.now(),\n  }\n\n  let lastUpdateTime: number = coords.time;\n  let requestAnimationId: number = 0;\n\n  // 1 sec delay for init value\n  let pingRTTmin: number = 2000;\n  let pingInterval: NodeJS.Timer;\n\n  const pingEvent = () => {\n    if (!isGameStart) {\n      clearInterval(pingInterval);\n    }\n    console.log(gameSocket.connected);\n    console.log(gameSocket.id);\n    console.log(gameSocket);\n    const curTime = Date.now();\n    const pingEventHandler = (serverTime: number) => {\n      const now = Date.now();\n      const pingRTT = now - curTime;\n      AdminLogPrinter(adminConsole, `\\npingRTT: ${pingRTT}ms`);\n      if (pingRTTmin > pingRTT) {\n        pingRTTmin = pingRTT;\n        const adjServerTime = serverTime + pingRTTmin / 2;\n        serverClientTimeDiff = now - adjServerTime\n      }\n      AdminLogPrinter(adminConsole, `pingRTTmin: ${pingRTTmin}ms`);\n    };\n    gameSocket.emit(\"ping\", pingEventHandler);\n  };\n\n  useEffect(() => {\n    console.log(\"pingInterval\");\n    pingInterval = setInterval(pingEvent, 1000);\n    return () => {\n      console.log(\"clear pingInterval\");\n      clearInterval(pingInterval);\n    }\n  }, []);\n\n\n  const syncDataHandler = (gameCoord: GameCoordinate) => {\n    coords = gameCoord;\n    for (let i = 0; i < 4; i++) {\n      if (coords.keyPress[i] !== 0) {\n        coords.keyPress[i] += serverClientTimeDiff;\n      }\n    }\n    coords.time += serverClientTimeDiff;\n    update(Date.now(), coords.time);\n    console.log(\"syncData update\");\n  };\n\n  const scoreEventHandler = (scoreInfo: scoreInfo) => {\n    p1.score = scoreInfo.p1Score;\n    p2.score = scoreInfo.p2Score;\n    coords.ballSpeedX = 0;\n    coords.ballSpeedY = 0;\n    coords.paddleSpeed = 0;\n    update(Date.now(), coords.time);\n    Game(coords, canvas);\n  };\n\n  const finishEventHandler = (scoreInfo: scoreInfo) => {\n    console.log(\"finished!!!!!!\");\n    p1.score = scoreInfo.p1Score;\n    p2.score = scoreInfo.p2Score;\n    coords.ballSpeedX = 0;\n    coords.ballSpeedY = 0;\n    coords.paddleSpeed = 0;\n    update(Date.now(), coords.time);\n    Game(coords, canvas);\n    setGameResultModal(true);\n  };\n\n  const countdownEventHandler = () => {\n    AdminLogPrinter(adminConsole, \"countdown!!!\");\n  }\n\n  useEffect(() => {\n    gameSocket.on(\"syncData\", syncDataHandler);\n    gameSocket.on(\"scoreInfo\", scoreEventHandler);\n    gameSocket.on(\"finished\", finishEventHandler);\n    gameSocket.on(\"countdown\", countdownEventHandler);\n    return () => {\n      gameSocket.off(\"syncData\", syncDataHandler);\n      gameSocket.off(\"scoreInfo\", scoreEventHandler);\n      gameSocket.off(\"finished\", finishEventHandler);\n      gameSocket.off(\"countdown\", countdownEventHandler);\n    };\n  }, []);\n\n  useEffect(() => {\n    requestAnimationLoop(Date.now(), lastUpdateTime);\n    return () => {\n      cancelAnimationFrame(requestAnimationId);\n    }\n  }, []);\n\n  // // the connection is denied by the server in a middleware function\n  // gameSocket.on(\"connect_error\", (err) => {\n  //   if (err.message === \"unauthorized\") {\n  //     // handle each case\n  //   }\n  //   console.log(err.message); // prints the message associated with the error\n  // });\n\n  function requestAnimationLoop(curTime: number, lastUpdate: number) {\n    if (coords.keyPress !== null) {\n      update(curTime, lastUpdate);\n    }\n    requestAnimationId = requestAnimationFrame(() => requestAnimationLoop(Date.now(), lastUpdateTime));\n  }\n\n  // paddle update first, and then ball position update.\n  function update(curTime: number, lastUpdate: number) {\n    const dt = curTime - lastUpdate;\n    if (dt > 0) {\n      const keyPressDt: number[] = getKeyPressDt(curTime);\n\n      paddleUpdate(keyPressDt);\n      coords.ballX += coords.ballSpeedX * dt;\n      coords.ballY += coords.ballSpeedY * dt;\n      const isHitY = collisionCheckY();\n      const isHitX = collisionCheckX();\n      if (isHitY !== Direction.NONE) {\n        if (isHitY === Direction.UP) {\n          coords.ballY = 2 * ball.radius - coords.ballY;\n          coords.ballSpeedY = -coords.ballSpeedY;\n        } else {\n          coords.ballY = 2 * (HEIGHT - ball.radius) - coords.ballY;\n          coords.ballSpeedY = -coords.ballSpeedY;\n        }\n      }\n      if (isHitX !== Direction.NONE) {\n        if (isHitX === Direction.LEFT) {\n          if (collisionCheckP1Paddle() === Hit.PADDLE) {\n            coords.ballX = 2 * (ball.radius + paddle.width) - coords.ballX;\n            coords.ballSpeedX = -coords.ballSpeedX;\n          }\n        } else {\n          if (collisionCheckP2Paddle() === Hit.PADDLE) {\n            coords.ballX = 2 * (WIDTH - ball.radius - paddle.width) - coords.ballX;\n            coords.ballSpeedX = -coords.ballSpeedX;\n          }\n        }\n      }\n      lastUpdateTime = curTime;\n      Game(coords, canvas);\n    }\n  }\n\n  function getKeyPressDt(curTime: number): number[] {\n    const keyPressDt: number[] = [];\n    for (let i = 0; i < 4; i++) {\n      if (coords.keyPress[i] !== 0 && curTime > coords.keyPress[i]) {\n        keyPressDt.push(curTime - coords.keyPress[i]);\n        coords.keyPress[i] = curTime;\n      } else {\n        keyPressDt.push(0);\n      }\n    }\n    return keyPressDt;\n  }\n\n  function paddleUpdate(keyPressDt: number[]) {\n    if (keyPressDt[0] !== 0) {\n      if (coords.paddle1Y > 0) {\n        coords.paddle1Y -= coords.paddleSpeed * keyPressDt[0];\n      }\n      if (coords.paddle1Y < 0) {\n        coords.paddle1Y = 0;\n      }\n    }\n    if (keyPressDt[1] !== 0) {\n      if (coords.paddle1Y < HEIGHT - paddle.height) {\n        coords.paddle1Y += coords.paddleSpeed * keyPressDt[1];\n      }\n      if (coords.paddle1Y > HEIGHT - paddle.height) {\n        coords.paddle1Y = HEIGHT - paddle.height;\n      }\n    }\n    if (keyPressDt[2] !== 0) {\n      if (coords.paddle2Y > 0) {\n        coords.paddle2Y -= coords.paddleSpeed * keyPressDt[2];\n      }\n      if (coords.paddle2Y < 0) {\n        coords.paddle2Y = 0;\n      }\n    }\n    if (keyPressDt[3] !== 0) {\n      if (coords.paddle2Y < HEIGHT - paddle.height) {\n        coords.paddle2Y += coords.paddleSpeed * keyPressDt[3];\n      }\n      if (coords.paddle2Y > HEIGHT - paddle.height) {\n        coords.paddle2Y = HEIGHT - paddle.height;\n      }\n    }\n  }\n\n  function collisionCheckX() {\n    if (coords.ballX <= ball.radius + paddle.width) {\n      return Direction.LEFT;\n    } else if (coords.ballX >= WIDTH - ball.radius - paddle.width) {\n      return Direction.RIGHT;\n    }\n    return Direction.NONE;\n  }\n\n  function collisionCheckY() {\n    if (coords.ballY >= HEIGHT - ball.radius) {\n      return Direction.DOWN;\n    } else if (coords.ballY <= ball.radius) {\n      return Direction.UP;\n    }\n    return Direction.NONE;\n  }\n\n  function collisionCheckP1Paddle() {\n    if (coords.ballY >= coords.paddle1Y && coords.ballY <= coords.paddle1Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n\n  function collisionCheckP2Paddle() {\n    if (coords.ballY >= coords.paddle2Y && coords.ballY <= coords.paddle2Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n\n  useEffect(() => {\n    // first draw\n    p1.score = 0;\n    p2.score = 0;\n    Game(coords, canvas);\n  }, []);\n\n  useEffect(() => {\n    function handleKeyPress(event: globalThis.KeyboardEvent) {\n      if (event.code === \"ArrowUp\") {\n        if (!upArrow) {\n          setUpArrow(true);\n          gameSocket.emit(\"upPress\");\n          AdminLogPrinter(adminConsole, \"up press\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        if (!downArrow) {\n          setDownArrow(true);\n          gameSocket.emit(\"downPress\");\n          AdminLogPrinter(adminConsole, \"down press\");\n        }\n      }\n    }\n\n    function handleKeyRelease(event: globalThis.KeyboardEvent) {\n      if (event.code === \"ArrowUp\") {\n        if (upArrow) {\n          setUpArrow(false);\n          gameSocket.emit(\"upRelease\");\n          AdminLogPrinter(adminConsole, \"up release\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        if (downArrow) {\n          setDownArrow(false);\n          gameSocket.emit(\"downRelease\");\n          AdminLogPrinter(adminConsole, \"down release\");\n        }\n      }\n    }\n    window.addEventListener(\"keydown\", handleKeyPress);\n    window.addEventListener(\"keyup\", handleKeyRelease);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n      window.removeEventListener(\"keyup\", handleKeyRelease);\n    };\n  }, [upArrow, downArrow]);\n\n  return (\n    <div className=\"QueueBackGround\">\n      <canvas ref={canvas} id=\"pong\" width={1150} height={600}></canvas>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAO,6BAA6B;AACpC,OAAO,2BAA2B;AAElC,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,OAAO,KAAKC,QAAQ,MAAM,kBAAkB;AAC5C,SAASC,iBAAiB,EAAEC,aAAa,QAAQ,kBAAkB;AACnE,SAASC,IAAI,QAAQ,QAAQ;AAG7B,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,SAASC,mBAAmB,EAAEC,aAAa,QAAQ,mBAAmB;AACtE,SACEC,IAAI,EACJC,SAAS,EACTC,MAAM,EACNC,GAAG,EACHC,EAAE,EACFC,EAAE,EACFC,MAAM,EAGNC,KAAK,QACA,YAAY;AAEnB,SAASC,eAAe,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKzD;AACA;AACA;;AAEA,eAAe,SAASC,QAAQA,CAAAC,IAAA,EAI9B;EAAAC,EAAA;EAAA,IAJ+B;IAC/BC;EAGF,CAAC,GAAAF,IAAA;EACCG,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAACF,UAAU,CAACG,SAAS,CAAC;EAE1D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACyB,YAAY,CAAC,GAAG3B,OAAO,CAACJ,QAAQ,CAACgC,gBAAgB,CAAC;EACzD,MAAMC,MAAM,GAAG5B,MAAM,CAAoB,IAAI,CAAC;EAE9C,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG/B,OAAO,CAACI,aAAa,CAAC;EACxD,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAGjC,OAAO,CAACF,aAAa,CAAC;EACxD,MAAM,CAACoC,WAAW,EAAEC,cAAc,CAAC,GAAGnC,OAAO,CAACH,iBAAiB,CAAC;EAChE;EACA,MAAM,CAACuC,eAAe,EAAEC,kBAAkB,CAAC,GAAGrC,OAAO,CAACG,mBAAmB,CAAC;;EAE1E;;EAEA,IAAImC,oBAA4B,GAAG,IAAI;EAEvC,IAAIC,MAAsB,GAAG;IAC3BC,QAAQ,EAAE,GAAG;IACbC,KAAK,EAAE,IAAI,GAAG,CAAC;IACfC,KAAK,EAAE,GAAG;IACVC,QAAQ,EAAE,GAAG;IACbC,UAAU,EAAE,CAAC;IACbC,UAAU,EAAE,CAAC;IACbC,WAAW,EAAE,GAAG;IAChBC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACtBC,IAAI,EAAEC,IAAI,CAACC,GAAG;EAChB,CAAC;EAED,IAAIC,cAAsB,GAAGZ,MAAM,CAACS,IAAI;EACxC,IAAII,kBAA0B,GAAG,CAAC;;EAElC;EACA,IAAIC,UAAkB,GAAG,IAAI;EAC7B,IAAIC,YAA0B;EAE9B,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAI,CAACrB,WAAW,EAAE;MAChBsB,aAAa,CAACF,YAAY,CAAC;IAC7B;IACAlC,OAAO,CAACC,GAAG,CAACF,UAAU,CAACG,SAAS,CAAC;IACjCF,OAAO,CAACC,GAAG,CAACF,UAAU,CAACsC,EAAE,CAAC;IAC1BrC,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;IACvB,MAAMuC,OAAO,GAAGT,IAAI,CAACC,GAAG,EAAE;IAC1B,MAAMS,gBAAgB,GAAIC,UAAkB,IAAK;MAC/C,MAAMV,GAAG,GAAGD,IAAI,CAACC,GAAG,EAAE;MACtB,MAAMW,OAAO,GAAGX,GAAG,GAAGQ,OAAO;MAC7B7C,eAAe,CAACc,YAAY,EAAG,cAAakC,OAAQ,IAAG,CAAC;MACxD,IAAIR,UAAU,GAAGQ,OAAO,EAAE;QACxBR,UAAU,GAAGQ,OAAO;QACpB,MAAMC,aAAa,GAAGF,UAAU,GAAGP,UAAU,GAAG,CAAC;QACjDf,oBAAoB,GAAGY,GAAG,GAAGY,aAAa;MAC5C;MACAjD,eAAe,CAACc,YAAY,EAAG,eAAc0B,UAAW,IAAG,CAAC;IAC9D,CAAC;IACDlC,UAAU,CAAC4C,IAAI,CAAC,MAAM,EAAEJ,gBAAgB,CAAC;EAC3C,CAAC;EAEDhE,SAAS,CAAC,MAAM;IACdyB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BiC,YAAY,GAAGU,WAAW,CAACT,SAAS,EAAE,IAAI,CAAC;IAC3C,OAAO,MAAM;MACXnC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjCmC,aAAa,CAACF,YAAY,CAAC;IAC7B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMW,eAAe,GAAIC,SAAyB,IAAK;IACrD3B,MAAM,GAAG2B,SAAS;IAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,IAAI5B,MAAM,CAACQ,QAAQ,CAACoB,CAAC,CAAC,KAAK,CAAC,EAAE;QAC5B5B,MAAM,CAACQ,QAAQ,CAACoB,CAAC,CAAC,IAAI7B,oBAAoB;MAC5C;IACF;IACAC,MAAM,CAACS,IAAI,IAAIV,oBAAoB;IACnC8B,MAAM,CAACnB,IAAI,CAACC,GAAG,EAAE,EAAEX,MAAM,CAACS,IAAI,CAAC;IAC/B5B,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAChC,CAAC;EAED,MAAMgD,iBAAiB,GAAIC,SAAoB,IAAK;IAClD7D,EAAE,CAAC8D,KAAK,GAAGD,SAAS,CAACE,OAAO;IAC5B9D,EAAE,CAAC6D,KAAK,GAAGD,SAAS,CAACG,OAAO;IAC5BlC,MAAM,CAACK,UAAU,GAAG,CAAC;IACrBL,MAAM,CAACM,UAAU,GAAG,CAAC;IACrBN,MAAM,CAACO,WAAW,GAAG,CAAC;IACtBsB,MAAM,CAACnB,IAAI,CAACC,GAAG,EAAE,EAAEX,MAAM,CAACS,IAAI,CAAC;IAC/BjD,IAAI,CAACwC,MAAM,EAAEV,MAAM,CAAC;EACtB,CAAC;EAED,MAAM6C,kBAAkB,GAAIJ,SAAoB,IAAK;IACnDlD,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BZ,EAAE,CAAC8D,KAAK,GAAGD,SAAS,CAACE,OAAO;IAC5B9D,EAAE,CAAC6D,KAAK,GAAGD,SAAS,CAACG,OAAO;IAC5BlC,MAAM,CAACK,UAAU,GAAG,CAAC;IACrBL,MAAM,CAACM,UAAU,GAAG,CAAC;IACrBN,MAAM,CAACO,WAAW,GAAG,CAAC;IACtBsB,MAAM,CAACnB,IAAI,CAACC,GAAG,EAAE,EAAEX,MAAM,CAACS,IAAI,CAAC;IAC/BjD,IAAI,CAACwC,MAAM,EAAEV,MAAM,CAAC;IACpBQ,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMsC,qBAAqB,GAAGA,CAAA,KAAM;IAClC9D,eAAe,CAACc,YAAY,EAAE,cAAc,CAAC;EAC/C,CAAC;EAEDhC,SAAS,CAAC,MAAM;IACdwB,UAAU,CAACyD,EAAE,CAAC,UAAU,EAAEX,eAAe,CAAC;IAC1C9C,UAAU,CAACyD,EAAE,CAAC,WAAW,EAAEP,iBAAiB,CAAC;IAC7ClD,UAAU,CAACyD,EAAE,CAAC,UAAU,EAAEF,kBAAkB,CAAC;IAC7CvD,UAAU,CAACyD,EAAE,CAAC,WAAW,EAAED,qBAAqB,CAAC;IACjD,OAAO,MAAM;MACXxD,UAAU,CAAC0D,GAAG,CAAC,UAAU,EAAEZ,eAAe,CAAC;MAC3C9C,UAAU,CAAC0D,GAAG,CAAC,WAAW,EAAER,iBAAiB,CAAC;MAC9ClD,UAAU,CAAC0D,GAAG,CAAC,UAAU,EAAEH,kBAAkB,CAAC;MAC9CvD,UAAU,CAAC0D,GAAG,CAAC,WAAW,EAAEF,qBAAqB,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENhF,SAAS,CAAC,MAAM;IACdmF,oBAAoB,CAAC7B,IAAI,CAACC,GAAG,EAAE,EAAEC,cAAc,CAAC;IAChD,OAAO,MAAM;MACX4B,oBAAoB,CAAC3B,kBAAkB,CAAC;IAC1C,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,SAAS0B,oBAAoBA,CAACpB,OAAe,EAAEsB,UAAkB,EAAE;IACjE,IAAIzC,MAAM,CAACQ,QAAQ,KAAK,IAAI,EAAE;MAC5BqB,MAAM,CAACV,OAAO,EAAEsB,UAAU,CAAC;IAC7B;IACA5B,kBAAkB,GAAG6B,qBAAqB,CAAC,MAAMH,oBAAoB,CAAC7B,IAAI,CAACC,GAAG,EAAE,EAAEC,cAAc,CAAC,CAAC;EACpG;;EAEA;EACA,SAASiB,MAAMA,CAACV,OAAe,EAAEsB,UAAkB,EAAE;IACnD,MAAME,EAAE,GAAGxB,OAAO,GAAGsB,UAAU;IAC/B,IAAIE,EAAE,GAAG,CAAC,EAAE;MACV,MAAMC,UAAoB,GAAGC,aAAa,CAAC1B,OAAO,CAAC;MAEnD2B,YAAY,CAACF,UAAU,CAAC;MACxB5C,MAAM,CAACE,KAAK,IAAIF,MAAM,CAACK,UAAU,GAAGsC,EAAE;MACtC3C,MAAM,CAACG,KAAK,IAAIH,MAAM,CAACM,UAAU,GAAGqC,EAAE;MACtC,MAAMI,MAAM,GAAGC,eAAe,EAAE;MAChC,MAAMC,MAAM,GAAGC,eAAe,EAAE;MAChC,IAAIH,MAAM,KAAKhF,SAAS,CAACoF,IAAI,EAAE;QAC7B,IAAIJ,MAAM,KAAKhF,SAAS,CAACqF,EAAE,EAAE;UAC3BpD,MAAM,CAACG,KAAK,GAAG,CAAC,GAAGrC,IAAI,CAACuF,MAAM,GAAGrD,MAAM,CAACG,KAAK;UAC7CH,MAAM,CAACM,UAAU,GAAG,CAACN,MAAM,CAACM,UAAU;QACxC,CAAC,MAAM;UACLN,MAAM,CAACG,KAAK,GAAG,CAAC,IAAInC,MAAM,GAAGF,IAAI,CAACuF,MAAM,CAAC,GAAGrD,MAAM,CAACG,KAAK;UACxDH,MAAM,CAACM,UAAU,GAAG,CAACN,MAAM,CAACM,UAAU;QACxC;MACF;MACA,IAAI2C,MAAM,KAAKlF,SAAS,CAACoF,IAAI,EAAE;QAC7B,IAAIF,MAAM,KAAKlF,SAAS,CAACuF,IAAI,EAAE;UAC7B,IAAIC,sBAAsB,EAAE,KAAKtF,GAAG,CAACuF,MAAM,EAAE;YAC3CxD,MAAM,CAACE,KAAK,GAAG,CAAC,IAAIpC,IAAI,CAACuF,MAAM,GAAGjF,MAAM,CAACqF,KAAK,CAAC,GAAGzD,MAAM,CAACE,KAAK;YAC9DF,MAAM,CAACK,UAAU,GAAG,CAACL,MAAM,CAACK,UAAU;UACxC;QACF,CAAC,MAAM;UACL,IAAIqD,sBAAsB,EAAE,KAAKzF,GAAG,CAACuF,MAAM,EAAE;YAC3CxD,MAAM,CAACE,KAAK,GAAG,CAAC,IAAI7B,KAAK,GAAGP,IAAI,CAACuF,MAAM,GAAGjF,MAAM,CAACqF,KAAK,CAAC,GAAGzD,MAAM,CAACE,KAAK;YACtEF,MAAM,CAACK,UAAU,GAAG,CAACL,MAAM,CAACK,UAAU;UACxC;QACF;MACF;MACAO,cAAc,GAAGO,OAAO;MACxB3D,IAAI,CAACwC,MAAM,EAAEV,MAAM,CAAC;IACtB;EACF;EAEA,SAASuD,aAAaA,CAAC1B,OAAe,EAAY;IAChD,MAAMyB,UAAoB,GAAG,EAAE;IAC/B,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,IAAI5B,MAAM,CAACQ,QAAQ,CAACoB,CAAC,CAAC,KAAK,CAAC,IAAIT,OAAO,GAAGnB,MAAM,CAACQ,QAAQ,CAACoB,CAAC,CAAC,EAAE;QAC5DgB,UAAU,CAACe,IAAI,CAACxC,OAAO,GAAGnB,MAAM,CAACQ,QAAQ,CAACoB,CAAC,CAAC,CAAC;QAC7C5B,MAAM,CAACQ,QAAQ,CAACoB,CAAC,CAAC,GAAGT,OAAO;MAC9B,CAAC,MAAM;QACLyB,UAAU,CAACe,IAAI,CAAC,CAAC,CAAC;MACpB;IACF;IACA,OAAOf,UAAU;EACnB;EAEA,SAASE,YAAYA,CAACF,UAAoB,EAAE;IAC1C,IAAIA,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;MACvB,IAAI5C,MAAM,CAACC,QAAQ,GAAG,CAAC,EAAE;QACvBD,MAAM,CAACC,QAAQ,IAAID,MAAM,CAACO,WAAW,GAAGqC,UAAU,CAAC,CAAC,CAAC;MACvD;MACA,IAAI5C,MAAM,CAACC,QAAQ,GAAG,CAAC,EAAE;QACvBD,MAAM,CAACC,QAAQ,GAAG,CAAC;MACrB;IACF;IACA,IAAI2C,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;MACvB,IAAI5C,MAAM,CAACC,QAAQ,GAAGjC,MAAM,GAAGI,MAAM,CAACwF,MAAM,EAAE;QAC5C5D,MAAM,CAACC,QAAQ,IAAID,MAAM,CAACO,WAAW,GAAGqC,UAAU,CAAC,CAAC,CAAC;MACvD;MACA,IAAI5C,MAAM,CAACC,QAAQ,GAAGjC,MAAM,GAAGI,MAAM,CAACwF,MAAM,EAAE;QAC5C5D,MAAM,CAACC,QAAQ,GAAGjC,MAAM,GAAGI,MAAM,CAACwF,MAAM;MAC1C;IACF;IACA,IAAIhB,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;MACvB,IAAI5C,MAAM,CAACI,QAAQ,GAAG,CAAC,EAAE;QACvBJ,MAAM,CAACI,QAAQ,IAAIJ,MAAM,CAACO,WAAW,GAAGqC,UAAU,CAAC,CAAC,CAAC;MACvD;MACA,IAAI5C,MAAM,CAACI,QAAQ,GAAG,CAAC,EAAE;QACvBJ,MAAM,CAACI,QAAQ,GAAG,CAAC;MACrB;IACF;IACA,IAAIwC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;MACvB,IAAI5C,MAAM,CAACI,QAAQ,GAAGpC,MAAM,GAAGI,MAAM,CAACwF,MAAM,EAAE;QAC5C5D,MAAM,CAACI,QAAQ,IAAIJ,MAAM,CAACO,WAAW,GAAGqC,UAAU,CAAC,CAAC,CAAC;MACvD;MACA,IAAI5C,MAAM,CAACI,QAAQ,GAAGpC,MAAM,GAAGI,MAAM,CAACwF,MAAM,EAAE;QAC5C5D,MAAM,CAACI,QAAQ,GAAGpC,MAAM,GAAGI,MAAM,CAACwF,MAAM;MAC1C;IACF;EACF;EAEA,SAASV,eAAeA,CAAA,EAAG;IACzB,IAAIlD,MAAM,CAACE,KAAK,IAAIpC,IAAI,CAACuF,MAAM,GAAGjF,MAAM,CAACqF,KAAK,EAAE;MAC9C,OAAO1F,SAAS,CAACuF,IAAI;IACvB,CAAC,MAAM,IAAItD,MAAM,CAACE,KAAK,IAAI7B,KAAK,GAAGP,IAAI,CAACuF,MAAM,GAAGjF,MAAM,CAACqF,KAAK,EAAE;MAC7D,OAAO1F,SAAS,CAAC8F,KAAK;IACxB;IACA,OAAO9F,SAAS,CAACoF,IAAI;EACvB;EAEA,SAASH,eAAeA,CAAA,EAAG;IACzB,IAAIhD,MAAM,CAACG,KAAK,IAAInC,MAAM,GAAGF,IAAI,CAACuF,MAAM,EAAE;MACxC,OAAOtF,SAAS,CAAC+F,IAAI;IACvB,CAAC,MAAM,IAAI9D,MAAM,CAACG,KAAK,IAAIrC,IAAI,CAACuF,MAAM,EAAE;MACtC,OAAOtF,SAAS,CAACqF,EAAE;IACrB;IACA,OAAOrF,SAAS,CAACoF,IAAI;EACvB;EAEA,SAASI,sBAAsBA,CAAA,EAAG;IAChC,IAAIvD,MAAM,CAACG,KAAK,IAAIH,MAAM,CAACC,QAAQ,IAAID,MAAM,CAACG,KAAK,IAAIH,MAAM,CAACC,QAAQ,GAAG7B,MAAM,CAACwF,MAAM,EAAE;MACtF,OAAO3F,GAAG,CAACuF,MAAM;IACnB;IACA,OAAOvF,GAAG,CAAC8F,IAAI;EACjB;EAEA,SAASL,sBAAsBA,CAAA,EAAG;IAChC,IAAI1D,MAAM,CAACG,KAAK,IAAIH,MAAM,CAACI,QAAQ,IAAIJ,MAAM,CAACG,KAAK,IAAIH,MAAM,CAACI,QAAQ,GAAGhC,MAAM,CAACwF,MAAM,EAAE;MACtF,OAAO3F,GAAG,CAACuF,MAAM;IACnB;IACA,OAAOvF,GAAG,CAAC8F,IAAI;EACjB;EAEA3G,SAAS,CAAC,MAAM;IACd;IACAc,EAAE,CAAC8D,KAAK,GAAG,CAAC;IACZ7D,EAAE,CAAC6D,KAAK,GAAG,CAAC;IACZxE,IAAI,CAACwC,MAAM,EAAEV,MAAM,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAENlC,SAAS,CAAC,MAAM;IACd,SAAS4G,cAAcA,CAACC,KAA+B,EAAE;MACvD,IAAIA,KAAK,CAACC,IAAI,KAAK,SAAS,EAAE;QAC5B,IAAI,CAAClF,OAAO,EAAE;UACZC,UAAU,CAAC,IAAI,CAAC;UAChBL,UAAU,CAAC4C,IAAI,CAAC,SAAS,CAAC;UAC1BlD,eAAe,CAACc,YAAY,EAAE,UAAU,CAAC;QAC3C;MACF,CAAC,MAAM,IAAI6E,KAAK,CAACC,IAAI,KAAK,WAAW,EAAE;QACrC,IAAI,CAAChF,SAAS,EAAE;UACdC,YAAY,CAAC,IAAI,CAAC;UAClBP,UAAU,CAAC4C,IAAI,CAAC,WAAW,CAAC;UAC5BlD,eAAe,CAACc,YAAY,EAAE,YAAY,CAAC;QAC7C;MACF;IACF;IAEA,SAAS+E,gBAAgBA,CAACF,KAA+B,EAAE;MACzD,IAAIA,KAAK,CAACC,IAAI,KAAK,SAAS,EAAE;QAC5B,IAAIlF,OAAO,EAAE;UACXC,UAAU,CAAC,KAAK,CAAC;UACjBL,UAAU,CAAC4C,IAAI,CAAC,WAAW,CAAC;UAC5BlD,eAAe,CAACc,YAAY,EAAE,YAAY,CAAC;QAC7C;MACF,CAAC,MAAM,IAAI6E,KAAK,CAACC,IAAI,KAAK,WAAW,EAAE;QACrC,IAAIhF,SAAS,EAAE;UACbC,YAAY,CAAC,KAAK,CAAC;UACnBP,UAAU,CAAC4C,IAAI,CAAC,aAAa,CAAC;UAC9BlD,eAAe,CAACc,YAAY,EAAE,cAAc,CAAC;QAC/C;MACF;IACF;IACAgF,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEL,cAAc,CAAC;IAClDI,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEF,gBAAgB,CAAC;IAElD,OAAO,MAAM;MACXC,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEN,cAAc,CAAC;MACrDI,MAAM,CAACE,mBAAmB,CAAC,OAAO,EAAEH,gBAAgB,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,CAACnF,OAAO,EAAEE,SAAS,CAAC,CAAC;EAExB,oBACEV,OAAA;IAAK+F,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BhG,OAAA;MAAQiG,GAAG,EAAEnF,MAAO;MAAC4B,EAAE,EAAC,MAAM;MAACuC,KAAK,EAAE,IAAK;MAACG,MAAM,EAAE;IAAI;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAU;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC9D;AAEV;AAAClG,EAAA,CA7TuBF,QAAQ;EAAA,QASPhB,OAAO,EAGIA,OAAO,EACPA,OAAO,EACHA,OAAO,EAECA,OAAO;AAAA;AAAAqH,EAAA,GAhB/BrG,QAAQ;AAAA,IAAAqG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}