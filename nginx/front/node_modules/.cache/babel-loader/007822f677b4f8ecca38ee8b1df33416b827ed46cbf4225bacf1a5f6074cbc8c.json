{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/GamePage/PingPong.tsx\",\n  _s = $RefreshSig$();\nimport \"../../styles/BackGround.css\";\nimport \"../../styles/PingPong.css\";\nimport { useEffect } from \"react\";\nimport * as chatAtom from \"../atom/ChatAtom\";\nimport { GameMode, gameModeForDisplayAtom, GamePlayer, gamePlayerAtom, gameSocketAtom, gameWinnerAtom } from \"../atom/GameAtom\";\nimport { Game } from \"./Pong\";\nimport { useAtom, useAtomValue, useSetAtom } from \"jotai\";\nimport { useRef, useState } from \"react\";\nimport { gameResultModalAtom } from \"../atom/ModalAtom\";\nimport { ball, HEIGHT, paddle, player1, player2, WIDTH } from \"./GameInfo\";\nimport { AdminLogPrinter } from \"../../event/event.util\";\nimport { Direction, Hit } from \"../../socket/game.dto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PingPong() {\n  _s();\n  const canvas = useRef(null);\n  const [adminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const [upArrow, setUpArrow] = useState(false);\n  const [downArrow, setDownArrow] = useState(false);\n  const [countdown, setCountdown] = useState(0);\n  const gameSocket = useAtomValue(gameSocketAtom);\n  const gamePlayer = useAtomValue(gamePlayerAtom);\n  const setGameWinner = useSetAtom(gameWinnerAtom);\n  const setGameResultModal = useSetAtom(gameResultModalAtom);\n  const gameModeForDisplay = useAtomValue(gameModeForDisplayAtom);\n  let serverClientTimeDiff = 400;\n  const coords = {\n    paddle1Y: 225,\n    ballX: 1150 / 2,\n    ballY: 300,\n    paddle2Y: 225,\n    ballSpeedX: 0,\n    ballSpeedY: 0,\n    paddleSpeed: 0.6,\n    keyPress: [0, 0, 0, 0],\n    time: Date.now()\n  };\n  let lastUpdateTime = coords.time;\n  let requestAnimationId = 0;\n\n  // 400ms delay for init value\n  let pingRTTmin = 800;\n  let pingInterval;\n  const pingEvent = () => {\n    const curTime = Date.now();\n    const pingEventHandler = serverTime => {\n      const now = Date.now();\n      const pingRTT = now - curTime;\n      AdminLogPrinter(adminConsole, `pingRTT: ${pingRTT}ms`);\n      if (pingRTTmin > pingRTT) {\n        pingRTTmin = pingRTT;\n        const adjServerTime = serverTime + pingRTTmin / 2;\n        serverClientTimeDiff = now - adjServerTime;\n      }\n    };\n    gameSocket.emit(\"ping\", pingEventHandler);\n  };\n  useEffect(() => {\n    AdminLogPrinter(adminConsole, \"pingInterval\");\n    pingInterval = setInterval(pingEvent, 1000);\n    return () => {\n      AdminLogPrinter(adminConsole, \"clear pingInterval\");\n      clearInterval(pingInterval);\n    };\n  }, []);\n  const setCoords = gameCoord => {\n    coords.paddle1Y = gameCoord.paddle1Y;\n    coords.ballX = gameCoord.ballX;\n    coords.ballY = gameCoord.ballY;\n    coords.paddle2Y = gameCoord.paddle2Y;\n    coords.ballSpeedX = gameCoord.ballSpeedX;\n    coords.ballSpeedY = gameCoord.ballSpeedY;\n    coords.paddleSpeed = gameCoord.paddleSpeed;\n    coords.time = gameCoord.time;\n    for (let i = 0; i < 4; i++) {\n      coords.keyPress[i] = gameCoord.keyPress[i];\n    }\n  };\n  const syncDataHandler = gameCoord => {\n    for (let i = 0; i < 4; i++) {\n      if (gameCoord.keyPress[i] !== 0) {\n        gameCoord.keyPress[i] += serverClientTimeDiff;\n      }\n    }\n    if (gamePlayer === GamePlayer.player2) {\n      gameCoord.ballX = WIDTH - gameCoord.ballX;\n      gameCoord.ballSpeedX = -gameCoord.ballSpeedX;\n      const tmpPaddle1Y = gameCoord.paddle1Y;\n      gameCoord.paddle1Y = gameCoord.paddle2Y;\n      gameCoord.paddle2Y = tmpPaddle1Y;\n      const tmpUp = gameCoord.keyPress[0];\n      const tmpDown = gameCoord.keyPress[1];\n      gameCoord.keyPress[0] = gameCoord.keyPress[2];\n      gameCoord.keyPress[1] = gameCoord.keyPress[3];\n      gameCoord.keyPress[2] = tmpUp;\n      gameCoord.keyPress[3] = tmpDown;\n    }\n    gameCoord.time += serverClientTimeDiff;\n    setCoords(gameCoord);\n    update(Date.now(), gameCoord.time);\n  };\n  const scoreEventHandler = _ref => {\n    let {\n      gameCoord,\n      scoreInfo\n    } = _ref;\n    if (gamePlayer === GamePlayer.player2) {\n      player1.score = scoreInfo.p2Score;\n      player2.score = scoreInfo.p1Score;\n    } else {\n      player1.score = scoreInfo.p1Score;\n      player2.score = scoreInfo.p2Score;\n    }\n    for (let i = 0; i < 4; i++) {\n      if (gameCoord.keyPress[i] !== 0) {\n        gameCoord.keyPress[i] += serverClientTimeDiff;\n      }\n    }\n    if (gamePlayer === GamePlayer.player2) {\n      gameCoord.ballX = WIDTH - gameCoord.ballX;\n      gameCoord.ballSpeedX = -gameCoord.ballSpeedX;\n      const tmpPaddle1Y = gameCoord.paddle1Y;\n      gameCoord.paddle1Y = gameCoord.paddle2Y;\n      gameCoord.paddle2Y = tmpPaddle1Y;\n      const tmpUp = gameCoord.keyPress[0];\n      const tmpDown = gameCoord.keyPress[1];\n      gameCoord.keyPress[0] = gameCoord.keyPress[2];\n      gameCoord.keyPress[1] = gameCoord.keyPress[3];\n      gameCoord.keyPress[2] = tmpUp;\n      gameCoord.keyPress[3] = tmpDown;\n    }\n    gameCoord.time += serverClientTimeDiff;\n    gameCoord.ballSpeedX = 0;\n    gameCoord.ballSpeedY = 0;\n    gameCoord.paddleSpeed = 0;\n    setCoords(gameCoord);\n    update(Date.now(), gameCoord.time);\n  };\n  const finishEventHandler = scoreInfo => {\n    AdminLogPrinter(adminConsole, \"finishEventHandler\");\n    if (gamePlayer === GamePlayer.player2) {\n      player1.score = scoreInfo.p2Score;\n      player2.score = scoreInfo.p1Score;\n    } else {\n      player1.score = scoreInfo.p1Score;\n      player2.score = scoreInfo.p2Score;\n    }\n    if (player1.score > player2.score) {\n      setGameWinner(player1.uid);\n    } else {\n      setGameWinner(player2.uid);\n    }\n    coords.ballSpeedX = 0;\n    coords.ballSpeedY = 0;\n    setGameResultModal(true);\n    clearInterval(pingInterval);\n  };\n  const setCountdownSec = countdownTime => {\n    setCountdown(countdownTime);\n    if (countdownTime >= 1) {\n      setTimeout(setCountdownSec, 1000, countdownTime - 1);\n    }\n  };\n  const countdownEventHandler = _ref2 => {\n    let {\n      curTime,\n      time\n    } = _ref2;\n    const localTime = curTime + serverClientTimeDiff;\n    setCountdownSec(Math.round((time - (Date.now() - localTime)) / 1000));\n  };\n  useEffect(() => {\n    gameSocket.on(\"syncData\", syncDataHandler);\n    gameSocket.on(\"scoreInfo\", scoreEventHandler);\n    gameSocket.on(\"finished\", finishEventHandler);\n    gameSocket.on(\"countdown\", countdownEventHandler);\n    return () => {\n      gameSocket.off(\"syncData\", syncDataHandler);\n      gameSocket.off(\"scoreInfo\", scoreEventHandler);\n      gameSocket.off(\"finished\", finishEventHandler);\n      gameSocket.off(\"countdown\", countdownEventHandler);\n    };\n  }, []);\n  useEffect(() => {\n    requestAnimationLoop(Date.now(), lastUpdateTime);\n    return () => {\n      cancelAnimationFrame(requestAnimationId);\n    };\n  }, []);\n\n  // // the connection is denied by the server in a middleware function\n  // gameSocket.on(\"connect_error\", (err) => {\n  //   if (err.message === \"unauthorized\") {\n  //     // handle each case\n  //   }\n  //   console.log(err.message); // prints the message associated with the error\n  // });\n\n  function requestAnimationLoop(curTime, lastUpdate) {\n    if (coords.keyPress !== null) {\n      update(curTime, lastUpdate);\n    }\n    requestAnimationId = requestAnimationFrame(() => requestAnimationLoop(Date.now(), lastUpdateTime));\n  }\n\n  // paddle update first, and then ball position update.\n  function update(curTime, lastUpdate) {\n    const dt = curTime - lastUpdate;\n    if (dt > 0) {\n      const keyPressDt = getKeyPressDt(curTime);\n      paddleUpdate(keyPressDt);\n      coords.ballX += coords.ballSpeedX * dt;\n      coords.ballY += coords.ballSpeedY * dt;\n      const isHitY = collisionCheckY();\n      const isHitX = collisionCheckX();\n      if (isHitY !== Direction.NONE) {\n        if (isHitY === Direction.UP) {\n          coords.ballY = 2 * ball.radius - coords.ballY;\n          coords.ballSpeedY = -coords.ballSpeedY;\n        } else {\n          coords.ballY = 2 * (HEIGHT - ball.radius) - coords.ballY;\n          coords.ballSpeedY = -coords.ballSpeedY;\n        }\n      }\n      if (isHitX !== Direction.NONE) {\n        if (isHitX === Direction.LEFT) {\n          if (collisionCheckP1Paddle() === Hit.PADDLE) {\n            coords.ballX = 2 * (ball.radius + paddle.width) - coords.ballX;\n            coords.ballSpeedX = -coords.ballSpeedX;\n          }\n        } else {\n          if (collisionCheckP2Paddle() === Hit.PADDLE) {\n            coords.ballX = 2 * (WIDTH - ball.radius - paddle.width) - coords.ballX;\n            coords.ballSpeedX = -coords.ballSpeedX;\n          }\n        }\n      }\n      lastUpdateTime = curTime;\n      Game(coords, canvas);\n    }\n  }\n  function getKeyPressDt(curTime) {\n    const keyPressDt = [];\n    for (let i = 0; i < 4; i++) {\n      if (coords.keyPress[i] !== 0 && curTime > coords.keyPress[i]) {\n        keyPressDt.push(curTime - coords.keyPress[i]);\n        coords.keyPress[i] = curTime;\n      } else {\n        keyPressDt.push(0);\n      }\n    }\n    return keyPressDt;\n  }\n  function paddleUpdate(keyPressDt) {\n    if (keyPressDt[0] !== 0) {\n      if (coords.paddle1Y > 0) {\n        coords.paddle1Y -= coords.paddleSpeed * keyPressDt[0];\n      }\n      if (coords.paddle1Y < 0) {\n        coords.paddle1Y = 0;\n      }\n    }\n    if (keyPressDt[1] !== 0) {\n      if (coords.paddle1Y < HEIGHT - paddle.height) {\n        coords.paddle1Y += coords.paddleSpeed * keyPressDt[1];\n      }\n      if (coords.paddle1Y > HEIGHT - paddle.height) {\n        coords.paddle1Y = HEIGHT - paddle.height;\n      }\n    }\n    if (keyPressDt[2] !== 0) {\n      if (coords.paddle2Y > 0) {\n        coords.paddle2Y -= coords.paddleSpeed * keyPressDt[2];\n      }\n      if (coords.paddle2Y < 0) {\n        coords.paddle2Y = 0;\n      }\n    }\n    if (keyPressDt[3] !== 0) {\n      if (coords.paddle2Y < HEIGHT - paddle.height) {\n        coords.paddle2Y += coords.paddleSpeed * keyPressDt[3];\n      }\n      if (coords.paddle2Y > HEIGHT - paddle.height) {\n        coords.paddle2Y = HEIGHT - paddle.height;\n      }\n    }\n  }\n  function collisionCheckX() {\n    if (coords.ballX <= ball.radius + paddle.width) {\n      return Direction.LEFT;\n    } else if (coords.ballX >= WIDTH - ball.radius - paddle.width) {\n      return Direction.RIGHT;\n    }\n    return Direction.NONE;\n  }\n  function collisionCheckY() {\n    if (coords.ballY >= HEIGHT - ball.radius) {\n      return Direction.DOWN;\n    } else if (coords.ballY <= ball.radius) {\n      return Direction.UP;\n    }\n    return Direction.NONE;\n  }\n  function collisionCheckP1Paddle() {\n    if (coords.ballY >= coords.paddle1Y && coords.ballY <= coords.paddle1Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n  function collisionCheckP2Paddle() {\n    if (coords.ballY >= coords.paddle2Y && coords.ballY <= coords.paddle2Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n  useEffect(() => {\n    // init\n    player1.score = 0;\n    player2.score = 0;\n    Game(coords, canvas);\n  }, []);\n  useEffect(() => {\n    function handleKeyPress(event) {\n      if (event.code === \"ArrowUp\") {\n        event.preventDefault();\n        if (!upArrow) {\n          setUpArrow(true);\n          gameSocket.emit(\"upPress\");\n          AdminLogPrinter(adminConsole, \"up press\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        event.preventDefault();\n        if (!downArrow) {\n          setDownArrow(true);\n          gameSocket.emit(\"downPress\");\n          AdminLogPrinter(adminConsole, \"down press\");\n        }\n      }\n    }\n    function handleKeyRelease(event) {\n      if (event.code === \"ArrowUp\") {\n        event.preventDefault();\n        if (upArrow) {\n          setUpArrow(false);\n          gameSocket.emit(\"upRelease\");\n          AdminLogPrinter(adminConsole, \"up release\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        event.preventDefault();\n        if (downArrow) {\n          setDownArrow(false);\n          gameSocket.emit(\"downRelease\");\n          AdminLogPrinter(adminConsole, \"down release\");\n        }\n      }\n    }\n    window.addEventListener(\"keydown\", handleKeyPress);\n    window.addEventListener(\"keyup\", handleKeyRelease);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n      window.removeEventListener(\"keyup\", handleKeyRelease);\n    };\n  }, [upArrow, downArrow]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"QueueBackGround\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas,\n      id: \"pong\",\n      width: 1150,\n      height: 600\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this), countdown !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countDown\",\n      children: countdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 27\n    }, this) : \"\", gameModeForDisplay === GameMode.DEFAULT ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameMode\",\n      children: \" N \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameMode\",\n      children: \" S \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 404,\n    columnNumber: 5\n  }, this);\n}\n_s(PingPong, \"XDsCWrkJ57S5xiedr0KsLW9two4=\", false, function () {\n  return [useAtom, useAtomValue, useAtomValue, useSetAtom, useSetAtom, useAtomValue];\n});\n_c = PingPong;\nvar _c;\n$RefreshReg$(_c, \"PingPong\");","map":{"version":3,"names":["useEffect","chatAtom","GameMode","gameModeForDisplayAtom","GamePlayer","gamePlayerAtom","gameSocketAtom","gameWinnerAtom","Game","useAtom","useAtomValue","useSetAtom","useRef","useState","gameResultModalAtom","ball","HEIGHT","paddle","player1","player2","WIDTH","AdminLogPrinter","Direction","Hit","jsxDEV","_jsxDEV","PingPong","_s","canvas","adminConsole","adminConsoleAtom","upArrow","setUpArrow","downArrow","setDownArrow","countdown","setCountdown","gameSocket","gamePlayer","setGameWinner","setGameResultModal","gameModeForDisplay","serverClientTimeDiff","coords","paddle1Y","ballX","ballY","paddle2Y","ballSpeedX","ballSpeedY","paddleSpeed","keyPress","time","Date","now","lastUpdateTime","requestAnimationId","pingRTTmin","pingInterval","pingEvent","curTime","pingEventHandler","serverTime","pingRTT","adjServerTime","emit","setInterval","clearInterval","setCoords","gameCoord","i","syncDataHandler","tmpPaddle1Y","tmpUp","tmpDown","update","scoreEventHandler","_ref","scoreInfo","score","p2Score","p1Score","finishEventHandler","uid","setCountdownSec","countdownTime","setTimeout","countdownEventHandler","_ref2","localTime","Math","round","on","off","requestAnimationLoop","cancelAnimationFrame","lastUpdate","requestAnimationFrame","dt","keyPressDt","getKeyPressDt","paddleUpdate","isHitY","collisionCheckY","isHitX","collisionCheckX","NONE","UP","radius","LEFT","collisionCheckP1Paddle","PADDLE","width","collisionCheckP2Paddle","push","height","RIGHT","DOWN","WALL","handleKeyPress","event","code","preventDefault","handleKeyRelease","window","addEventListener","removeEventListener","className","children","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","DEFAULT","_c","$RefreshReg$"],"sources":["/data/front/src/components/GamePage/PingPong.tsx"],"sourcesContent":["import \"../../styles/BackGround.css\";\nimport \"../../styles/PingPong.css\";\n\nimport { useEffect } from \"react\";\n\nimport * as chatAtom from \"../atom/ChatAtom\";\nimport {\n  GameMode, gameModeForDisplayAtom, GamePlayer, gamePlayerAtom,\n  gameSocketAtom,\n  gameWinnerAtom\n} from \"../atom/GameAtom\";\nimport { Game } from \"./Pong\";\n\nimport { useAtom, useAtomValue, useSetAtom } from \"jotai\";\nimport { useRef, useState } from \"react\";\nimport { gameResultModalAtom } from \"../atom/ModalAtom\";\nimport { ball, HEIGHT, paddle, player1, player2, WIDTH } from \"./GameInfo\";\n\nimport { AdminLogPrinter } from \"../../event/event.util\";\nimport { Direction, GameCoordinate, Hit, scoreInfo } from \"../../socket/game.dto\";\n\nexport default function PingPong() {\n\n  const canvas = useRef<HTMLCanvasElement>(null);\n\n  const [adminConsole] = useAtom(chatAtom.adminConsoleAtom);\n\n  const [upArrow, setUpArrow] = useState(false);\n  const [downArrow, setDownArrow] = useState(false);\n  const [countdown, setCountdown] = useState(0);\n\n  const gameSocket = useAtomValue(gameSocketAtom);\n  const gamePlayer = useAtomValue(gamePlayerAtom);\n\n  const setGameWinner = useSetAtom(gameWinnerAtom);\n  const setGameResultModal = useSetAtom(gameResultModalAtom);\n\n  const gameModeForDisplay = useAtomValue(gameModeForDisplayAtom);\n\n  let serverClientTimeDiff: number = 400;\n\n  const coords: GameCoordinate = {\n    paddle1Y: 225,\n    ballX: 1150 / 2,\n    ballY: 300,\n    paddle2Y: 225,\n    ballSpeedX: 0,\n    ballSpeedY: 0,\n    paddleSpeed: 0.6,\n    keyPress: [0, 0, 0, 0],\n    time: Date.now(),\n  };\n\n  let lastUpdateTime: number = coords.time;\n  let requestAnimationId: number = 0;\n\n  // 400ms delay for init value\n  let pingRTTmin: number = 800;\n  let pingInterval: NodeJS.Timer;\n\n  const pingEvent = () => {\n    const curTime = Date.now();\n    const pingEventHandler = (serverTime: number) => {\n      const now = Date.now();\n      const pingRTT = now - curTime;\n      AdminLogPrinter(adminConsole, `pingRTT: ${pingRTT}ms`);\n      if (pingRTTmin > pingRTT) {\n        pingRTTmin = pingRTT;\n        const adjServerTime = serverTime + pingRTTmin / 2;\n        serverClientTimeDiff = now - adjServerTime;\n      }\n    };\n    gameSocket.emit(\"ping\", pingEventHandler);\n  };\n\n  useEffect(() => {\n    AdminLogPrinter(adminConsole, \"pingInterval\");\n    pingInterval = setInterval(pingEvent, 1000);\n    return () => {\n      AdminLogPrinter(adminConsole, \"clear pingInterval\");\n      clearInterval(pingInterval);\n    };\n  }, []);\n\n  const setCoords = (gameCoord: GameCoordinate) => {\n    coords.paddle1Y = gameCoord.paddle1Y;\n    coords.ballX = gameCoord.ballX;\n    coords.ballY = gameCoord.ballY;\n    coords.paddle2Y = gameCoord.paddle2Y;\n    coords.ballSpeedX = gameCoord.ballSpeedX;\n    coords.ballSpeedY = gameCoord.ballSpeedY;\n    coords.paddleSpeed = gameCoord.paddleSpeed;\n    coords.time = gameCoord.time;\n\n    for (let i = 0; i < 4; i++) {\n      coords.keyPress[i] = gameCoord.keyPress[i];\n    }\n  };\n\n  const syncDataHandler = (gameCoord: GameCoordinate) => {\n    for (let i = 0; i < 4; i++) {\n      if (gameCoord.keyPress[i] !== 0) {\n        gameCoord.keyPress[i] += serverClientTimeDiff;\n      }\n    }\n    if (gamePlayer === GamePlayer.player2) {\n      gameCoord.ballX = WIDTH - gameCoord.ballX;\n      gameCoord.ballSpeedX = -gameCoord.ballSpeedX;\n      const tmpPaddle1Y = gameCoord.paddle1Y;\n      gameCoord.paddle1Y = gameCoord.paddle2Y;\n      gameCoord.paddle2Y = tmpPaddle1Y;\n      const tmpUp = gameCoord.keyPress[0];\n      const tmpDown = gameCoord.keyPress[1];\n      gameCoord.keyPress[0] = gameCoord.keyPress[2];\n      gameCoord.keyPress[1] = gameCoord.keyPress[3];\n      gameCoord.keyPress[2] = tmpUp;\n      gameCoord.keyPress[3] = tmpDown;\n    }\n    gameCoord.time += serverClientTimeDiff;\n    setCoords(gameCoord);\n    update(Date.now(), gameCoord.time);\n  };\n\n  const scoreEventHandler = ({\n    gameCoord,\n    scoreInfo,\n  }: {\n    gameCoord: GameCoordinate;\n    scoreInfo: scoreInfo;\n  }) => {\n    if (gamePlayer === GamePlayer.player2) {\n      player1.score = scoreInfo.p2Score;\n      player2.score = scoreInfo.p1Score;\n    } else {\n      player1.score = scoreInfo.p1Score;\n      player2.score = scoreInfo.p2Score;\n    }\n    for (let i = 0; i < 4; i++) {\n      if (gameCoord.keyPress[i] !== 0) {\n        gameCoord.keyPress[i] += serverClientTimeDiff;\n      }\n    }\n    if (gamePlayer === GamePlayer.player2) {\n      gameCoord.ballX = WIDTH - gameCoord.ballX;\n      gameCoord.ballSpeedX = -gameCoord.ballSpeedX;\n      const tmpPaddle1Y = gameCoord.paddle1Y;\n      gameCoord.paddle1Y = gameCoord.paddle2Y;\n      gameCoord.paddle2Y = tmpPaddle1Y;\n      const tmpUp = gameCoord.keyPress[0];\n      const tmpDown = gameCoord.keyPress[1];\n      gameCoord.keyPress[0] = gameCoord.keyPress[2];\n      gameCoord.keyPress[1] = gameCoord.keyPress[3];\n      gameCoord.keyPress[2] = tmpUp;\n      gameCoord.keyPress[3] = tmpDown;\n    }\n    gameCoord.time += serverClientTimeDiff;\n    gameCoord.ballSpeedX = 0;\n    gameCoord.ballSpeedY = 0;\n    gameCoord.paddleSpeed = 0;\n    setCoords(gameCoord);\n    update(Date.now(), gameCoord.time);\n  };\n\n  const finishEventHandler = (scoreInfo: scoreInfo) => {\n    AdminLogPrinter(adminConsole, \"finishEventHandler\");\n    if (gamePlayer === GamePlayer.player2) {\n      player1.score = scoreInfo.p2Score;\n      player2.score = scoreInfo.p1Score;\n    } else {\n      player1.score = scoreInfo.p1Score;\n      player2.score = scoreInfo.p2Score;\n    }\n    if (player1.score > player2.score) {\n      setGameWinner(player1.uid);\n    } else {\n      setGameWinner(player2.uid);\n    }\n    coords.ballSpeedX = 0;\n    coords.ballSpeedY = 0;\n    setGameResultModal(true);\n    clearInterval(pingInterval);\n  };\n\n  const setCountdownSec = (countdownTime: number) => {\n    setCountdown(countdownTime);\n    if (countdownTime >= 1) {\n      setTimeout(setCountdownSec, 1000, countdownTime - 1)\n    }\n  }\n\n  const countdownEventHandler = ({ curTime, time }: { curTime: number; time: number }) => {\n    const localTime = curTime + serverClientTimeDiff;\n    setCountdownSec(Math.round((time - (Date.now() - localTime)) / 1000));\n  };\n\n  useEffect(() => {\n    gameSocket.on(\"syncData\", syncDataHandler);\n    gameSocket.on(\"scoreInfo\", scoreEventHandler);\n    gameSocket.on(\"finished\", finishEventHandler);\n    gameSocket.on(\"countdown\", countdownEventHandler);\n    return () => {\n      gameSocket.off(\"syncData\", syncDataHandler);\n      gameSocket.off(\"scoreInfo\", scoreEventHandler);\n      gameSocket.off(\"finished\", finishEventHandler);\n      gameSocket.off(\"countdown\", countdownEventHandler);\n    };\n  }, []);\n\n  useEffect(() => {\n    requestAnimationLoop(Date.now(), lastUpdateTime);\n    return () => {\n      cancelAnimationFrame(requestAnimationId);\n    };\n  }, []);\n\n  // // the connection is denied by the server in a middleware function\n  // gameSocket.on(\"connect_error\", (err) => {\n  //   if (err.message === \"unauthorized\") {\n  //     // handle each case\n  //   }\n  //   console.log(err.message); // prints the message associated with the error\n  // });\n\n  function requestAnimationLoop(curTime: number, lastUpdate: number) {\n    if (coords.keyPress !== null) {\n      update(curTime, lastUpdate);\n    }\n    requestAnimationId = requestAnimationFrame(() =>\n      requestAnimationLoop(Date.now(), lastUpdateTime)\n    );\n  }\n\n  // paddle update first, and then ball position update.\n  function update(curTime: number, lastUpdate: number) {\n    const dt = curTime - lastUpdate;\n    if (dt > 0) {\n      const keyPressDt: number[] = getKeyPressDt(curTime);\n\n      paddleUpdate(keyPressDt);\n      coords.ballX += coords.ballSpeedX * dt;\n      coords.ballY += coords.ballSpeedY * dt;\n      const isHitY = collisionCheckY();\n      const isHitX = collisionCheckX();\n      if (isHitY !== Direction.NONE) {\n        if (isHitY === Direction.UP) {\n          coords.ballY = 2 * ball.radius - coords.ballY;\n          coords.ballSpeedY = -coords.ballSpeedY;\n        } else {\n          coords.ballY = 2 * (HEIGHT - ball.radius) - coords.ballY;\n          coords.ballSpeedY = -coords.ballSpeedY;\n        }\n      }\n      if (isHitX !== Direction.NONE) {\n        if (isHitX === Direction.LEFT) {\n          if (collisionCheckP1Paddle() === Hit.PADDLE) {\n            coords.ballX = 2 * (ball.radius + paddle.width) - coords.ballX;\n            coords.ballSpeedX = -coords.ballSpeedX;\n          }\n        } else {\n          if (collisionCheckP2Paddle() === Hit.PADDLE) {\n            coords.ballX = 2 * (WIDTH - ball.radius - paddle.width) - coords.ballX;\n            coords.ballSpeedX = -coords.ballSpeedX;\n          }\n        }\n      }\n      lastUpdateTime = curTime;\n      Game(coords, canvas);\n    }\n  }\n\n  function getKeyPressDt(curTime: number): number[] {\n    const keyPressDt: number[] = [];\n    for (let i = 0; i < 4; i++) {\n      if (coords.keyPress[i] !== 0 && curTime > coords.keyPress[i]) {\n        keyPressDt.push(curTime - coords.keyPress[i]);\n        coords.keyPress[i] = curTime;\n      } else {\n        keyPressDt.push(0);\n      }\n    }\n    return keyPressDt;\n  }\n\n  function paddleUpdate(keyPressDt: number[]) {\n    if (keyPressDt[0] !== 0) {\n      if (coords.paddle1Y > 0) {\n        coords.paddle1Y -= coords.paddleSpeed * keyPressDt[0];\n      }\n      if (coords.paddle1Y < 0) {\n        coords.paddle1Y = 0;\n      }\n    }\n    if (keyPressDt[1] !== 0) {\n      if (coords.paddle1Y < HEIGHT - paddle.height) {\n        coords.paddle1Y += coords.paddleSpeed * keyPressDt[1];\n      }\n      if (coords.paddle1Y > HEIGHT - paddle.height) {\n        coords.paddle1Y = HEIGHT - paddle.height;\n      }\n    }\n    if (keyPressDt[2] !== 0) {\n      if (coords.paddle2Y > 0) {\n        coords.paddle2Y -= coords.paddleSpeed * keyPressDt[2];\n      }\n      if (coords.paddle2Y < 0) {\n        coords.paddle2Y = 0;\n      }\n    }\n    if (keyPressDt[3] !== 0) {\n      if (coords.paddle2Y < HEIGHT - paddle.height) {\n        coords.paddle2Y += coords.paddleSpeed * keyPressDt[3];\n      }\n      if (coords.paddle2Y > HEIGHT - paddle.height) {\n        coords.paddle2Y = HEIGHT - paddle.height;\n      }\n    }\n  }\n\n  function collisionCheckX() {\n    if (coords.ballX <= ball.radius + paddle.width) {\n      return Direction.LEFT;\n    } else if (coords.ballX >= WIDTH - ball.radius - paddle.width) {\n      return Direction.RIGHT;\n    }\n    return Direction.NONE;\n  }\n\n  function collisionCheckY() {\n    if (coords.ballY >= HEIGHT - ball.radius) {\n      return Direction.DOWN;\n    } else if (coords.ballY <= ball.radius) {\n      return Direction.UP;\n    }\n    return Direction.NONE;\n  }\n\n  function collisionCheckP1Paddle() {\n    if (coords.ballY >= coords.paddle1Y && coords.ballY <= coords.paddle1Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n\n  function collisionCheckP2Paddle() {\n    if (coords.ballY >= coords.paddle2Y && coords.ballY <= coords.paddle2Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n\n  useEffect(() => {\n    // init\n    player1.score = 0;\n    player2.score = 0;\n    Game(coords, canvas);\n  }, []);\n\n  useEffect(() => {\n    function handleKeyPress(event: globalThis.KeyboardEvent) {\n      if (event.code === \"ArrowUp\") {\n        event.preventDefault();\n        if (!upArrow) {\n          setUpArrow(true);\n          gameSocket.emit(\"upPress\");\n          AdminLogPrinter(adminConsole, \"up press\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        event.preventDefault();\n        if (!downArrow) {\n          setDownArrow(true);\n          gameSocket.emit(\"downPress\");\n          AdminLogPrinter(adminConsole, \"down press\");\n        }\n      }\n    }\n\n    function handleKeyRelease(event: globalThis.KeyboardEvent) {\n      if (event.code === \"ArrowUp\") {\n        event.preventDefault();\n        if (upArrow) {\n          setUpArrow(false);\n          gameSocket.emit(\"upRelease\");\n          AdminLogPrinter(adminConsole, \"up release\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        event.preventDefault();\n        if (downArrow) {\n          setDownArrow(false);\n          gameSocket.emit(\"downRelease\");\n          AdminLogPrinter(adminConsole, \"down release\");\n        }\n      }\n    }\n    window.addEventListener(\"keydown\", handleKeyPress);\n    window.addEventListener(\"keyup\", handleKeyRelease);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n      window.removeEventListener(\"keyup\", handleKeyRelease);\n    };\n  }, [upArrow, downArrow]);\n\n  return (\n    <div className=\"QueueBackGround\">\n      <canvas ref={canvas} id=\"pong\" width={1150} height={600}></canvas>\n      {\n        countdown !== 0 ? <div className=\"countDown\">{countdown}</div> : \"\"\n      }\n      {\n        gameModeForDisplay === GameMode.DEFAULT\n          ? <div className=\"gameMode\"> N </div>\n          : <div className=\"gameMode\"> S </div>\n      }\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}