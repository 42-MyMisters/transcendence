{"ast":null,"code":"var _jsxFileName = \"/data/front/src/pages/GamePage.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport BackGround from \"../components/BackGround\";\nimport \"../components/GamePage/PingPong\";\nimport PingPong from \"../components/GamePage/PingPong\";\nimport TopBar from \"../components/TopBar\";\nimport { useAtom, useAtomValue, useSetAtom } from \"jotai\";\nimport { gameInviteInfoAtom, gameModeAtom, gameModeForDisplayAtom, GamePlayer, gamePlayerAtom, gameSocketAtom, isGameQuitAtom, isGameStartedAtom, isLoadingAtom, isMatchedAtom, isPrivateAtom, p1IdAtom, p2IdAtom } from \"../components/atom/GameAtom\";\nimport * as chatAtom from \"../components/atom/ChatAtom\";\nimport { gameResultModalAtom } from \"../components/atom/ModalAtom\";\nimport GameResultModal from \"../components/GamePage/GameResultModal\";\nimport LadderBoard from \"../components/GamePage/LadderBoard\";\nimport { UserAtom } from \"../components/atom/UserAtom\";\nimport { player1, player2 } from \"../components/GamePage/GameInfo\";\nimport Waiting from \"../components/GamePage/Waiting\";\nimport { AdminLogPrinter, PressKey } from \"../event/event.util\";\nimport { GameType } from \"../socket/game.dto\";\nimport GameLeftModal from '../components/GamePage/GameLeftModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GamePage() {\n  _s();\n  const [adminConsole, setAdminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const isPrivate = useAtomValue(isPrivateAtom);\n  const [isLoading, setIsLoading] = useAtom(isLoadingAtom);\n  const [isMatched, setIsMatched] = useAtom(isMatchedAtom);\n  const [isGameStart, setIsGameStart] = useAtom(isGameStartedAtom);\n  const [gameInviteInfo, setGameInviteInfo] = useAtom(gameInviteInfoAtom);\n  const gameResultModal = useAtomValue(gameResultModalAtom);\n  const [gameModeForDisplay, setGameModeForDisplay] = useAtom(gameModeForDisplayAtom);\n  const [gameSocket, setGameSocket] = useAtom(gameSocketAtom);\n  const [p1Id, setP1Id] = useAtom(p1IdAtom);\n  const [p2Id, setP2Id] = useAtom(p2IdAtom);\n  const setGameMode = useSetAtom(gameModeAtom);\n  const setGamePlayer = useSetAtom(gamePlayerAtom);\n  const setIsGameQuit = useSetAtom(isGameQuitAtom);\n  const userInfo = useAtomValue(UserAtom);\n  const userList = useAtomValue(chatAtom.userListAtom);\n  class socketAuth {\n    constructor(inviteInfo) {\n      this.token = void 0;\n      this.type = void 0;\n      this.invite = void 0;\n      this.observ = void 0;\n      this.token = localStorage.getItem(\"refreshToken\");\n      this.type = isPrivate ? GameType.PRIVATE : GameType.PUBLIC;\n      if (inviteInfo.gameType === 'invite') {\n        this.invite = inviteInfo.userId;\n      } else if (inviteInfo.gameType === 'observe') {\n        this.observ = inviteInfo.userId;\n      }\n    }\n  }\n  PressKey([\"F4\"], () => {\n    setAdminConsole(prev => !prev);\n  });\n  const clearState = () => {\n    setIsLoading(false);\n    setIsMatched(false);\n    setIsGameQuit(true);\n    setGamePlayer(GamePlayer.undefined);\n    setGameMode('normal');\n  };\n  useEffect(() => {\n    AdminLogPrinter(adminConsole, `gameSocket connection`);\n    const auth = new socketAuth(gameInviteInfo);\n    gameSocket.auth = auth;\n    const socket = gameSocket;\n    socket.connect();\n    setGameSocket(socket);\n    setGameInviteInfo({\n      gameType: 'queue',\n      userId: -1\n    });\n    setIsGameQuit(false);\n    if (!isGameStart) {\n      setIsLoading(true);\n    } else {\n      setGamePlayer(GamePlayer.observer);\n    }\n    if (isPrivate) {\n      setP1Id(userInfo.uid);\n    }\n    return () => {\n      gameSocket.disconnect();\n      clearState();\n    };\n  }, []);\n  const connectionEventHandler = () => {\n    if (gameSocket.connected) {\n      //This attribute describes whether the socket is currently connected to the server.\n      if (gameSocket.recovered) {\n        // any missed packets will be received\n      } else {\n        // new or unrecoverable session\n        AdminLogPrinter(adminConsole, \"gameSocket connected\");\n      }\n    }\n  };\n\n  // https://socket.io/docs/v4/client-socket-instance/#disconnect\n  const disconnectionEventHandler = reason => {\n    if (reason === \"io server disconnect\") {} else if (reason === \"io client disconnect\") {\n      setIsGameStart(false);\n    }\n    console.log(`gameSocket end`, reason);\n    clearState();\n    AdminLogPrinter(adminConsole, \"gameSocket disconnected\");\n  };\n  const gameStartEventHandler = _ref => {\n    let {\n      gameMode,\n      p1,\n      p2\n    } = _ref;\n    AdminLogPrinter(adminConsole, \"game start time: \", Date.now());\n    setGameModeForDisplay(gameMode);\n    setIsLoading(false);\n    setIsMatched(false);\n    setIsGameStart(true);\n  };\n  const matchEventHandler = _ref2 => {\n    let {\n      p1,\n      p2\n    } = _ref2;\n    AdminLogPrinter(adminConsole, \"matched time: \", Date.now());\n    if (p1 === userInfo.uid) {\n      var _userList$p, _userList$p2;\n      setGamePlayer(GamePlayer.player1);\n      setP1Id(p1);\n      setP2Id(p2);\n      player1.uid = p1;\n      player2.uid = p2;\n      player1.name = ((_userList$p = userList[p1]) === null || _userList$p === void 0 ? void 0 : _userList$p.userDisplayName) || 'Norminette';\n      player2.name = ((_userList$p2 = userList[p2]) === null || _userList$p2 === void 0 ? void 0 : _userList$p2.userDisplayName) || 'LoremIpsum';\n    } else if (p2 === userInfo.uid) {\n      var _userList$p3, _userList$p4;\n      setGamePlayer(GamePlayer.player2);\n      setP1Id(p2);\n      setP2Id(p1);\n      player1.uid = p2;\n      player2.uid = p1;\n      player1.name = ((_userList$p3 = userList[p2]) === null || _userList$p3 === void 0 ? void 0 : _userList$p3.userDisplayName) || 'Norminette';\n      player2.name = ((_userList$p4 = userList[p1]) === null || _userList$p4 === void 0 ? void 0 : _userList$p4.userDisplayName) || 'LoremIpsum';\n    } else {\n      var _userList$p5, _userList$p6;\n      setGamePlayer(GamePlayer.observer);\n      setP1Id(p1);\n      setP2Id(p2);\n      player1.uid = p1;\n      player2.uid = p2;\n      player1.name = ((_userList$p5 = userList[p1]) === null || _userList$p5 === void 0 ? void 0 : _userList$p5.userDisplayName) || 'Norminette';\n      player2.name = ((_userList$p6 = userList[p2]) === null || _userList$p6 === void 0 ? void 0 : _userList$p6.userDisplayName) || 'LoremIpsum';\n    }\n    setIsMatched(true);\n  };\n  const observerEventHandler = _ref3 => {\n    var _userList$p7, _userList$p8;\n    let {\n      gameMode,\n      p1,\n      p2\n    } = _ref3;\n    AdminLogPrinter(adminConsole, \"observer\");\n    setGameModeForDisplay(gameMode);\n    setP1Id(p1);\n    setP2Id(p2);\n    player1.uid = p1;\n    player2.uid = p2;\n    player1.name = ((_userList$p7 = userList[p1]) === null || _userList$p7 === void 0 ? void 0 : _userList$p7.userDisplayName) || 'Norminette';\n    player2.name = ((_userList$p8 = userList[p2]) === null || _userList$p8 === void 0 ? void 0 : _userList$p8.userDisplayName) || 'LoremIpsum';\n  };\n  useEffect(() => {\n    gameSocket.on(\"observer\", observerEventHandler);\n    return () => {\n      gameSocket.off(\"observer\", observerEventHandler);\n    };\n  }, [gameSocket, p1Id, p2Id, gameModeForDisplay]);\n  useEffect(() => {\n    gameSocket.on(\"connect\", connectionEventHandler);\n    gameSocket.on(\"gameStart\", gameStartEventHandler);\n    return () => {\n      gameSocket.off(\"connect\", connectionEventHandler);\n      gameSocket.off(\"gameStart\", gameStartEventHandler);\n    };\n  }, [isGameStart, gameSocket]);\n  useEffect(() => {\n    gameSocket.on(\"disconnect\", disconnectionEventHandler);\n    return () => {\n      gameSocket.off(\"disconnect\", disconnectionEventHandler);\n    };\n  }, [isPrivate, isGameStart, gameSocket]);\n  useEffect(() => {\n    gameSocket.on(\"matched\", matchEventHandler);\n    return () => {\n      gameSocket.off(\"matched\", matchEventHandler);\n    };\n  }, [isMatched, gameSocket, p1Id, p2Id, gameModeForDisplay]);\n  return /*#__PURE__*/_jsxDEV(BackGround, {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), isLoading ? isPrivate ? /*#__PURE__*/_jsxDEV(Waiting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 16\n    }, this) : isMatched ? /*#__PURE__*/_jsxDEV(Waiting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(LadderBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 18\n    }, this) : isGameStart ? /*#__PURE__*/_jsxDEV(PingPong, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(GameLeftModal, {\n      userName: player2.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }, this), gameResultModal ? /*#__PURE__*/_jsxDEV(GameResultModal, {\n      leftScore: player1.score,\n      rightScore: player2.score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 26\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n_s(GamePage, \"oVkyM8QSmdArI6smpuDZc/VvWBw=\", false, function () {\n  return [useAtom, useAtomValue, useAtom, useAtom, useAtom, useAtom, useAtomValue, useAtom, useAtom, useAtom, useAtom, useSetAtom, useSetAtom, useSetAtom, useAtomValue, useAtomValue];\n});\n_c = GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["useEffect","BackGround","PingPong","TopBar","useAtom","useAtomValue","useSetAtom","gameInviteInfoAtom","gameModeAtom","gameModeForDisplayAtom","GamePlayer","gamePlayerAtom","gameSocketAtom","isGameQuitAtom","isGameStartedAtom","isLoadingAtom","isMatchedAtom","isPrivateAtom","p1IdAtom","p2IdAtom","chatAtom","gameResultModalAtom","GameResultModal","LadderBoard","UserAtom","player1","player2","Waiting","AdminLogPrinter","PressKey","GameType","GameLeftModal","jsxDEV","_jsxDEV","GamePage","_s","adminConsole","setAdminConsole","adminConsoleAtom","isPrivate","isLoading","setIsLoading","isMatched","setIsMatched","isGameStart","setIsGameStart","gameInviteInfo","setGameInviteInfo","gameResultModal","gameModeForDisplay","setGameModeForDisplay","gameSocket","setGameSocket","p1Id","setP1Id","p2Id","setP2Id","setGameMode","setGamePlayer","setIsGameQuit","userInfo","userList","userListAtom","socketAuth","constructor","inviteInfo","token","type","invite","observ","localStorage","getItem","PRIVATE","PUBLIC","gameType","userId","prev","clearState","undefined","auth","socket","connect","observer","uid","disconnect","connectionEventHandler","connected","recovered","disconnectionEventHandler","reason","console","log","gameStartEventHandler","_ref","gameMode","p1","p2","Date","now","matchEventHandler","_ref2","_userList$p","_userList$p2","name","userDisplayName","_userList$p3","_userList$p4","_userList$p5","_userList$p6","observerEventHandler","_ref3","_userList$p7","_userList$p8","on","off","children","fileName","_jsxFileName","lineNumber","columnNumber","userName","leftScore","score","rightScore","_c","$RefreshReg$"],"sources":["/data/front/src/pages/GamePage.tsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport BackGround from \"../components/BackGround\";\nimport \"../components/GamePage/PingPong\";\nimport PingPong from \"../components/GamePage/PingPong\";\nimport TopBar from \"../components/TopBar\";\n\nimport { useAtom, useAtomValue, useSetAtom } from \"jotai\";\nimport {\n  gameInviteInfoAtom, GameMode, gameModeAtom, gameModeForDisplayAtom, GamePlayer, gamePlayerAtom, gameSocketAtom, isGameQuitAtom, isGameStartedAtom,\n  isLoadingAtom,\n  isMatchedAtom,\n  isPrivateAtom, p1IdAtom,\n  p2IdAtom\n} from \"../components/atom/GameAtom\";\n\nimport * as chatAtom from \"../components/atom/ChatAtom\";\nimport { gameResultModalAtom } from \"../components/atom/ModalAtom\";\nimport GameResultModal from \"../components/GamePage/GameResultModal\";\nimport LadderBoard from \"../components/GamePage/LadderBoard\";\n\nimport { UserAtom } from \"../components/atom/UserAtom\";\nimport { player1, player2 } from \"../components/GamePage/GameInfo\";\nimport Waiting from \"../components/GamePage/Waiting\";\nimport { AdminLogPrinter, PressKey } from \"../event/event.util\";\nimport { GameType } from \"../socket/game.dto\";\nimport GameLeftModal from '../components/GamePage/GameLeftModal';\n\nexport default function GamePage() {\n  const [adminConsole, setAdminConsole] = useAtom(chatAtom.adminConsoleAtom);\n\n  const isPrivate = useAtomValue(isPrivateAtom);\n  const [isLoading, setIsLoading] = useAtom(isLoadingAtom);\n  const [isMatched, setIsMatched] = useAtom(isMatchedAtom);\n  const [isGameStart, setIsGameStart] = useAtom(isGameStartedAtom);\n  const [gameInviteInfo, setGameInviteInfo] = useAtom(gameInviteInfoAtom);\n  const gameResultModal = useAtomValue(gameResultModalAtom);\n  const [gameModeForDisplay, setGameModeForDisplay] = useAtom(gameModeForDisplayAtom);\n\n  const [gameSocket, setGameSocket] = useAtom(gameSocketAtom);\n\n  const [p1Id, setP1Id] = useAtom(p1IdAtom);\n  const [p2Id, setP2Id] = useAtom(p2IdAtom);\n\n  const setGameMode = useSetAtom(gameModeAtom);\n  const setGamePlayer = useSetAtom(gamePlayerAtom);\n  const setIsGameQuit = useSetAtom(isGameQuitAtom);\n\n  const userInfo = useAtomValue(UserAtom);\n  const userList = useAtomValue(chatAtom.userListAtom);\n\n  class socketAuth {\n    token: string | null;\n    type: GameType;\n    invite?: number;\n    observ?: number;\n    constructor(inviteInfo: { gameType: string, userId: number }) {\n      this.token = localStorage.getItem(\"refreshToken\");\n      this.type = isPrivate ? GameType.PRIVATE : GameType.PUBLIC;\n      if (inviteInfo.gameType === 'invite') {\n        this.invite = inviteInfo.userId;\n      } else if (inviteInfo.gameType === 'observe') {\n        this.observ = inviteInfo.userId;\n      }\n    }\n  }\n\n  PressKey([\"F4\"], () => {\n    setAdminConsole((prev) => !prev);\n  });\n\n  const clearState = () => {\n    setIsLoading(false);\n    setIsMatched(false);\n    setIsGameQuit(true);\n    setGamePlayer(GamePlayer.undefined);\n    setGameMode('normal');\n  };\n\n  useEffect(() => {\n    AdminLogPrinter(adminConsole, `gameSocket connection`);\n    const auth = new socketAuth(gameInviteInfo);\n    gameSocket.auth = auth;\n    const socket = gameSocket;\n    socket.connect();\n    setGameSocket(socket);\n    setGameInviteInfo({ gameType: 'queue', userId: -1 });\n    setIsGameQuit(false);\n    if (!isGameStart) {\n      setIsLoading(true);\n    } else {\n      setGamePlayer(GamePlayer.observer);\n    }\n    if (isPrivate) {\n      setP1Id(userInfo.uid);\n    }\n    return () => {\n      gameSocket.disconnect();\n      clearState();\n    };\n  }, []);\n\n  const connectionEventHandler = () => {\n    if (gameSocket.connected) {\n      //This attribute describes whether the socket is currently connected to the server.\n      if (gameSocket.recovered) {\n        // any missed packets will be received\n      } else {\n        // new or unrecoverable session\n        AdminLogPrinter(adminConsole, \"gameSocket connected\");\n      }\n    }\n  };\n\n  // https://socket.io/docs/v4/client-socket-instance/#disconnect\n  const disconnectionEventHandler = (reason: string) => {\n    if (reason === \"io server disconnect\") {\n    } else if (reason === \"io client disconnect\") {\n      setIsGameStart(false);\n    }\n    console.log(`gameSocket end`, reason);\n    clearState();\n    AdminLogPrinter(adminConsole, \"gameSocket disconnected\");\n  };\n\n  const gameStartEventHandler = ({ gameMode, p1, p2 }: { gameMode: GameMode, p1: number, p2: number }) => {\n    AdminLogPrinter(adminConsole, \"game start time: \", Date.now());\n    setGameModeForDisplay(gameMode);\n    setIsLoading(false);\n    setIsMatched(false);\n    setIsGameStart(true);\n  };\n\n  const matchEventHandler = ({ p1, p2 }: { p1: number, p2: number }) => {\n    AdminLogPrinter(adminConsole, \"matched time: \", Date.now());\n    if (p1 === userInfo.uid) {\n      setGamePlayer(GamePlayer.player1);\n      setP1Id(p1);\n      setP2Id(p2);\n      player1.uid = p1;\n      player2.uid = p2;\n      player1.name = userList[p1]?.userDisplayName || 'Norminette';\n      player2.name = userList[p2]?.userDisplayName || 'LoremIpsum';\n    } else if (p2 === userInfo.uid) {\n      setGamePlayer(GamePlayer.player2);\n      setP1Id(p2);\n      setP2Id(p1);\n      player1.uid = p2;\n      player2.uid = p1;\n      player1.name = userList[p2]?.userDisplayName || 'Norminette';\n      player2.name = userList[p1]?.userDisplayName || 'LoremIpsum';\n    } else {\n      setGamePlayer(GamePlayer.observer);\n      setP1Id(p1);\n      setP2Id(p2);\n      player1.uid = p1;\n      player2.uid = p2;\n      player1.name = userList[p1]?.userDisplayName || 'Norminette';\n      player2.name = userList[p2]?.userDisplayName || 'LoremIpsum';\n    }\n    setIsMatched(true);\n  };\n\n  const observerEventHandler = ({ gameMode, p1, p2 }: { gameMode: GameMode, p1: number, p2: number }) => {\n    AdminLogPrinter(adminConsole, \"observer\");\n    setGameModeForDisplay(gameMode);\n    setP1Id(p1);\n    setP2Id(p2);\n    player1.uid = p1;\n    player2.uid = p2;\n    player1.name = userList[p1]?.userDisplayName || 'Norminette';\n    player2.name = userList[p2]?.userDisplayName || 'LoremIpsum';\n  };\n\n  useEffect(() => {\n    gameSocket.on(\"observer\", observerEventHandler);\n    return () => {\n      gameSocket.off(\"observer\", observerEventHandler);\n    }\n  }, [gameSocket, p1Id, p2Id, gameModeForDisplay]);\n\n  useEffect(() => {\n    gameSocket.on(\"connect\", connectionEventHandler);\n    gameSocket.on(\"gameStart\", gameStartEventHandler);\n    return () => {\n      gameSocket.off(\"connect\", connectionEventHandler);\n      gameSocket.off(\"gameStart\", gameStartEventHandler);\n    };\n  }, [isGameStart, gameSocket]);\n\n  useEffect(() => {\n    gameSocket.on(\"disconnect\", disconnectionEventHandler);\n    return () => {\n      gameSocket.off(\"disconnect\", disconnectionEventHandler);\n    };\n  }, [isPrivate, isGameStart, gameSocket]);\n\n  useEffect(() => {\n    gameSocket.on(\"matched\", matchEventHandler);\n    return () => {\n      gameSocket.off(\"matched\", matchEventHandler);\n    }\n  }, [isMatched, gameSocket, p1Id, p2Id, gameModeForDisplay]);\n\n  return (\n    <BackGround>\n      <TopBar />\n      {\n        isLoading\n          ? (isPrivate\n            ? (<Waiting />)\n            : (isMatched\n              ? (<Waiting />)\n              : (<LadderBoard />)\n            )\n          )\n          : isGameStart\n            ? (<PingPong />)\n            : <GameLeftModal userName={player2.name} />\n      }\n      {gameResultModal ? <GameResultModal leftScore={player1.score} rightScore={player2.score} /> : null}\n    </BackGround>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}