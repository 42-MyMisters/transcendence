{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/ProfilePage/ChangeNameModal.tsx\",\n  _s = $RefreshSig$();\nimport { useAtom } from \"jotai\";\nimport { changeNameModalAtom } from \"../atom/ModalAtom\";\nimport { UserAtom } from \"../atom/UserAtom\";\nimport { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { PressKey, AdminLogPrinter } from \"../../event/event.util\";\nimport * as chatAtom from \"../../components/atom/ChatAtom\";\nimport \"../../styles/ProfileModal.css\";\nimport { useAutoFocus } from '../../event/event.util';\nimport * as api from '../../event/api.request';\nimport { refreshTokenAtom } from \"../../components/atom/LoginAtom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChangeNameModal() {\n  _s();\n  const [changeNameModal, setchangeNameModal] = useAtom(changeNameModalAtom);\n  const [userInfo, setUserInfo] = useAtom(UserAtom);\n  const [newName, setNewName] = useState(\"\");\n  const [adminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const [, setRefreshToken] = useAtom(refreshTokenAtom);\n  const navigate = useNavigate();\n  const nameInputRef = useAutoFocus();\n  PressKey([\"Escape\"], () => {\n    setchangeNameModal(false);\n  });\n  const logOutHandler = () => {\n    api.LogOut(adminConsole, setRefreshToken, navigate, \"/\");\n  };\n  async function getMyinfoHandler() {\n    const getMeResponse = await api.GetMyInfo(adminConsole, setUserInfo);\n    if (getMeResponse === 401) {\n      const refreshResponse = await api.RefreshToken(adminConsole);\n      if (refreshResponse !== 201) {\n        logOutHandler();\n      } else {\n        const getMeResponse = await api.GetMyInfo(adminConsole, setUserInfo);\n        if (getMeResponse === 401) {\n          logOutHandler();\n        }\n      }\n    }\n  }\n  const handleChangeName = async () => {\n    const trimNewName = newName.trim();\n    if (trimNewName.length < 2 || trimNewName.length > 8) {\n      alert(\"변경할 닉네임은 2글자 이상, 8글자 이하여야 합니다.\");\n      setNewName(\"\");\n      return;\n    } else if (trimNewName === userInfo.nickname) {\n      alert(\"현재 닉네임과 동일합니다.\");\n      setNewName(\"\");\n      return;\n    } else if (newName.includes(\"#\")) {\n      alert(\"#은 포함될 수 없습니다.\");\n      setNewName(\"\");\n      return;\n    }\n    const format = JSON.stringify({\n      nickname: newName\n    });\n    AdminLogPrinter(adminConsole, `changeNickName: ${format}`);\n    const changeNickNameRes = await api.changeNickName(adminConsole, format, getMyinfoHandler);\n    if (changeNickNameRes === 401) {\n      const refreshResponse = await api.RefreshToken(adminConsole);\n      if (refreshResponse !== 201) {\n        logOutHandler();\n      } else {\n        const changeNickNameRes = await api.changeNickName(adminConsole, format, getMyinfoHandler);\n        if (changeNickNameRes === 401) {\n          logOutHandler();\n        } else {\n          setchangeNameModal(false);\n          setNewName(\"\");\n        }\n      }\n    } else {\n      setchangeNameModal(false);\n      setNewName(\"\");\n    }\n  };\n  const handleEnterEvent = e => {\n    if (e.key === 'Enter') {\n      handleChangeName();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChangeNameModalBG\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChangeNameModal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SaveNameForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"SaveName\",\n          children: \"New Nickname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"SaveName\",\n          type: \"text\",\n          ref: nameInputRef\n          // pattern=\".{1, 8}\"\n          // required\n          // title=\"1 to 8 characters\"\n          ,\n          maxLength: 12,\n          value: newName,\n          onChange: e => {\n            setNewName(e.target.value);\n          },\n          onKeyPress: e => {\n            handleEnterEvent(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"SaveName\",\n        onClick: () => handleChangeName(),\n        children: \"Change\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"SaveNameCancel\",\n        onClick: () => setchangeNameModal(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ChangeNameModal, \"Jf0r4xqe0rlFSOwnIqjTj3omzVM=\", false, function () {\n  return [useAtom, useAtom, useAtom, useAtom, useNavigate, useAutoFocus];\n});\n_c = ChangeNameModal;\nvar _c;\n$RefreshReg$(_c, \"ChangeNameModal\");","map":{"version":3,"names":["useAtom","changeNameModalAtom","UserAtom","useState","useNavigate","PressKey","AdminLogPrinter","chatAtom","useAutoFocus","api","refreshTokenAtom","jsxDEV","_jsxDEV","Fragment","_Fragment","ChangeNameModal","_s","changeNameModal","setchangeNameModal","userInfo","setUserInfo","newName","setNewName","adminConsole","adminConsoleAtom","setRefreshToken","navigate","nameInputRef","logOutHandler","LogOut","getMyinfoHandler","getMeResponse","GetMyInfo","refreshResponse","RefreshToken","handleChangeName","trimNewName","trim","length","alert","nickname","includes","format","JSON","stringify","changeNickNameRes","changeNickName","handleEnterEvent","e","key","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","ref","maxLength","value","onChange","target","onKeyPress","onClick","_c","$RefreshReg$"],"sources":["/data/front/src/components/ProfilePage/ChangeNameModal.tsx"],"sourcesContent":["import { useAtom } from \"jotai\";\nimport { changeNameModalAtom } from \"../atom/ModalAtom\";\nimport { UserAtom } from \"../atom/UserAtom\";\n\nimport { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nimport { PressKey, AdminLogPrinter } from \"../../event/event.util\";\nimport * as chatAtom from \"../../components/atom/ChatAtom\";\nimport { keyboardKey } from '@testing-library/user-event';\nimport \"../../styles/ProfileModal.css\";\n\nimport { useAutoFocus } from '../../event/event.util';\nimport * as api from '../../event/api.request';\nimport { refreshTokenAtom } from \"../../components/atom/LoginAtom\";\n\nexport default function ChangeNameModal() {\n  const [changeNameModal, setchangeNameModal] = useAtom(changeNameModalAtom);\n  const [userInfo, setUserInfo] = useAtom(UserAtom);\n  const [newName, setNewName] = useState(\"\");\n  const [adminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const [, setRefreshToken] = useAtom(refreshTokenAtom);\n  const navigate = useNavigate();\n\n  const nameInputRef = useAutoFocus();\n\n  PressKey([\"Escape\"], () => {\n    setchangeNameModal(false);\n  });\n\n  const logOutHandler = () => {\n    api.LogOut(adminConsole, setRefreshToken, navigate, \"/\");\n  };\n\n  async function getMyinfoHandler() {\n    const getMeResponse = await api.GetMyInfo(adminConsole, setUserInfo);\n    if (getMeResponse === 401) {\n      const refreshResponse = await api.RefreshToken(adminConsole);\n      if (refreshResponse !== 201) {\n        logOutHandler();\n      } else {\n        const getMeResponse = await api.GetMyInfo(adminConsole, setUserInfo);\n        if (getMeResponse === 401) {\n          logOutHandler();\n        }\n      }\n    }\n  }\n\n  const handleChangeName = async () => {\n    const trimNewName = newName.trim();\n    if (trimNewName.length < 2 || trimNewName.length > 8) {\n      alert(\"변경할 닉네임은 2글자 이상, 8글자 이하여야 합니다.\")\n      setNewName(\"\");\n      return;\n    } else if (trimNewName === userInfo.nickname) {\n      alert(\"현재 닉네임과 동일합니다.\")\n      setNewName(\"\");\n      return;\n    } else if (newName.includes(\"#\")) {\n      alert(\"#은 포함될 수 없습니다.\");\n      setNewName(\"\");\n      return;\n    }\n    const format = JSON.stringify({ nickname: newName });\n    AdminLogPrinter(adminConsole, `changeNickName: ${format}`);\n\n    const changeNickNameRes = await api.changeNickName(adminConsole, format, getMyinfoHandler);\n    if (changeNickNameRes === 401) {\n      const refreshResponse = await api.RefreshToken(adminConsole);\n      if (refreshResponse !== 201) {\n        logOutHandler();\n      } else {\n        const changeNickNameRes = await api.changeNickName(adminConsole, format, getMyinfoHandler);\n        if (changeNickNameRes === 401) {\n          logOutHandler();\n        } else {\n          setchangeNameModal(false);\n          setNewName(\"\");\n        }\n      }\n    } else {\n      setchangeNameModal(false);\n      setNewName(\"\");\n    }\n  };\n\n  const handleEnterEvent = (e: keyboardKey) => {\n    if (e.key === 'Enter') {\n      handleChangeName();\n    }\n  }\n\n  return (\n    <>\n      <div className=\"ChangeNameModalBG\"></div>\n      <div className=\"ChangeNameModal\">\n        <div className=\"SaveNameForm\">\n          <label htmlFor=\"SaveName\">New Nickname</label>\n          <input\n            id=\"SaveName\"\n            type=\"text\"\n            ref={nameInputRef}\n            // pattern=\".{1, 8}\"\n            // required\n            // title=\"1 to 8 characters\"\n            maxLength={12}\n            value={newName}\n            onChange={(e) => {\n              setNewName(e.target.value);\n            }}\n            onKeyPress={(e) => { handleEnterEvent(e) }}\n          />\n        </div>\n        <button type=\"submit\" className=\"SaveName\" onClick={() => handleChangeName()}>\n          Change\n        </button>\n        <button className=\"SaveNameCancel\" onClick={() => setchangeNameModal(false)}>\n          Cancel\n        </button>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}