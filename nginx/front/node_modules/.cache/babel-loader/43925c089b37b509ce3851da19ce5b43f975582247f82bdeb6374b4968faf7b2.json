{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/GamePage/GameResultModal.tsx\",\n  _s = $RefreshSig$();\nimport { useAtomValue, useSetAtom } from \"jotai\";\nimport { useNavigate } from \"react-router-dom\";\nimport { gameWinnerAtom, isGameQuitAtom, isGameStartedAtom, isLoadingAtom, isMatchedAtom, isPrivateAtom } from \"../../components/atom/GameAtom\";\nimport { PressKey } from \"../../event/event.util\";\nimport \"../../styles/GameResultModal.css\";\nimport { userListAtom } from \"../atom/ChatAtom\";\nimport { gameResultModalAtom } from \"../atom/ModalAtom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GameResultModal(_ref) {\n  _s();\n  var _userList$gameWinner;\n  let {\n    leftScore = 0,\n    rightScore = 0\n  } = _ref;\n  const setIsLoading = useSetAtom(isLoadingAtom);\n  const setIsMatched = useSetAtom(isMatchedAtom);\n  const setIsPrivate = useSetAtom(isPrivateAtom);\n  const setIsGameStart = useSetAtom(isGameStartedAtom);\n  const setIsGameQuit = useSetAtom(isGameQuitAtom);\n  const setGameResultModal = useSetAtom(gameResultModalAtom);\n  const userList = useAtomValue(userListAtom);\n  const gameWinner = useAtomValue(gameWinnerAtom);\n  const navigate = useNavigate();\n  const handlerGameQuit = () => {\n    setIsPrivate(false);\n    setIsGameStart(false);\n    setIsLoading(false);\n    setIsMatched(false);\n    setIsGameQuit(true);\n    setGameResultModal(false);\n    navigate(\"/chat\");\n  };\n  PressKey([\"Escape\"], () => {\n    handlerGameQuit();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GameResultModalBG\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GameResultModal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GameResultModalTxt\",\n        children: `${(_userList$gameWinner = userList[gameWinner]) === null || _userList$gameWinner === void 0 ? void 0 : _userList$gameWinner.userDisplayName} Win!`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GameResultModalScore\",\n        children: `${leftScore} : ${rightScore}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"GameResultModalBtn\",\n        onClick: handlerGameQuit,\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(GameResultModal, \"WM9APsFu5C9KUNymFWcJmYjUDYs=\", false, function () {\n  return [useSetAtom, useSetAtom, useSetAtom, useSetAtom, useSetAtom, useSetAtom, useAtomValue, useAtomValue, useNavigate];\n});\n_c = GameResultModal;\nvar _c;\n$RefreshReg$(_c, \"GameResultModal\");","map":{"version":3,"names":["useAtomValue","useSetAtom","useNavigate","gameWinnerAtom","isGameQuitAtom","isGameStartedAtom","isLoadingAtom","isMatchedAtom","isPrivateAtom","PressKey","userListAtom","gameResultModalAtom","jsxDEV","_jsxDEV","Fragment","_Fragment","GameResultModal","_ref","_s","_userList$gameWinner","leftScore","rightScore","setIsLoading","setIsMatched","setIsPrivate","setIsGameStart","setIsGameQuit","setGameResultModal","userList","gameWinner","navigate","handlerGameQuit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","userDisplayName","onClick","_c","$RefreshReg$"],"sources":["/data/front/src/components/GamePage/GameResultModal.tsx"],"sourcesContent":["import { useAtomValue, useSetAtom } from \"jotai\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  gameWinnerAtom, isGameQuitAtom, isGameStartedAtom,\n  isLoadingAtom,\n  isMatchedAtom,\n  isPrivateAtom\n} from \"../../components/atom/GameAtom\";\nimport { PressKey } from \"../../event/event.util\";\nimport \"../../styles/GameResultModal.css\";\nimport { userListAtom } from \"../atom/ChatAtom\";\nimport { gameResultModalAtom } from \"../atom/ModalAtom\";\n\n\nexport default function GameResultModal({\n  leftScore = 0,\n  rightScore = 0,\n}: {\n  leftScore: number;\n  rightScore: number;\n}) {\n  const setIsLoading = useSetAtom(isLoadingAtom);\n  const setIsMatched = useSetAtom(isMatchedAtom);\n  const setIsPrivate = useSetAtom(isPrivateAtom);\n  const setIsGameStart = useSetAtom(isGameStartedAtom);\n  const setIsGameQuit = useSetAtom(isGameQuitAtom);\n  const setGameResultModal = useSetAtom(gameResultModalAtom);\n  const userList = useAtomValue(userListAtom);\n  const gameWinner = useAtomValue(gameWinnerAtom);\n  const navigate = useNavigate();\n\n  const handlerGameQuit = () => {\n    setIsPrivate(false);\n    setIsGameStart(false);\n    setIsLoading(false);\n    setIsMatched(false);\n    setIsGameQuit(true);\n    setGameResultModal(false);\n    navigate(\"/chat\");\n  };\n\n  PressKey([\"Escape\"], () => {\n    handlerGameQuit();\n  });\n\n  return (\n    <>\n      <div className=\"GameResultModalBG\" />\n      <div className=\"GameResultModal\">\n        <div className=\"GameResultModalTxt\">{`${userList[gameWinner]?.userDisplayName} Win!`}</div>\n        <div className=\"GameResultModalScore\">{`${leftScore} : ${rightScore}`}</div>\n        <button className=\"GameResultModalBtn\" onClick={handlerGameQuit}>\n          OK\n        </button>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}