{"ast":null,"code":"import { me, opponent, net, ball, HEIGHT, WIDTH } from \"./GameInfo\";\nfunction drawRect(x, y, w, h, color, context) {\n  if (context) {\n    context.fillStyle = color;\n    context.fillRect(x, y, w, h);\n  }\n}\nfunction drawCircle(x, y, r, color, context) {\n  if (context) {\n    context.fillStyle = color;\n    context.beginPath();\n    context.arc(x, y, r, 0, Math.PI * 2, false);\n    context.closePath();\n    context.fill();\n  }\n}\nfunction drawText(text, x, y, color, context) {\n  if (context) {\n    context.fillStyle = color;\n    context.font = \"50px Arial\";\n    context.fillText(text.toString(), x, y);\n  }\n}\nfunction drawNet(context) {\n  for (let i = 0; i <= HEIGHT; i += 40) {\n    drawRect(net.x, net.y + i, net.width, net.height, net.color, context);\n  }\n}\nexport function game() {\n  const canvas = document.getElementById(\"pong\");\n  const context = canvas === null || canvas === void 0 ? void 0 : canvas.getContext(\"2d\");\n  if (context) {\n    drawRect(0, 0, 1150, 600, \"black\", context);\n    //net\n    drawNet(context);\n    //bar\n    drawRect(me.x, me.y, me.width, me.height, me.color, context);\n    drawRect(opponent.x, opponent.y, opponent.width, opponent.height, opponent.color, context);\n    //ball\n    drawCircle(ball.x, ball.y, ball.radius, ball.color, context);\n    //score\n    drawText(me.score, WIDTH / 4, 50, \"WHITE\", context);\n    drawText(opponent.score, 3 * (WIDTH / 4), 50, \"WHITE\", context);\n  }\n}","map":{"version":3,"names":["me","opponent","net","ball","HEIGHT","WIDTH","drawRect","x","y","w","h","color","context","fillStyle","fillRect","drawCircle","r","beginPath","arc","Math","PI","closePath","fill","drawText","text","font","fillText","toString","drawNet","i","width","height","game","canvas","document","getElementById","getContext","radius","score"],"sources":["/data/front/src/components/GamePage/Pong.tsx"],"sourcesContent":["import { me, opponent, net, ball, HEIGHT, WIDTH } from \"./GameInfo\";\n\nfunction drawRect(\n  x: number,\n  y: number,\n  w: number,\n  h: number,\n  color: string,\n  context: CanvasRenderingContext2D\n) {\n  if (context) {\n    context.fillStyle = color;\n    context.fillRect(x, y, w, h);\n  }\n}\n\nfunction drawCircle(\n  x: number,\n  y: number,\n  r: number,\n  color: string,\n  context: CanvasRenderingContext2D\n) {\n  if (context) {\n    context.fillStyle = color;\n    context.beginPath();\n    context.arc(x, y, r, 0, Math.PI * 2, false);\n    context.closePath();\n    context.fill();\n  }\n}\n\nfunction drawText(\n  text: number,\n  x: number,\n  y: number,\n  color: string,\n  context: CanvasRenderingContext2D\n) {\n  if (context) {\n    context.fillStyle = color;\n    context.font = \"50px Arial\";\n    context.fillText(text.toString(), x, y);\n  }\n}\n\nfunction drawNet(context: CanvasRenderingContext2D) {\n  for (let i = 0; i <= HEIGHT; i += 40) {\n    drawRect(net.x, net.y + i, net.width, net.height, net.color, context);\n  }\n}\n\nexport function game() {\n  const canvas = document.getElementById(\"pong\") as HTMLCanvasElement;\n  const context = canvas?.getContext(\"2d\");\n\n  if (context) {\n    drawRect(0, 0, 1150, 600, \"black\", context);\n    //net\n    drawNet(context);\n    //bar\n    drawRect(me.x, me.y, me.width, me.height, me.color, context);\n    drawRect(opponent.x, opponent.y, opponent.width, opponent.height, opponent.color, context);\n    //ball\n    drawCircle(ball.x, ball.y, ball.radius, ball.color, context);\n    //score\n    drawText(me.score, WIDTH / 4, 50, \"WHITE\", context);\n    drawText(opponent.score, 3 * (WIDTH / 4), 50, \"WHITE\", context);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}