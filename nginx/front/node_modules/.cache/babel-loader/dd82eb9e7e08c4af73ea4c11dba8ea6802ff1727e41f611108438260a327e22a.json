{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/ProfilePage/ProfileOptions.tsx\",\n  _s = $RefreshSig$();\nimport { useAtom } from \"jotai\";\nimport { changeNameModalAtom } from \"../atom/ModalAtom\";\nimport { changeImageModalAtom } from \"../atom/ModalAtom\";\nimport { isMyProfileAtom, TFAAtom } from \"../atom/UserAtom\";\nimport * as chatAtom from \"../../components/atom/ChatAtom\";\nimport * as api from '../../event/api.request';\nimport { useNavigate } from 'react-router-dom';\nimport \"../../styles/ProfilePage.css\";\nimport { refreshTokenAtom } from \"../../components/atom/LoginAtom\";\nimport { AdminLogPrinter } from '../../event/event.util';\nimport { TFAModalAtom, TFAQRURL } from \"../../components/atom/ModalAtom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileOptions() {\n  _s();\n  const [changeNameModal, setchangeNameModal] = useAtom(changeNameModalAtom);\n  const [changeImageModal, setChangeImageModal] = useAtom(changeImageModalAtom);\n  const [isMyProfile] = useAtom(isMyProfileAtom);\n  const [adminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const [tfa, setTfa] = useAtom(TFAAtom);\n  const [, setRefreshToken] = useAtom(refreshTokenAtom);\n  const navigate = useNavigate();\n  const [qrcodeURL, setQRcodeURL] = useAtom(TFAQRURL);\n  const [TFAModal, setTFAModal] = useAtom(TFAModalAtom);\n  const logOutHandler = () => {\n    api.LogOut(adminConsole, setRefreshToken, navigate, \"/\");\n  };\n  const handleFTARequest = async () => {\n    const FTARes = await api.toggleTFA(adminConsole, setQRcodeURL);\n    if (FTARes === 401) {\n      const refreshResponse = await api.RefreshToken(adminConsole);\n      if (refreshResponse !== 201) {\n        logOutHandler();\n      } else {\n        const getMeResponse = await api.toggleTFA(adminConsole, setQRcodeURL);\n        if (getMeResponse == 401) {\n          logOutHandler();\n        }\n      }\n    }\n  };\n  const handleTFA = async () => {\n    if (tfa) {\n      AdminLogPrinter(adminConsole, \"\\n2FA off\");\n      await handleFTARequest();\n    } else {\n      AdminLogPrinter(adminConsole, \"\\n2FA on\");\n      await handleFTARequest();\n      setTFAModal(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isMyProfile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ProfileOptions\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setchangeNameModal(true),\n        children: \"change Nickname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setChangeImageModal(true),\n        children: \"change Profile Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"2FA\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"checkbox_TFA\",\n          name: \"TFA\",\n          value: \"false\",\n          onChange: e => {\n            setTfa(e.target.checked);\n            handleTFA();\n          },\n          checked: tfa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"checkbox_TFA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfileOptions, \"H6e20VvbwhRBolRtaPLl8cFatEU=\", false, function () {\n  return [useAtom, useAtom, useAtom, useAtom, useAtom, useAtom, useNavigate, useAtom, useAtom];\n});\n_c = ProfileOptions;\nvar _c;\n$RefreshReg$(_c, \"ProfileOptions\");","map":{"version":3,"names":["useAtom","changeNameModalAtom","changeImageModalAtom","isMyProfileAtom","TFAAtom","chatAtom","api","useNavigate","refreshTokenAtom","AdminLogPrinter","TFAModalAtom","TFAQRURL","jsxDEV","_jsxDEV","ProfileOptions","_s","changeNameModal","setchangeNameModal","changeImageModal","setChangeImageModal","isMyProfile","adminConsole","adminConsoleAtom","tfa","setTfa","setRefreshToken","navigate","qrcodeURL","setQRcodeURL","TFAModal","setTFAModal","logOutHandler","LogOut","handleFTARequest","FTARes","toggleTFA","refreshResponse","RefreshToken","getMeResponse","handleTFA","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","value","onChange","e","target","checked","htmlFor","_c","$RefreshReg$"],"sources":["/data/front/src/components/ProfilePage/ProfileOptions.tsx"],"sourcesContent":["import { useAtom } from \"jotai\";\nimport { changeNameModalAtom } from \"../atom/ModalAtom\";\nimport { changeImageModalAtom } from \"../atom/ModalAtom\";\nimport { isMyProfileAtom, TFAAtom } from \"../atom/UserAtom\";\n\nimport * as chatAtom from \"../../components/atom/ChatAtom\";\nimport * as api from '../../event/api.request';\n\nimport { useNavigate } from 'react-router-dom';\nimport \"../../styles/ProfilePage.css\";\nimport { useEffect } from 'react';\nimport { refreshTokenAtom } from \"../../components/atom/LoginAtom\";\nimport { AdminLogPrinter } from '../../event/event.util';\nimport { TFAModalAtom, TFAQRURL } from \"../../components/atom/ModalAtom\";\n\nexport default function ProfileOptions() {\n  const [changeNameModal, setchangeNameModal] = useAtom(changeNameModalAtom);\n  const [changeImageModal, setChangeImageModal] = useAtom(changeImageModalAtom);\n  const [isMyProfile] = useAtom(isMyProfileAtom);\n  const [adminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const [tfa, setTfa] = useAtom(TFAAtom);\n  const [, setRefreshToken] = useAtom(refreshTokenAtom);\n  const navigate = useNavigate();\n  const [qrcodeURL, setQRcodeURL] = useAtom(TFAQRURL);\n  const [TFAModal, setTFAModal] = useAtom(TFAModalAtom);\n\n  const logOutHandler = () => {\n    api.LogOut(adminConsole, setRefreshToken, navigate, \"/\");\n  };\n\n  const handleFTARequest = async () => {\n    const FTARes = await api.toggleTFA(adminConsole, setQRcodeURL);\n    if (FTARes === 401) {\n      const refreshResponse = await api.RefreshToken(adminConsole);\n      if (refreshResponse !== 201) {\n        logOutHandler();\n      } else {\n        const getMeResponse = await api.toggleTFA(adminConsole, setQRcodeURL);\n        if (getMeResponse == 401) {\n          logOutHandler();\n        }\n      }\n    }\n  };\n\n  const handleTFA = async () => {\n    if (tfa) {\n      AdminLogPrinter(adminConsole, \"\\n2FA off\");\n      await handleFTARequest();\n    } else {\n      AdminLogPrinter(adminConsole, \"\\n2FA on\");\n      await handleFTARequest();\n      setTFAModal(true);\n    }\n  };\n\n  return (\n    <div>\n      {\n        isMyProfile\n          ? <div className=\"ProfileOptions\">\n            <div onClick={() => setchangeNameModal(true)}>change Nickname</div>\n            <div onClick={() => setChangeImageModal(true)}>change Profile Image</div>\n            <div>\n              2FA\n              <input type=\"checkbox\" id=\"checkbox_TFA\" name=\"TFA\" value=\"false\"\n                onChange={(e) => {\n                  setTfa(e.target.checked);\n                  handleTFA();\n                }\n                }\n                checked={tfa}\n              />\n              <label htmlFor=\"checkbox_TFA\"></label>\n            </div>\n          </div>\n          : ''\n      }\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}