{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/ProfilePage/ProfileOptions.tsx\",\n  _s = $RefreshSig$();\nimport { useAtom } from \"jotai\";\nimport { changeNameModalAtom } from \"../atom/ModalAtom\";\nimport { changeImageModalAtom } from \"../atom/ModalAtom\";\nimport { isMyProfileAtom, TFAAtom, isTFAChange } from \"../atom/UserAtom\";\nimport * as chatAtom from \"../../components/atom/ChatAtom\";\nimport * as api from '../../event/api.request';\nimport { useNavigate } from 'react-router-dom';\nimport \"../../styles/ProfilePage.css\";\nimport { useEffect } from 'react';\nimport { refreshTokenAtom } from \"../../components/atom/LoginAtom\";\nimport { AdminLogPrinter } from '../../event/event.util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileOptions() {\n  _s();\n  const [changeNameModal, setchangeNameModal] = useAtom(changeNameModalAtom);\n  const [changeImageModal, setChangeImageModal] = useAtom(changeImageModalAtom);\n  const [isMyProfile] = useAtom(isMyProfileAtom);\n  const [adminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const [tfa, setTfa] = useAtom(TFAAtom);\n  const [isTFAChanged, setIsTFAChanged] = useAtom(isTFAChange);\n  const [, setRefreshToken] = useAtom(refreshTokenAtom);\n  const navigate = useNavigate();\n  const logOutHandler = () => {\n    api.LogOut(adminConsole, setRefreshToken, navigate, \"/\");\n  };\n  const handleFTARequest = async () => {\n    const FTARes = await api.toggleTFA(adminConsole);\n    if (FTARes === 401) {\n      const refreshResponse = await api.RefreshToken(adminConsole);\n      if (refreshResponse !== 201) {\n        logOutHandler();\n      } else {\n        const getMeResponse = await api.toggleTFA(adminConsole);\n        if (getMeResponse == 401) {\n          logOutHandler();\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    if (isTFAChanged) {\n      if (tfa) {\n        AdminLogPrinter(adminConsole, \"\\n2FA on\");\n        handleFTARequest();\n      } else {\n        AdminLogPrinter(adminConsole, \"\\n2FA off\");\n        handleFTARequest();\n      }\n      setIsTFAChanged(false);\n    }\n  }, [tfa]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isMyProfile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ProfileOptions\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setchangeNameModal(true),\n        children: \"change Nickname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setChangeImageModal(true),\n        children: \"change Profile Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"2FA\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"checkbox_TFA\",\n          name: \"TFA\",\n          value: \"false\",\n          onChange: e => {\n            setTfa(e.target.checked);\n            setIsTFAChanged(true);\n          },\n          checked: tfa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"checkbox_TFA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfileOptions, \"6oSeg7NNmCIbTgDaFfF7QgOG4go=\", false, function () {\n  return [useAtom, useAtom, useAtom, useAtom, useAtom, useAtom, useAtom, useNavigate];\n});\n_c = ProfileOptions;\nvar _c;\n$RefreshReg$(_c, \"ProfileOptions\");","map":{"version":3,"names":["useAtom","changeNameModalAtom","changeImageModalAtom","isMyProfileAtom","TFAAtom","isTFAChange","chatAtom","api","useNavigate","useEffect","refreshTokenAtom","AdminLogPrinter","jsxDEV","_jsxDEV","ProfileOptions","_s","changeNameModal","setchangeNameModal","changeImageModal","setChangeImageModal","isMyProfile","adminConsole","adminConsoleAtom","tfa","setTfa","isTFAChanged","setIsTFAChanged","setRefreshToken","navigate","logOutHandler","LogOut","handleFTARequest","FTARes","toggleTFA","refreshResponse","RefreshToken","getMeResponse","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","value","onChange","e","target","checked","htmlFor","_c","$RefreshReg$"],"sources":["/data/front/src/components/ProfilePage/ProfileOptions.tsx"],"sourcesContent":["import { useAtom } from \"jotai\";\nimport { changeNameModalAtom } from \"../atom/ModalAtom\";\nimport { changeImageModalAtom } from \"../atom/ModalAtom\";\nimport { isMyProfileAtom, TFAAtom, isTFAChange } from \"../atom/UserAtom\";\n\nimport * as chatAtom from \"../../components/atom/ChatAtom\";\nimport * as api from '../../event/api.request';\n\nimport { useNavigate } from 'react-router-dom';\nimport \"../../styles/ProfilePage.css\";\nimport { useEffect } from 'react';\nimport { refreshTokenAtom } from \"../../components/atom/LoginAtom\";\nimport { AdminLogPrinter } from '../../event/event.util';\n\nexport default function ProfileOptions() {\n  const [changeNameModal, setchangeNameModal] = useAtom(changeNameModalAtom);\n  const [changeImageModal, setChangeImageModal] = useAtom(changeImageModalAtom);\n  const [isMyProfile] = useAtom(isMyProfileAtom);\n  const [adminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const [tfa, setTfa] = useAtom(TFAAtom);\n  const [isTFAChanged, setIsTFAChanged] = useAtom(isTFAChange);\n  const [, setRefreshToken] = useAtom(refreshTokenAtom);\n  const navigate = useNavigate();\n\n  const logOutHandler = () => {\n    api.LogOut(adminConsole, setRefreshToken, navigate, \"/\");\n  };\n\n  const handleFTARequest = async () => {\n    const FTARes = await api.toggleTFA(adminConsole);\n    if (FTARes === 401) {\n      const refreshResponse = await api.RefreshToken(adminConsole);\n      if (refreshResponse !== 201) {\n        logOutHandler();\n      } else {\n        const getMeResponse = await api.toggleTFA(adminConsole);\n        if (getMeResponse == 401) {\n          logOutHandler();\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (isTFAChanged) {\n      if (tfa) {\n        AdminLogPrinter(adminConsole, \"\\n2FA on\");\n        handleFTARequest();\n      } else {\n        AdminLogPrinter(adminConsole, \"\\n2FA off\");\n        handleFTARequest();\n      }\n      setIsTFAChanged(false);\n    }\n  }, [tfa]);\n\n  return (\n    <div>\n      {\n        isMyProfile\n          ? <div className=\"ProfileOptions\">\n            <div onClick={() => setchangeNameModal(true)}>change Nickname</div>\n            <div onClick={() => setChangeImageModal(true)}>change Profile Image</div>\n            <div>\n              2FA\n              <input type=\"checkbox\" id=\"checkbox_TFA\" name=\"TFA\" value=\"false\"\n                onChange={(e) => {\n                  setTfa(e.target.checked);\n                  setIsTFAChanged(true);\n                }\n                }\n                checked={tfa}\n              />\n              <label htmlFor=\"checkbox_TFA\"></label>\n            </div>\n          </div>\n          : ''\n      }\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}