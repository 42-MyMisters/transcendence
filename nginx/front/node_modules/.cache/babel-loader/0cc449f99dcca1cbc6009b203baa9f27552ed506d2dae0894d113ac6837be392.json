{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/GamePage/PlayerRecordBoard.tsx\";\nimport \"../../styles/GamePlayerInfo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PlayerRecordLine(_ref) {\n  let {\n    LeftSideNickName,\n    LeftSideScore,\n    RightSideScore,\n    RightSideNickName,\n    color = '#9BDEAC'\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PlayerRecordWrap\",\n    style: {\n      backgroundColor: color\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LeftSideNickName\",\n      children: LeftSideNickName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LeftSideScore\",\n      children: LeftSideScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"VSText\",\n      children: \"VS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RightSideScore\",\n      children: RightSideScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RightSideNickName\",\n      children: RightSideNickName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = PlayerRecordLine;\nexport default function PlayerRecordBoard(_ref2) {\n  let {\n    records,\n    userId\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PlayerRecordBoard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PlayerRecoreList\",\n      children: (records === null || records === void 0 ? void 0 : records.length) === 0 ? '' : records === null || records === void 0 ? void 0 : records.map(game => {\n        return game.winnerUid === userId ? /*#__PURE__*/_jsxDEV(PlayerRecordLine, {\n          LeftSideNickName: game.winnerNickname,\n          LeftSideScore: game.winnerScore,\n          RightSideScore: game.loserScore,\n          RightSideNickName: game.loserNickname\n        }, game.gid + game.winnerNickname, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(PlayerRecordLine, {\n          LeftSideNickName: game.loserNickname,\n          LeftSideScore: game.loserScore,\n          RightSideScore: game.winnerScore,\n          RightSideNickName: game.winnerNickname,\n          color: \"#E2979C\"\n        }, game.gid + game.loserNickname, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c2 = PlayerRecordBoard;\nvar _c, _c2;\n$RefreshReg$(_c, \"PlayerRecordLine\");\n$RefreshReg$(_c2, \"PlayerRecordBoard\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","PlayerRecordLine","_ref","LeftSideNickName","LeftSideScore","RightSideScore","RightSideNickName","color","className","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","PlayerRecordBoard","_ref2","records","userId","length","map","game","winnerUid","winnerNickname","winnerScore","loserScore","loserNickname","gid","_c2","$RefreshReg$"],"sources":["/data/front/src/components/GamePage/PlayerRecordBoard.tsx"],"sourcesContent":["import \"../../styles/GamePlayerInfo.css\";\nimport { GameRecordType } from '../atom/UserAtom';\n\nexport function PlayerRecordLine({\n  LeftSideNickName,\n  LeftSideScore,\n  RightSideScore,\n  RightSideNickName,\n  color = '#9BDEAC',\n}: {\n  LeftSideNickName: string;\n  LeftSideScore: number;\n  RightSideScore: number;\n  RightSideNickName: string;\n  color?: string;\n}) {\n  return (\n    <div className=\"PlayerRecordWrap\" style={{ backgroundColor: color }}>\n      <div className=\"LeftSideNickName\">{LeftSideNickName}</div>\n      <div className=\"LeftSideScore\">{LeftSideScore}</div>\n      <div className=\"VSText\">VS</div>\n      <div className=\"RightSideScore\">{RightSideScore}</div>\n      <div className=\"RightSideNickName\">{RightSideNickName}</div>\n    </div>\n  );\n}\n\nexport default function PlayerRecordBoard({\n  records,\n  userId,\n}: {\n  records: GameRecordType[];\n  userId: number;\n}) {\n  return (\n    <div className=\"PlayerRecordBoard\">\n      <div className=\"PlayerRecoreList\">\n\n        {\n\n          records?.length === 0\n            ? ''\n            : records?.map((game) => {\n              return (\n                game.winnerUid === userId\n                  ? <PlayerRecordLine\n                    key={game.gid + game.winnerNickname}\n                    LeftSideNickName={game.winnerNickname}\n                    LeftSideScore={game.winnerScore}\n                    RightSideScore={game.loserScore}\n                    RightSideNickName={game.loserNickname}\n                  />\n                  : <PlayerRecordLine\n                    key={game.gid + game.loserNickname}\n                    LeftSideNickName={game.loserNickname}\n                    LeftSideScore={game.loserScore}\n                    RightSideScore={game.winnerScore}\n                    RightSideNickName={game.winnerNickname}\n                    color={\"#E2979C\"}\n                  />\n              );\n            })\n        }\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}