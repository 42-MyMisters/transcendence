{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/ChatPage/ChatRoomList.tsx\",\n  _s = $RefreshSig$();\nimport { useAtom } from \"jotai\";\nimport { roomModalAtom } from \"../../components/atom/ModalAtom\";\nimport { passwordInputModalAtom } from \"../../components/atom/ModalAtom\";\nimport \"../../styles/ChatList.css\";\nimport ChatRoom from \"../objects/ChatRoom\";\nimport * as chatAtom from \"../atom/SocketAtom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatRoomList() {\n  _s();\n  const [, setRoomModal] = useAtom(roomModalAtom);\n  const [, setPasswordModal] = useAtom(passwordInputModalAtom);\n  const [roomList] = useAtom(chatAtom.roomListAtom);\n  const roomClickHandler = roomName => {\n    console.log(`roomCLickHandler ${roomName}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ChatListBG ChatRoomList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatListTxt\",\n      children: \"Chatting List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatRoomListPlusBtn\",\n      onClick: () => setRoomModal(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatRooms\",\n      children: [Object.entries(roomList).map(key => /*#__PURE__*/_jsxDEV(ChatRoom, {\n        roomName: roomList[Number(key[0])].roomName,\n        type: roomList[Number(key[0])].roomType\n      }, Number(key[0]), false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this) // TODO: need to implement callback onClick\n      ), /*#__PURE__*/_jsxDEV(ChatRoom, {\n        roomName: \"room1\",\n        type: \"Protected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatRoom, {\n        roomName: \"room2\",\n        type: \"Private\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatRoomList, \"mFnhFoRXdingXeGN0q85QYikllk=\", false, function () {\n  return [useAtom, useAtom, useAtom];\n});\n_c = ChatRoomList;\nvar _c;\n$RefreshReg$(_c, \"ChatRoomList\");","map":{"version":3,"names":["useAtom","roomModalAtom","passwordInputModalAtom","ChatRoom","chatAtom","jsxDEV","_jsxDEV","ChatRoomList","_s","setRoomModal","setPasswordModal","roomList","roomListAtom","roomClickHandler","roomName","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","entries","map","key","Number","type","roomType","_c","$RefreshReg$"],"sources":["/data/front/src/components/ChatPage/ChatRoomList.tsx"],"sourcesContent":["import { useAtom } from \"jotai\";\nimport { roomModalAtom } from \"../../components/atom/ModalAtom\";\nimport { passwordInputModalAtom } from \"../../components/atom/ModalAtom\";\n\nimport \"../../styles/ChatList.css\";\nimport ChatRoom from \"../objects/ChatRoom\";\n\nimport * as chatAtom from \"../atom/SocketAtom\";\n\nexport default function ChatRoomList() {\n  const [, setRoomModal] = useAtom(roomModalAtom);\n  const [, setPasswordModal] = useAtom(passwordInputModalAtom);\n\n  const [roomList] = useAtom(chatAtom.roomListAtom);\n\n  const roomClickHandler = (roomName: string) => {\n    console.log(`roomCLickHandler ${roomName}`);\n  };\n\n  return (\n    <div className=\"ChatListBG ChatRoomList\">\n      <div className=\"ChatListTxt\">Chatting List</div>\n      <div className=\"ChatRoomListPlusBtn\" onClick={() => setRoomModal(true)} />\n      <div className=\"ChatRooms\">\n        {Object.entries(roomList).map((key) => (\n          <ChatRoom\n            key={Number(key[0])}\n            roomName={roomList[Number(key[0])].roomName}\n            type={roomList[Number(key[0])].roomType}\n          /> // TODO: need to implement callback onClick\n        ))}\n        {/* onClick={() => setPasswordModal(true)} */}\n        <ChatRoom roomName=\"room1\" type=\"Protected\"></ChatRoom>\n        <ChatRoom roomName=\"room2\" type=\"Private\"></ChatRoom>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,sBAAsB,QAAQ,iCAAiC;AAExE,OAAO,2BAA2B;AAClC,OAAOC,QAAQ,MAAM,qBAAqB;AAE1C,OAAO,KAAKC,QAAQ,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,GAAGC,YAAY,CAAC,GAAGT,OAAO,CAACC,aAAa,CAAC;EAC/C,MAAM,GAAGS,gBAAgB,CAAC,GAAGV,OAAO,CAACE,sBAAsB,CAAC;EAE5D,MAAM,CAACS,QAAQ,CAAC,GAAGX,OAAO,CAACI,QAAQ,CAACQ,YAAY,CAAC;EAEjD,MAAMC,gBAAgB,GAAIC,QAAgB,IAAK;IAC7CC,OAAO,CAACC,GAAG,CAAE,oBAAmBF,QAAS,EAAC,CAAC;EAC7C,CAAC;EAED,oBACER,OAAA;IAAKW,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtCZ,OAAA;MAAKW,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAChDhB,OAAA;MAAKW,SAAS,EAAC,qBAAqB;MAACM,OAAO,EAAEA,CAAA,KAAMd,YAAY,CAAC,IAAI;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC1EhB,OAAA;MAAKW,SAAS,EAAC,WAAW;MAAAC,QAAA,GACvBM,MAAM,CAACC,OAAO,CAACd,QAAQ,CAAC,CAACe,GAAG,CAAEC,GAAG,iBAChCrB,OAAA,CAACH,QAAQ;QAEPW,QAAQ,EAAEH,QAAQ,CAACiB,MAAM,CAACD,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACb,QAAS;QAC5Ce,IAAI,EAAElB,QAAQ,CAACiB,MAAM,CAACD,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACG;MAAS,GAFnCF,MAAM,CAACD,GAAG,CAAC,CAAC,CAAC,CAAC;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGnB,CAAC;MACJ,CAAC,eAEFhB,OAAA,CAACH,QAAQ;QAACW,QAAQ,EAAC,OAAO;QAACe,IAAI,EAAC;MAAW;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAY,eACvDhB,OAAA,CAACH,QAAQ;QAACW,QAAQ,EAAC,OAAO;QAACe,IAAI,EAAC;MAAS;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAY;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACd,EAAA,CA5BuBD,YAAY;EAAA,QACTP,OAAO,EACHA,OAAO,EAEjBA,OAAO;AAAA;AAAA+B,EAAA,GAJJxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}