version: "3.9"

networks:
  nw-db:
    driver: bridge
  nw-nginx:
    driver: bridge

services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    restart: always
    volumes:
      - type: bind
        source: ./backend
        target: /data
    ports:
      - "4000:4000"
    networks:
      nw-db: {}
      nw-nginx: {}
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: postgres
    image: postgres:latest
    volumes:
      - type: bind
        source: ./db
        target: /var/lib/postgresql/data/pgdata
    restart: always
    networks:
      nw-db:
        aliases:
          - postgres
    env_file:
      - .env
    healthcheck:
      test: pg_isready -d $POSTGRES_DB -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 10s

  # pgadmin:
  #   container_name: pgadmin
  #   image: dpage/pgadmin4:latest
  #   restart: always
  #   ports:
  #     - "8000:80"
  #   env_file:
  #     - ./config/.pgadmin.env
  #   networks:
  #     nw-db: {}
  #   depends_on:
  #     postgres:
  #       condition: service_healthy

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    restart: always
    volumes:
      - type: bind
        source: ./backend/back/img
        target: /img
    networks:
      nw-nginx:
        aliases:
          - nginx
    ports:
      - "8443:8443"
      - "443:443"
      - "80:80"
    env_file:
      - .env
    depends_on:
      backend:
        condition: service_healthy