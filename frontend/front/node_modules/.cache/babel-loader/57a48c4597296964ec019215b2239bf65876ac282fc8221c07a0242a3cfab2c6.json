{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/GamePage/PingPong.tsx\",\n  _s = $RefreshSig$();\nimport \"../../styles/BackGround.css\";\nimport \"../../styles/PingPong.css\";\nimport React, { useEffect } from \"react\";\nimport { Game } from \"./Pong\";\nimport * as game from \"../../socket/game.socket\";\nimport { useRef, useState } from \"react\";\nimport { socket } from \"../../socket/chat.socket\";\nimport { ball, Direction, HEIGHT, Hit, p1, p2, paddle, WIDTH } from \"./GameInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PingPong() {\n  _s();\n  const [upArrow, setUpArrow] = useState(false);\n  const [downArrow, setDownArrow] = useState(false);\n  const canvas = useRef(null);\n  let coords = {\n    paddle1Y: 225,\n    ballX: 1150 / 2,\n    ballY: 300,\n    paddle2Y: 225,\n    ballSpeedX: 0,\n    ballSpeedY: 0,\n    paddleSpeed: 0.6,\n    paddle1YUp: false,\n    paddle1YDown: false,\n    paddle2YUp: false,\n    paddle2YDown: false\n  };\n  let lastUpdateTime = Date.now();\n  let pingInterval;\n  let pingTime;\n  game.gameSocket.on(\"connect\", () => {\n    if (game.gameSocket.connected) {\n      //This attribute describes whether the socket is currently connected to the server.\n      if (game.gameSocket.recovered) {\n        // any missed packets will be received\n      } else {\n        // new or unrecoverable session\n        console.log(\"gameSocket connected\");\n        pingInterval = setInterval(() => {\n          const curTime = Date.now();\n          const handler = pong => {\n            if (pong) {\n              pingTime = Date.now() - curTime;\n              console.log(`ping: ${pingTime}ms`);\n            }\n          };\n          game.gameSocket.emit('ping', handler);\n          return () => {\n            game.gameSocket.off('ping', handler);\n          };\n        }, 1000);\n      }\n    }\n    return () => {\n      game.gameSocket.off(\"connect\");\n    };\n  });\n\n  //https://socket.io/docs/v4/client-socket-instance/#disconnect\n  game.gameSocket.on(\"disconnect\", reason => {\n    /**\n     *  BAD, will throw an error\n     *  gameSocket.emit(\"disconnect\");\n     */\n    if (reason === \"io server disconnect\") {\n      // the disconnection was initiated by the server, you need to reconnect manually\n    }\n    clearInterval(pingInterval);\n    // else the socket will automatically try to reconnect\n    console.log(\"gameSocket disconnected\");\n  });\n\n  // the connection is denied by the server in a middleware function\n  game.gameSocket.on(\"connect_error\", err => {\n    if (err.message === \"unauthorized\") {\n      // handle each case\n    }\n    console.log(err.message); // prints the message associated with the error\n  });\n\n  game.gameSocket.on(\"join-game\", _ref => {\n    let {\n      uid_left,\n      p1,\n      uid_right\n    } = _ref;\n  });\n  useEffect(() => {\n    const handler = started => {\n      lastUpdateTime = Date.now();\n      console.log(\"update start\");\n      update(coords, canvas);\n    };\n    game.gameSocket.on(\"start\", handler);\n    return () => {\n      game.gameSocket.off(\"start\", handler);\n    };\n  }, []);\n  useEffect(() => {\n    const handler = gameCoord => {\n      lastUpdateTime = Date.now();\n      coords = gameCoord;\n      Game(coords, canvas);\n    };\n    game.gameSocket.on(\"graphic\", handler);\n    console.log(`coords: ${JSON.stringify(coords)}`);\n    return () => {\n      socket.off(\"graphic\", handler);\n    };\n  }, []);\n  useEffect(() => {\n    const handler = paddleInfo => {\n      coords.paddle1YUp = paddleInfo.paddle1YUp;\n      coords.paddle1YDown = paddleInfo.paddle1YDown;\n      coords.paddle2YUp = paddleInfo.paddle2YUp;\n      coords.paddle2YDown = paddleInfo.paddle2YDown;\n      Game(coords, canvas);\n    };\n    game.gameSocket.on(\"paddleInfo\", handler);\n    return () => {\n      socket.off(\"paddleInfo\", handler);\n    };\n  }, []);\n  useEffect(() => {\n    const handler = scoreInfo => {\n      p1.score = scoreInfo.p1Score;\n      p2.score = scoreInfo.p2Score;\n      coords.ballSpeedX = 0;\n      coords.ballSpeedY = 0;\n      coords.paddleSpeed = 0;\n      Game(coords, canvas);\n    };\n    game.gameSocket.on(\"scoreInfo\", handler);\n    return () => {\n      socket.off(\"scoreInfo\", handler);\n    };\n  }, []);\n  useEffect(() => {\n    const handler = scoreInfo => {\n      p1.score = scoreInfo.p1Score;\n      p2.score = scoreInfo.p2Score;\n      coords.ballSpeedX = 0;\n      coords.ballSpeedY = 0;\n      coords.paddleSpeed = 0;\n      Game(coords, canvas);\n    };\n    game.gameSocket.on(\"finished\", handler);\n    return () => {\n      socket.off(\"finished\", handler);\n    };\n  }, []);\n  function update(coord, canvas) {\n    const curTime = Date.now();\n    const dt = curTime - lastUpdateTime;\n    paddleUpdate(coord.paddle1YUp, coord.paddle1YDown, coord.paddle2YUp, coord.paddle2YDown, dt);\n    coord.ballX += coord.ballSpeedX * dt;\n    coord.ballY += coord.ballSpeedY * dt;\n    const isHitY = collisionCheckY();\n    const isHitX = collisionCheckX();\n    if (isHitY) {\n      if (coord.ballY < ball.radius) {\n        coord.ballY = 2 * ball.radius - coord.ballY;\n        coord.ballSpeedY = -coord.ballSpeedY;\n      } else {\n        coord.ballY = 2 * (HEIGHT - ball.radius) - coord.ballY;\n        coord.ballSpeedY = -coord.ballSpeedY;\n      }\n    }\n    if (isHitX == Direction.LEFT) {\n      if (collisionCheckP1Paddle() === Hit.PADDLE) {\n        coord.ballX = 2 * (ball.radius + paddle.width) - coord.ballX;\n        coord.ballSpeedX = -coord.ballSpeedX;\n      }\n    } else if (isHitX === Direction.RIGHT) {\n      if (collisionCheckP2Paddle() === Hit.PADDLE) {\n        coord.ballX = 2 * (WIDTH - ball.radius - paddle.width) - coord.ballX;\n        coord.ballSpeedX = -coord.ballSpeedX;\n      }\n    }\n    lastUpdateTime = curTime;\n    Game(coord, canvas);\n    requestAnimationFrame(() => update(coords, canvas));\n  }\n  function paddleUpdate(p1Up, p1Down, p2Up, p2Down, dt) {\n    if (p1Up) {\n      if (coords.paddle1Y > 0) {\n        coords.paddle1Y -= coords.paddleSpeed * dt;\n      }\n      if (coords.paddle1Y < 0) {\n        coords.paddle1Y = 0;\n      }\n    }\n    if (p1Down) {\n      if (coords.paddle1Y < HEIGHT - paddle.height) {\n        coords.paddle1Y += coords.paddleSpeed * dt;\n      }\n      if (coords.paddle1Y > HEIGHT - paddle.height) {\n        coords.paddle1Y = HEIGHT - paddle.height;\n      }\n    }\n    if (p2Up) {\n      if (coords.paddle2Y > 0) {\n        coords.paddle2Y -= coords.paddleSpeed * dt;\n      }\n      if (coords.paddle2Y < 0) {\n        coords.paddle2Y = 0;\n      }\n    }\n    if (p2Down) {\n      if (coords.paddle2Y < HEIGHT - paddle.height) {\n        coords.paddle2Y += coords.paddleSpeed * dt;\n      }\n      if (coords.paddle2Y > HEIGHT - paddle.height) {\n        coords.paddle2Y = HEIGHT - paddle.height;\n      }\n    }\n  }\n  function collisionCheckX() {\n    if (coords.ballX <= ball.radius + paddle.width) {\n      return Direction.LEFT;\n    } else if (coords.ballX >= WIDTH - ball.radius - paddle.width) {\n      return Direction.RIGHT;\n    }\n    return Direction.NONE;\n  }\n  function collisionCheckY() {\n    if (coords.ballY >= HEIGHT - ball.radius) {\n      return Direction.DOWN;\n    } else if (coords.ballY <= ball.radius) {\n      return Direction.UP;\n    }\n    return Direction.NONE;\n  }\n  function collisionCheckP1Paddle() {\n    if (coords.ballY >= coords.paddle1Y && coords.ballY <= coords.paddle1Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n  function collisionCheckP2Paddle() {\n    if (coords.ballY >= coords.paddle2Y && coords.ballY <= coords.paddle2Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n  useEffect(() => {\n    // first draw\n    Game(coords, canvas);\n  }, []);\n  useEffect(() => {\n    function handleKeyPress(event) {\n      if (event.code === \"ArrowUp\") {\n        if (!upArrow) {\n          setUpArrow(true);\n          game.emitUpPress();\n          console.log(\"up press\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        if (!downArrow) {\n          setDownArrow(true);\n          game.emitDownPress();\n          console.log(\"down press\");\n        }\n      }\n    }\n    function handleKeyRelease(event) {\n      if (event.code === \"ArrowUp\") {\n        if (upArrow) {\n          setUpArrow(false);\n          game.emitUpRelease();\n          console.log(\"up release\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        if (downArrow) {\n          setDownArrow(false);\n          game.emitDownRelease();\n          console.log(\"down release\");\n        }\n      }\n    }\n    window.addEventListener(\"keydown\", handleKeyPress);\n    window.addEventListener(\"keyup\", handleKeyRelease);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n      window.removeEventListener(\"keyup\", handleKeyRelease);\n    };\n  }, [upArrow, downArrow]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"QueueBackGround\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas,\n      id: \"pong\",\n      width: 1150,\n      height: 600\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n}\n_s(PingPong, \"p/Ov+EdxAi2jJGMCEXcIMxV5kZc=\");\n_c = PingPong;\nvar _c;\n$RefreshReg$(_c, \"PingPong\");","map":{"version":3,"names":["React","useEffect","Game","game","useRef","useState","socket","ball","Direction","HEIGHT","Hit","p1","p2","paddle","WIDTH","jsxDEV","_jsxDEV","PingPong","_s","upArrow","setUpArrow","downArrow","setDownArrow","canvas","coords","paddle1Y","ballX","ballY","paddle2Y","ballSpeedX","ballSpeedY","paddleSpeed","paddle1YUp","paddle1YDown","paddle2YUp","paddle2YDown","lastUpdateTime","Date","now","pingInterval","pingTime","gameSocket","on","connected","recovered","console","log","setInterval","curTime","handler","pong","emit","off","reason","clearInterval","err","message","_ref","uid_left","uid_right","started","update","gameCoord","JSON","stringify","paddleInfo","scoreInfo","score","p1Score","p2Score","coord","dt","paddleUpdate","isHitY","collisionCheckY","isHitX","collisionCheckX","radius","LEFT","collisionCheckP1Paddle","PADDLE","width","RIGHT","collisionCheckP2Paddle","requestAnimationFrame","p1Up","p1Down","p2Up","p2Down","height","NONE","DOWN","UP","WALL","handleKeyPress","event","code","emitUpPress","emitDownPress","handleKeyRelease","emitUpRelease","emitDownRelease","window","addEventListener","removeEventListener","className","children","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/data/front/src/components/GamePage/PingPong.tsx"],"sourcesContent":["import \"../../styles/BackGround.css\";\nimport \"../../styles/PingPong.css\";\n\nimport React, { useEffect } from \"react\";\n\nimport { GameCoordinate } from \"../atom/GameAtom\";\nimport { Game } from \"./Pong\";\n\nimport * as game from \"../../socket/game.socket\";\n\nimport { useRef, useState } from \"react\";\nimport { socket } from \"../../socket/chat.socket\";\nimport { ball, Direction, HEIGHT, Hit, p1, p2, paddle, paddleInfo, scoreInfo, WIDTH } from \"./GameInfo\";\n\nexport default function PingPong() {\n  const [upArrow, setUpArrow] = useState(false);\n  const [downArrow, setDownArrow] = useState(false);\n  const canvas = useRef<HTMLCanvasElement>(null);\n  \n  let coords = {\n    paddle1Y: 225,\n    ballX: 1150 / 2,\n    ballY: 300,\n    paddle2Y: 225,\n    ballSpeedX: 0,\n    ballSpeedY: 0,\n    paddleSpeed: 0.6,\n    paddle1YUp: false,\n    paddle1YDown: false,\n    paddle2YUp: false,\n    paddle2YDown: false,\n  };\n\n  let lastUpdateTime = Date.now();\n\n  let pingInterval: NodeJS.Timer;\n  let pingTime: number;\n\n  game.gameSocket.on(\"connect\", () => {\n    if (game.gameSocket.connected) {\n      //This attribute describes whether the socket is currently connected to the server.\n      if (game.gameSocket.recovered) {\n        // any missed packets will be received\n      } else {\n        // new or unrecoverable session\n        console.log(\"gameSocket connected\");\n        pingInterval = setInterval(() => {\n          const curTime = Date.now();\n          const handler = (pong: boolean) => {\n            if (pong) {\n              pingTime = Date.now() - curTime;\n              console.log(`ping: ${pingTime}ms`);\n            }\n          }\n          game.gameSocket.emit('ping', handler);\n          return () => {\n            game.gameSocket.off('ping', handler);\n          }\n        }, 1000);\n      }\n    }\n    return () => {\n      game.gameSocket.off(\"connect\");\n    }\n  });\n\n  //https://socket.io/docs/v4/client-socket-instance/#disconnect\n  game.gameSocket.on(\"disconnect\", (reason) => {\n    /**\n     *  BAD, will throw an error\n     *  gameSocket.emit(\"disconnect\");\n     */\n    if (reason === \"io server disconnect\") {\n      // the disconnection was initiated by the server, you need to reconnect manually\n    }\n    clearInterval(pingInterval);\n    // else the socket will automatically try to reconnect\n    console.log(\"gameSocket disconnected\");\n  });\n\n  // the connection is denied by the server in a middleware function\n  game.gameSocket.on(\"connect_error\", (err) => {\n    if (err.message === \"unauthorized\") {\n      // handle each case\n    }\n    console.log(err.message); // prints the message associated with the error\n  });\n\n  game.gameSocket.on(\n    \"join-game\",\n    ({ uid_left, p1, uid_right }: { uid_left: string; p1: number; uid_right: string }) => { }\n  );\n\n  useEffect(() => {\n    const handler = (started: boolean) => {\n      lastUpdateTime = Date.now();\n      console.log(\"update start\");\n      update(coords, canvas);\n    };\n    game.gameSocket.on(\"start\", handler);\n    return () => {\n      game.gameSocket.off(\"start\", handler);\n    };\n  }, []);\n        \n  useEffect(() => {\n    const handler = (gameCoord: GameCoordinate) => {\n      lastUpdateTime = Date.now();\n      coords = gameCoord;\n      Game(coords, canvas);\n    };\n    game.gameSocket.on(\"graphic\", handler);\n    console.log(`coords: ${JSON.stringify(coords)}`)\n    return () => {\n      socket.off(\"graphic\", handler);\n    }\n  }, []);\n  \n  useEffect(() => {\n    const handler = (paddleInfo: paddleInfo) => {\n      coords.paddle1YUp = paddleInfo.paddle1YUp;\n      coords.paddle1YDown = paddleInfo.paddle1YDown;\n      coords.paddle2YUp = paddleInfo.paddle2YUp;\n      coords.paddle2YDown = paddleInfo.paddle2YDown;\n      Game(coords, canvas);\n    };\n    game.gameSocket.on(\"paddleInfo\", handler);\n    return () => {\n      socket.off(\"paddleInfo\", handler);\n    }\n  }, []);\n\n  useEffect(() => {\n    const handler = (scoreInfo: scoreInfo) => {\n      p1.score = scoreInfo.p1Score;\n      p2.score = scoreInfo.p2Score;\n      coords.ballSpeedX = 0;\n      coords.ballSpeedY = 0;\n      coords.paddleSpeed = 0;\n      Game(coords, canvas);\n    };\n    game.gameSocket.on(\"scoreInfo\", handler);\n    return () => {\n      socket.off(\"scoreInfo\", handler);\n    }\n  }, []);\n\n  useEffect(() => {\n    const handler = (scoreInfo: scoreInfo) => {\n      p1.score = scoreInfo.p1Score;\n      p2.score = scoreInfo.p2Score;\n      coords.ballSpeedX = 0;\n      coords.ballSpeedY = 0;\n      coords.paddleSpeed = 0;\n      Game(coords, canvas);\n    };\n    game.gameSocket.on(\"finished\", handler);\n    return () => {\n      socket.off(\"finished\", handler);\n    }\n  }, []);\n  \n  function update(coord:GameCoordinate, canvas:React.RefObject<HTMLCanvasElement>) {\n    const curTime = Date.now();\n    const dt = curTime - lastUpdateTime;\n\n    paddleUpdate(coord.paddle1YUp, coord.paddle1YDown,coord.paddle2YUp, coord.paddle2YDown, dt);\n    coord.ballX += coord.ballSpeedX * dt;\n    coord.ballY += coord.ballSpeedY * dt;\n    const isHitY = collisionCheckY();\n    const isHitX = collisionCheckX();\n    if (isHitY) {\n      if (coord.ballY < ball.radius) {\n        coord.ballY = 2 * ball.radius - coord.ballY;\n        coord.ballSpeedY = -coord.ballSpeedY;\n      } else {\n        coord.ballY = 2 * (HEIGHT - ball.radius) - coord.ballY;\n        coord.ballSpeedY = -coord.ballSpeedY;\n      }\n    }\n    if (isHitX == Direction.LEFT) {\n      if (collisionCheckP1Paddle() === Hit.PADDLE) {\n        coord.ballX = 2 * (ball.radius + paddle.width) - coord.ballX;\n        coord.ballSpeedX = -coord.ballSpeedX;\n      }\n    } else if (isHitX === Direction.RIGHT) {\n      if (collisionCheckP2Paddle() === Hit.PADDLE) {\n        coord.ballX = 2 * (WIDTH - ball.radius - paddle.width) - coord.ballX;\n        coord.ballSpeedX = -coord.ballSpeedX;\n      }\n    }\n    lastUpdateTime = curTime;\n    Game(coord, canvas);\n    requestAnimationFrame(() => update(coords, canvas));\n  }\n  \n  function paddleUpdate(p1Up: boolean, p1Down: boolean, p2Up: boolean, p2Down: boolean, dt: number) {\n    if (p1Up) {\n      if (coords.paddle1Y > 0){\n        coords.paddle1Y -= coords.paddleSpeed * dt;\n      }\n      if (coords.paddle1Y < 0) {\n        coords.paddle1Y = 0;\n      }\n    }\n    if (p1Down) {\n      if (coords.paddle1Y < HEIGHT - paddle.height){\n        coords.paddle1Y += coords.paddleSpeed * dt;\n      }\n      if (coords.paddle1Y > HEIGHT - paddle.height) {\n        coords.paddle1Y = HEIGHT - paddle.height;\n      }\n    }\n    if (p2Up) {\n      if (coords.paddle2Y > 0) {\n        coords.paddle2Y -= coords.paddleSpeed * dt;\n      }\n      if (coords.paddle2Y < 0) {\n        coords.paddle2Y = 0;\n      }\n    }\n    if (p2Down) {\n      if (coords.paddle2Y < HEIGHT - paddle.height){\n        coords.paddle2Y += coords.paddleSpeed * dt;\n      }\n      if (coords.paddle2Y > HEIGHT - paddle.height) {\n        coords.paddle2Y = HEIGHT - paddle.height;\n      }\n    }\n  }\n\n  function collisionCheckX() {\n    if (coords.ballX <= ball.radius + paddle.width) {\n      return Direction.LEFT;\n    } else if (coords.ballX >= WIDTH - ball.radius - paddle.width) {\n      return Direction.RIGHT;\n    }\n    return Direction.NONE;\n  }\n\n  function collisionCheckY() {\n    if (coords.ballY >= HEIGHT - ball.radius) {\n      return Direction.DOWN;\n    } else if (coords.ballY <= ball.radius) {\n      return Direction.UP;\n    }\n    return Direction.NONE;\n  }\n\n  function collisionCheckP1Paddle() {\n    if (coords.ballY >= coords.paddle1Y && coords.ballY <= coords.paddle1Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n\n  function collisionCheckP2Paddle() {\n    if (coords.ballY >= coords.paddle2Y && coords.ballY <= coords.paddle2Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n\n  useEffect(() => {\n    // first draw\n    Game(coords, canvas);\n  }, []);\n\n  useEffect(() => {\n    function handleKeyPress(event: globalThis.KeyboardEvent) {\n      if (event.code === \"ArrowUp\") {\n        if (!upArrow) {\n          setUpArrow(true);\n          game.emitUpPress();\n          console.log(\"up press\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        if (!downArrow) {\n          setDownArrow(true);\n          game.emitDownPress();\n          console.log(\"down press\");\n        }\n      }\n    }\n\n    function handleKeyRelease(event: globalThis.KeyboardEvent) {\n      if (event.code === \"ArrowUp\") {\n        if (upArrow) {\n          setUpArrow(false);\n          game.emitUpRelease();\n          console.log(\"up release\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        if (downArrow) {\n          setDownArrow(false);\n          game.emitDownRelease();\n          console.log(\"down release\");\n        }\n      }\n    }\n    window.addEventListener(\"keydown\", handleKeyPress);\n    window.addEventListener(\"keyup\", handleKeyRelease);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n      window.removeEventListener(\"keyup\", handleKeyRelease);\n    };\n  }, [upArrow, downArrow]);\n\n  return (\n    <div className=\"QueueBackGround\">\n      <canvas ref={canvas} id=\"pong\" width={1150} height={600}></canvas>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}