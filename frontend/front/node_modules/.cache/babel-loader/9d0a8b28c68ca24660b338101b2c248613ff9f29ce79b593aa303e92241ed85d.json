{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/GamePage/PingPong.tsx\",\n  _s = $RefreshSig$();\nimport \"../../styles/BackGround.css\";\nimport \"../../styles/PingPong.css\";\nimport React, { useEffect } from \"react\";\nimport { useAtom } from \"jotai\";\nimport * as chatAtom from \"../atom/ChatAtom\";\nimport { Game } from \"./Pong\";\nimport * as game from \"../../socket/game.socket\";\nimport { useRef, useState } from \"react\";\nimport { socket } from \"../../socket/chat.socket\";\nimport { ball, Direction, HEIGHT, Hit, p1, p2, paddle, WIDTH } from \"./GameInfo\";\nimport { AdminLogPrinter } from \"../../event/event.util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PingPong() {\n  _s();\n  const [upArrow, setUpArrow] = useState(false);\n  const [downArrow, setDownArrow] = useState(false);\n  const [adminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const canvas = useRef(null);\n  let coords = {\n    paddle1Y: 225,\n    ballX: 1150 / 2,\n    ballY: 300,\n    paddle2Y: 225,\n    ballSpeedX: 0,\n    ballSpeedY: 0,\n    paddleSpeed: 0.6,\n    paddle1YUp: false,\n    paddle1YDown: false,\n    paddle2YUp: false,\n    paddle2YDown: false\n  };\n  let lastUpdateTime = Date.now();\n  let pingInterval;\n  let pingTime;\n  game.gameSocket.on(\"connect\", () => {\n    if (game.gameSocket.connected) {\n      //This attribute describes whether the socket is currently connected to the server.\n      if (game.gameSocket.recovered) {\n        // any missed packets will be received\n      } else {\n        // new or unrecoverable session\n        AdminLogPrinter(adminConsole, \"gameSocket connected\");\n        pingInterval = setInterval(() => {\n          const curTime = Date.now();\n          const handler = pong => {\n            if (pong) {\n              pingTime = Date.now() - curTime;\n              AdminLogPrinter(adminConsole, `ping: ${pingTime}ms`);\n            }\n          };\n          game.gameSocket.emit('ping', handler);\n          return () => {\n            game.gameSocket.off('ping', handler);\n          };\n        }, 1000);\n      }\n    }\n    return () => {\n      game.gameSocket.off(\"connect\");\n    };\n  });\n\n  //https://socket.io/docs/v4/client-socket-instance/#disconnect\n  game.gameSocket.on(\"disconnect\", reason => {\n    /**\n     *  BAD, will throw an error\n     *  gameSocket.emit(\"disconnect\");\n     */\n    if (reason === \"io server disconnect\") {\n      // the disconnection was initiated by the server, you need to reconnect manually\n    }\n    clearInterval(pingInterval);\n    // else the socket will automatically try to reconnect\n    AdminLogPrinter(adminConsole, \"gameSocket disconnected\");\n  });\n\n  // the connection is denied by the server in a middleware function\n  game.gameSocket.on(\"connect_error\", err => {\n    if (err.message === \"unauthorized\") {\n      // handle each case\n    }\n    AdminLogPrinter(adminConsole, err.message); // prints the message associated with the error\n  });\n\n  game.gameSocket.on(\"join-game\", _ref => {\n    let {\n      uid_left,\n      p1,\n      uid_right\n    } = _ref;\n  });\n  useEffect(() => {\n    const handler = started => {\n      lastUpdateTime = Date.now();\n      AdminLogPrinter(adminConsole, \"update start\");\n      update(coords, canvas);\n    };\n    game.gameSocket.on(\"start\", handler);\n    return () => {\n      game.gameSocket.off(\"start\", handler);\n    };\n  }, []);\n  useEffect(() => {\n    const handler = gameCoord => {\n      lastUpdateTime = Date.now();\n      coords = gameCoord;\n      Game(coords, canvas);\n    };\n    game.gameSocket.on(\"graphic\", handler);\n    AdminLogPrinter(adminConsole, `coords: ${JSON.stringify(coords)}`);\n    return () => {\n      socket.off(\"graphic\", handler);\n    };\n  }, []);\n  useEffect(() => {\n    const handler = paddleInfo => {\n      coords.paddle1YUp = paddleInfo.paddle1YUp;\n      coords.paddle1YDown = paddleInfo.paddle1YDown;\n      coords.paddle2YUp = paddleInfo.paddle2YUp;\n      coords.paddle2YDown = paddleInfo.paddle2YDown;\n      Game(coords, canvas);\n    };\n    game.gameSocket.on(\"paddleInfo\", handler);\n    return () => {\n      socket.off(\"paddleInfo\", handler);\n    };\n  }, []);\n  useEffect(() => {\n    const handler = scoreInfo => {\n      p1.score = scoreInfo.p1Score;\n      p2.score = scoreInfo.p2Score;\n      coords.ballSpeedX = 0;\n      coords.ballSpeedY = 0;\n      coords.paddleSpeed = 0;\n      Game(coords, canvas);\n    };\n    game.gameSocket.on(\"scoreInfo\", handler);\n    return () => {\n      socket.off(\"scoreInfo\", handler);\n    };\n  }, []);\n  useEffect(() => {\n    const handler = scoreInfo => {\n      p1.score = scoreInfo.p1Score;\n      p2.score = scoreInfo.p2Score;\n      coords.ballSpeedX = 0;\n      coords.ballSpeedY = 0;\n      coords.paddleSpeed = 0;\n      Game(coords, canvas);\n    };\n    game.gameSocket.on(\"finished\", handler);\n    return () => {\n      socket.off(\"finished\", handler);\n    };\n  }, []);\n  function update(coord, canvas) {\n    const curTime = Date.now();\n    const dt = curTime - lastUpdateTime;\n    paddleUpdate(coord.paddle1YUp, coord.paddle1YDown, coord.paddle2YUp, coord.paddle2YDown, dt);\n    coord.ballX += coord.ballSpeedX * dt;\n    coord.ballY += coord.ballSpeedY * dt;\n    const isHitY = collisionCheckY();\n    const isHitX = collisionCheckX();\n    if (isHitY) {\n      if (coord.ballY < ball.radius) {\n        coord.ballY = 2 * ball.radius - coord.ballY;\n        coord.ballSpeedY = -coord.ballSpeedY;\n      } else {\n        coord.ballY = 2 * (HEIGHT - ball.radius) - coord.ballY;\n        coord.ballSpeedY = -coord.ballSpeedY;\n      }\n    }\n    if (isHitX == Direction.LEFT) {\n      if (collisionCheckP1Paddle() === Hit.PADDLE) {\n        coord.ballX = 2 * (ball.radius + paddle.width) - coord.ballX;\n        coord.ballSpeedX = -coord.ballSpeedX;\n      }\n    } else if (isHitX === Direction.RIGHT) {\n      if (collisionCheckP2Paddle() === Hit.PADDLE) {\n        coord.ballX = 2 * (WIDTH - ball.radius - paddle.width) - coord.ballX;\n        coord.ballSpeedX = -coord.ballSpeedX;\n      }\n    }\n    lastUpdateTime = curTime;\n    Game(coord, canvas);\n    requestAnimationFrame(() => update(coords, canvas));\n  }\n  function paddleUpdate(p1Up, p1Down, p2Up, p2Down, dt) {\n    if (p1Up) {\n      if (coords.paddle1Y > 0) {\n        coords.paddle1Y -= coords.paddleSpeed * dt;\n      }\n      if (coords.paddle1Y < 0) {\n        coords.paddle1Y = 0;\n      }\n    }\n    if (p1Down) {\n      if (coords.paddle1Y < HEIGHT - paddle.height) {\n        coords.paddle1Y += coords.paddleSpeed * dt;\n      }\n      if (coords.paddle1Y > HEIGHT - paddle.height) {\n        coords.paddle1Y = HEIGHT - paddle.height;\n      }\n    }\n    if (p2Up) {\n      if (coords.paddle2Y > 0) {\n        coords.paddle2Y -= coords.paddleSpeed * dt;\n      }\n      if (coords.paddle2Y < 0) {\n        coords.paddle2Y = 0;\n      }\n    }\n    if (p2Down) {\n      if (coords.paddle2Y < HEIGHT - paddle.height) {\n        coords.paddle2Y += coords.paddleSpeed * dt;\n      }\n      if (coords.paddle2Y > HEIGHT - paddle.height) {\n        coords.paddle2Y = HEIGHT - paddle.height;\n      }\n    }\n  }\n  function collisionCheckX() {\n    if (coords.ballX <= ball.radius + paddle.width) {\n      return Direction.LEFT;\n    } else if (coords.ballX >= WIDTH - ball.radius - paddle.width) {\n      return Direction.RIGHT;\n    }\n    return Direction.NONE;\n  }\n  function collisionCheckY() {\n    if (coords.ballY >= HEIGHT - ball.radius) {\n      return Direction.DOWN;\n    } else if (coords.ballY <= ball.radius) {\n      return Direction.UP;\n    }\n    return Direction.NONE;\n  }\n  function collisionCheckP1Paddle() {\n    if (coords.ballY >= coords.paddle1Y && coords.ballY <= coords.paddle1Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n  function collisionCheckP2Paddle() {\n    if (coords.ballY >= coords.paddle2Y && coords.ballY <= coords.paddle2Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n  useEffect(() => {\n    // first draw\n    Game(coords, canvas);\n  }, []);\n  useEffect(() => {\n    function handleKeyPress(event) {\n      if (event.code === \"ArrowUp\") {\n        if (!upArrow) {\n          setUpArrow(true);\n          game.emitUpPress();\n          AdminLogPrinter(adminConsole, \"up press\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        if (!downArrow) {\n          setDownArrow(true);\n          game.emitDownPress();\n          AdminLogPrinter(adminConsole, \"down press\");\n        }\n      }\n    }\n    function handleKeyRelease(event) {\n      if (event.code === \"ArrowUp\") {\n        if (upArrow) {\n          setUpArrow(false);\n          game.emitUpRelease();\n          AdminLogPrinter(adminConsole, \"up release\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        if (downArrow) {\n          setDownArrow(false);\n          game.emitDownRelease();\n          AdminLogPrinter(adminConsole, \"down release\");\n        }\n      }\n    }\n    window.addEventListener(\"keydown\", handleKeyPress);\n    window.addEventListener(\"keyup\", handleKeyRelease);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n      window.removeEventListener(\"keyup\", handleKeyRelease);\n    };\n  }, [upArrow, downArrow]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"QueueBackGround\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas,\n      id: \"pong\",\n      width: 1150,\n      height: 600\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 5\n  }, this);\n}\n_s(PingPong, \"DqKIw1gQ9gOFhjia/e+ieFq9yJw=\", false, function () {\n  return [useAtom];\n});\n_c = PingPong;\nvar _c;\n$RefreshReg$(_c, \"PingPong\");","map":{"version":3,"names":["React","useEffect","useAtom","chatAtom","Game","game","useRef","useState","socket","ball","Direction","HEIGHT","Hit","p1","p2","paddle","WIDTH","AdminLogPrinter","jsxDEV","_jsxDEV","PingPong","_s","upArrow","setUpArrow","downArrow","setDownArrow","adminConsole","adminConsoleAtom","canvas","coords","paddle1Y","ballX","ballY","paddle2Y","ballSpeedX","ballSpeedY","paddleSpeed","paddle1YUp","paddle1YDown","paddle2YUp","paddle2YDown","lastUpdateTime","Date","now","pingInterval","pingTime","gameSocket","on","connected","recovered","setInterval","curTime","handler","pong","emit","off","reason","clearInterval","err","message","_ref","uid_left","uid_right","started","update","gameCoord","JSON","stringify","paddleInfo","scoreInfo","score","p1Score","p2Score","coord","dt","paddleUpdate","isHitY","collisionCheckY","isHitX","collisionCheckX","radius","LEFT","collisionCheckP1Paddle","PADDLE","width","RIGHT","collisionCheckP2Paddle","requestAnimationFrame","p1Up","p1Down","p2Up","p2Down","height","NONE","DOWN","UP","WALL","handleKeyPress","event","code","emitUpPress","emitDownPress","handleKeyRelease","emitUpRelease","emitDownRelease","window","addEventListener","removeEventListener","className","children","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/data/front/src/components/GamePage/PingPong.tsx"],"sourcesContent":["import \"../../styles/BackGround.css\";\nimport \"../../styles/PingPong.css\";\n\nimport React, { useEffect } from \"react\";\nimport { useAtom } from \"jotai\";\nimport { GameCoordinate } from \"../atom/GameAtom\";\nimport * as chatAtom from \"../atom/ChatAtom\";\nimport { Game } from \"./Pong\";\n\nimport * as game from \"../../socket/game.socket\";\n\nimport { useRef, useState } from \"react\";\nimport { socket } from \"../../socket/chat.socket\";\nimport { ball, Direction, HEIGHT, Hit, p1, p2, paddle, paddleInfo, scoreInfo, WIDTH } from \"./GameInfo\";\n\nimport { AdminLogPrinter } from \"../../event/event.util\";\n\nexport default function PingPong() {\n  const [upArrow, setUpArrow] = useState(false);\n  const [downArrow, setDownArrow] = useState(false);\n  const [adminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const canvas = useRef<HTMLCanvasElement>(null);\n\n  let coords = {\n    paddle1Y: 225,\n    ballX: 1150 / 2,\n    ballY: 300,\n    paddle2Y: 225,\n    ballSpeedX: 0,\n    ballSpeedY: 0,\n    paddleSpeed: 0.6,\n    paddle1YUp: false,\n    paddle1YDown: false,\n    paddle2YUp: false,\n    paddle2YDown: false,\n  };\n\n  let lastUpdateTime = Date.now();\n\n  let pingInterval: NodeJS.Timer;\n  let pingTime: number;\n\n  game.gameSocket.on(\"connect\", () => {\n    if (game.gameSocket.connected) {\n      //This attribute describes whether the socket is currently connected to the server.\n      if (game.gameSocket.recovered) {\n        // any missed packets will be received\n      } else {\n        // new or unrecoverable session\n        AdminLogPrinter(adminConsole, \"gameSocket connected\");\n        pingInterval = setInterval(() => {\n          const curTime = Date.now();\n          const handler = (pong: boolean) => {\n            if (pong) {\n              pingTime = Date.now() - curTime;\n              AdminLogPrinter(adminConsole, `ping: ${pingTime}ms`);\n            }\n          }\n          game.gameSocket.emit('ping', handler);\n          return () => {\n            game.gameSocket.off('ping', handler);\n          }\n        }, 1000);\n      }\n    }\n    return () => {\n      game.gameSocket.off(\"connect\");\n    }\n  });\n\n  //https://socket.io/docs/v4/client-socket-instance/#disconnect\n  game.gameSocket.on(\"disconnect\", (reason) => {\n    /**\n     *  BAD, will throw an error\n     *  gameSocket.emit(\"disconnect\");\n     */\n    if (reason === \"io server disconnect\") {\n      // the disconnection was initiated by the server, you need to reconnect manually\n    }\n    clearInterval(pingInterval);\n    // else the socket will automatically try to reconnect\n    AdminLogPrinter(adminConsole, \"gameSocket disconnected\");\n  });\n\n  // the connection is denied by the server in a middleware function\n  game.gameSocket.on(\"connect_error\", (err) => {\n    if (err.message === \"unauthorized\") {\n      // handle each case\n    }\n    AdminLogPrinter(adminConsole, err.message); // prints the message associated with the error\n  });\n\n  game.gameSocket.on(\n    \"join-game\",\n    ({ uid_left, p1, uid_right }: { uid_left: string; p1: number; uid_right: string }) => { }\n  );\n\n  useEffect(() => {\n    const handler = (started: boolean) => {\n      lastUpdateTime = Date.now();\n      AdminLogPrinter(adminConsole, \"update start\");\n      update(coords, canvas);\n    };\n    game.gameSocket.on(\"start\", handler);\n    return () => {\n      game.gameSocket.off(\"start\", handler);\n    };\n  }, []);\n\n  useEffect(() => {\n    const handler = (gameCoord: GameCoordinate) => {\n      lastUpdateTime = Date.now();\n      coords = gameCoord;\n      Game(coords, canvas);\n    };\n    game.gameSocket.on(\"graphic\", handler);\n    AdminLogPrinter(adminConsole, `coords: ${JSON.stringify(coords)}`)\n    return () => {\n      socket.off(\"graphic\", handler);\n    }\n  }, []);\n\n  useEffect(() => {\n    const handler = (paddleInfo: paddleInfo) => {\n      coords.paddle1YUp = paddleInfo.paddle1YUp;\n      coords.paddle1YDown = paddleInfo.paddle1YDown;\n      coords.paddle2YUp = paddleInfo.paddle2YUp;\n      coords.paddle2YDown = paddleInfo.paddle2YDown;\n      Game(coords, canvas);\n    };\n    game.gameSocket.on(\"paddleInfo\", handler);\n    return () => {\n      socket.off(\"paddleInfo\", handler);\n    }\n  }, []);\n\n  useEffect(() => {\n    const handler = (scoreInfo: scoreInfo) => {\n      p1.score = scoreInfo.p1Score;\n      p2.score = scoreInfo.p2Score;\n      coords.ballSpeedX = 0;\n      coords.ballSpeedY = 0;\n      coords.paddleSpeed = 0;\n      Game(coords, canvas);\n    };\n    game.gameSocket.on(\"scoreInfo\", handler);\n    return () => {\n      socket.off(\"scoreInfo\", handler);\n    }\n  }, []);\n\n  useEffect(() => {\n    const handler = (scoreInfo: scoreInfo) => {\n      p1.score = scoreInfo.p1Score;\n      p2.score = scoreInfo.p2Score;\n      coords.ballSpeedX = 0;\n      coords.ballSpeedY = 0;\n      coords.paddleSpeed = 0;\n      Game(coords, canvas);\n    };\n    game.gameSocket.on(\"finished\", handler);\n    return () => {\n      socket.off(\"finished\", handler);\n    }\n  }, []);\n\n  function update(coord: GameCoordinate, canvas: React.RefObject<HTMLCanvasElement>) {\n    const curTime = Date.now();\n    const dt = curTime - lastUpdateTime;\n\n    paddleUpdate(coord.paddle1YUp, coord.paddle1YDown, coord.paddle2YUp, coord.paddle2YDown, dt);\n    coord.ballX += coord.ballSpeedX * dt;\n    coord.ballY += coord.ballSpeedY * dt;\n    const isHitY = collisionCheckY();\n    const isHitX = collisionCheckX();\n    if (isHitY) {\n      if (coord.ballY < ball.radius) {\n        coord.ballY = 2 * ball.radius - coord.ballY;\n        coord.ballSpeedY = -coord.ballSpeedY;\n      } else {\n        coord.ballY = 2 * (HEIGHT - ball.radius) - coord.ballY;\n        coord.ballSpeedY = -coord.ballSpeedY;\n      }\n    }\n    if (isHitX == Direction.LEFT) {\n      if (collisionCheckP1Paddle() === Hit.PADDLE) {\n        coord.ballX = 2 * (ball.radius + paddle.width) - coord.ballX;\n        coord.ballSpeedX = -coord.ballSpeedX;\n      }\n    } else if (isHitX === Direction.RIGHT) {\n      if (collisionCheckP2Paddle() === Hit.PADDLE) {\n        coord.ballX = 2 * (WIDTH - ball.radius - paddle.width) - coord.ballX;\n        coord.ballSpeedX = -coord.ballSpeedX;\n      }\n    }\n    lastUpdateTime = curTime;\n    Game(coord, canvas);\n    requestAnimationFrame(() => update(coords, canvas));\n  }\n\n  function paddleUpdate(p1Up: boolean, p1Down: boolean, p2Up: boolean, p2Down: boolean, dt: number) {\n    if (p1Up) {\n      if (coords.paddle1Y > 0) {\n        coords.paddle1Y -= coords.paddleSpeed * dt;\n      }\n      if (coords.paddle1Y < 0) {\n        coords.paddle1Y = 0;\n      }\n    }\n    if (p1Down) {\n      if (coords.paddle1Y < HEIGHT - paddle.height) {\n        coords.paddle1Y += coords.paddleSpeed * dt;\n      }\n      if (coords.paddle1Y > HEIGHT - paddle.height) {\n        coords.paddle1Y = HEIGHT - paddle.height;\n      }\n    }\n    if (p2Up) {\n      if (coords.paddle2Y > 0) {\n        coords.paddle2Y -= coords.paddleSpeed * dt;\n      }\n      if (coords.paddle2Y < 0) {\n        coords.paddle2Y = 0;\n      }\n    }\n    if (p2Down) {\n      if (coords.paddle2Y < HEIGHT - paddle.height) {\n        coords.paddle2Y += coords.paddleSpeed * dt;\n      }\n      if (coords.paddle2Y > HEIGHT - paddle.height) {\n        coords.paddle2Y = HEIGHT - paddle.height;\n      }\n    }\n  }\n\n  function collisionCheckX() {\n    if (coords.ballX <= ball.radius + paddle.width) {\n      return Direction.LEFT;\n    } else if (coords.ballX >= WIDTH - ball.radius - paddle.width) {\n      return Direction.RIGHT;\n    }\n    return Direction.NONE;\n  }\n\n  function collisionCheckY() {\n    if (coords.ballY >= HEIGHT - ball.radius) {\n      return Direction.DOWN;\n    } else if (coords.ballY <= ball.radius) {\n      return Direction.UP;\n    }\n    return Direction.NONE;\n  }\n\n  function collisionCheckP1Paddle() {\n    if (coords.ballY >= coords.paddle1Y && coords.ballY <= coords.paddle1Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n\n  function collisionCheckP2Paddle() {\n    if (coords.ballY >= coords.paddle2Y && coords.ballY <= coords.paddle2Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n\n  useEffect(() => {\n    // first draw\n    Game(coords, canvas);\n  }, []);\n\n  useEffect(() => {\n    function handleKeyPress(event: globalThis.KeyboardEvent) {\n      if (event.code === \"ArrowUp\") {\n        if (!upArrow) {\n          setUpArrow(true);\n          game.emitUpPress();\n          AdminLogPrinter(adminConsole, \"up press\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        if (!downArrow) {\n          setDownArrow(true);\n          game.emitDownPress();\n          AdminLogPrinter(adminConsole, \"down press\");\n        }\n      }\n    }\n\n    function handleKeyRelease(event: globalThis.KeyboardEvent) {\n      if (event.code === \"ArrowUp\") {\n        if (upArrow) {\n          setUpArrow(false);\n          game.emitUpRelease();\n          AdminLogPrinter(adminConsole, \"up release\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        if (downArrow) {\n          setDownArrow(false);\n          game.emitDownRelease();\n          AdminLogPrinter(adminConsole, \"down release\");\n        }\n      }\n    }\n    window.addEventListener(\"keydown\", handleKeyPress);\n    window.addEventListener(\"keyup\", handleKeyRelease);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n      window.removeEventListener(\"keyup\", handleKeyRelease);\n    };\n  }, [upArrow, downArrow]);\n\n  return (\n    <div className=\"QueueBackGround\">\n      <canvas ref={canvas} id=\"pong\" width={1150} height={600}></canvas>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}