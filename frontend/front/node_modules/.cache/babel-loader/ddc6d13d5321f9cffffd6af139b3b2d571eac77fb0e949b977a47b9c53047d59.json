{"ast":null,"code":"import { atom } from \"jotai\";\nexport const needToLogout = atom(false);\nexport const roomListAtom = atom({});\nexport const userListAtom = atom({});\nexport const dmHistoryListAtom = atom({});\nexport const followingListAtom = atom({});\nexport const blockListAtom = atom({});\nexport const hasLoginAtom = atom(false);\nexport const isFirstLoginAtom = atom(true);\nexport const focusRoomAtom = atom(-1);\nexport const clickRoomAtom = atom(-1);\nexport const socketStateAtom = atom(false);\nexport const roomSettingAtom = atom(false);\nexport const roomSettingIsPrivateAtom = atom(false);\nexport const roomSettingCurrentRoomNameAtom = atom('');\nexport const adminConsoleAtom = atom(false);\nexport const leaderBoardAtom = atom([]);","map":{"version":3,"names":["atom","needToLogout","roomListAtom","userListAtom","dmHistoryListAtom","followingListAtom","blockListAtom","hasLoginAtom","isFirstLoginAtom","focusRoomAtom","clickRoomAtom","socketStateAtom","roomSettingAtom","roomSettingIsPrivateAtom","roomSettingCurrentRoomNameAtom","adminConsoleAtom","leaderBoardAtom"],"sources":["/data/front/src/components/atom/ChatAtom.ts"],"sourcesContent":["import { atom } from \"jotai\";\nimport type * as DTO from '../../socket/chat.dto';\n\nexport const needToLogout = atom<boolean>(false);\nexport const roomListAtom = atom<DTO.roomListDto>({});\nexport const userListAtom = atom<DTO.userDto>({});\n\nexport const dmHistoryListAtom = atom<DTO.userDto>({});\nexport const followingListAtom = atom<DTO.userDto>({});\nexport const blockListAtom = atom<DTO.userSimpleDto>({});\n\nexport const hasLoginAtom = atom<boolean>(false);\nexport const isFirstLoginAtom = atom<boolean>(true);\nexport const focusRoomAtom = atom<number>(-1);\nexport const clickRoomAtom = atom<number>(-1);\nexport const socketStateAtom = atom<boolean>(false);\n\nexport const roomSettingAtom = atom<boolean>(false);\nexport const roomSettingIsPrivateAtom = atom<boolean>(false);\nexport const roomSettingCurrentRoomNameAtom = atom<string>('');\nexport const adminConsoleAtom = atom<boolean>(false);\n\nexport const leaderBoardAtom = atom<DTO.leaderboardDto[]>([]);\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,OAAO;AAG5B,OAAO,MAAMC,YAAY,GAAGD,IAAI,CAAU,KAAK,CAAC;AAChD,OAAO,MAAME,YAAY,GAAGF,IAAI,CAAkB,CAAC,CAAC,CAAC;AACrD,OAAO,MAAMG,YAAY,GAAGH,IAAI,CAAc,CAAC,CAAC,CAAC;AAEjD,OAAO,MAAMI,iBAAiB,GAAGJ,IAAI,CAAc,CAAC,CAAC,CAAC;AACtD,OAAO,MAAMK,iBAAiB,GAAGL,IAAI,CAAc,CAAC,CAAC,CAAC;AACtD,OAAO,MAAMM,aAAa,GAAGN,IAAI,CAAoB,CAAC,CAAC,CAAC;AAExD,OAAO,MAAMO,YAAY,GAAGP,IAAI,CAAU,KAAK,CAAC;AAChD,OAAO,MAAMQ,gBAAgB,GAAGR,IAAI,CAAU,IAAI,CAAC;AACnD,OAAO,MAAMS,aAAa,GAAGT,IAAI,CAAS,CAAC,CAAC,CAAC;AAC7C,OAAO,MAAMU,aAAa,GAAGV,IAAI,CAAS,CAAC,CAAC,CAAC;AAC7C,OAAO,MAAMW,eAAe,GAAGX,IAAI,CAAU,KAAK,CAAC;AAEnD,OAAO,MAAMY,eAAe,GAAGZ,IAAI,CAAU,KAAK,CAAC;AACnD,OAAO,MAAMa,wBAAwB,GAAGb,IAAI,CAAU,KAAK,CAAC;AAC5D,OAAO,MAAMc,8BAA8B,GAAGd,IAAI,CAAS,EAAE,CAAC;AAC9D,OAAO,MAAMe,gBAAgB,GAAGf,IAAI,CAAU,KAAK,CAAC;AAEpD,OAAO,MAAMgB,eAAe,GAAGhB,IAAI,CAAuB,EAAE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}