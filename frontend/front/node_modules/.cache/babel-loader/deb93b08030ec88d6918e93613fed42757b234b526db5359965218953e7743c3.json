{"ast":null,"code":"var _jsxFileName = \"/data/front/src/pages/GamePage.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport BackGround from \"../components/BackGround\";\nimport \"../components/GamePage/PingPong\";\nimport PingPong from \"../components/GamePage/PingPong\";\nimport TopBar from \"../components/TopBar\";\nimport { useAtom, useAtomValue, useSetAtom } from \"jotai\";\nimport { isGameStartedAtom, isLoadingAtom, isMatchedAtom, isPrivateAtom, isGameQuitAtom, gameInviteInfoAtom, gameSocketAtom, gameModeAtom, isP1Atom, gameWinnerAtom, p1IdAtom, p2IdAtom } from \"../components/atom/GameAtom\";\nimport * as chatAtom from \"../components/atom/ChatAtom\";\nimport { gameResultModalAtom } from \"../components/atom/ModalAtom\";\nimport GameResultModal from \"../components/GamePage/GameResultModal\";\nimport LadderBoard from \"../components/GamePage/LadderBoard\";\nimport Waiting from \"../components/GamePage/Waiting\";\nimport { AdminLogPrinter, PressKey } from \"../event/event.util\";\nimport { UserAtom } from \"../components/atom/UserAtom\";\nimport { GameType } from \"../socket/game.dto\";\nimport { player1, player2 } from \"../components/GamePage/GameInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GamePage() {\n  _s();\n  const [showComponent, setShowComponent] = useState(true);\n  const [gameResultModal, setGameResultModal] = useAtom(gameResultModalAtom);\n  const [isLoading, setIsLoading] = useAtom(isLoadingAtom);\n  const [isMatched, setIsMatched] = useAtom(isMatchedAtom);\n  const [isPrivate, setIsPrivate] = useAtom(isPrivateAtom);\n  const [isGameStart, setIsGameStart] = useAtom(isGameStartedAtom);\n  const setIsGameQuit = useSetAtom(isGameQuitAtom);\n  const [gameInviteInfo, setGameInviteInfo] = useAtom(gameInviteInfoAtom);\n  const [gameMode, setGameMode] = useAtom(gameModeAtom);\n  const [adminConsole, setAdminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const [userInfo, setUserInfo] = useAtom(UserAtom);\n  const [gameSocket, setGameSocket] = useAtom(gameSocketAtom);\n  const [isP1, setIsP1] = useAtom(isP1Atom);\n  const [p1Id, setP1Id] = useAtom(p1IdAtom);\n  const [p2Id, setP2Id] = useAtom(p2IdAtom);\n  const userList = useAtomValue(chatAtom.userListAtom);\n  const gameWinner = useAtomValue(gameWinnerAtom);\n  class socketAuth {\n    constructor(inviteInfo) {\n      this.token = void 0;\n      this.type = void 0;\n      this.invite = void 0;\n      this.observ = void 0;\n      this.token = localStorage.getItem(\"refreshToken\");\n      this.type = isPrivate ? GameType.PRIVATE : GameType.PUBLIC;\n      if (inviteInfo.gameType === 'invite') {\n        this.invite = inviteInfo.userId;\n      } else if (inviteInfo.gameType === 'observe') {\n        this.observ = inviteInfo.userId;\n      }\n    }\n  }\n  PressKey([\"F4\"], () => {\n    setAdminConsole(prev => !prev);\n  });\n  const clearState = () => {\n    // setIsGameStart(false);\n    setIsLoading(false);\n    setIsMatched(false);\n    setIsGameQuit(true);\n    setGameMode('normal');\n  };\n  useEffect(() => {\n    AdminLogPrinter(adminConsole, `gameSocket connection`);\n    const auth = new socketAuth(gameInviteInfo);\n    gameSocket.auth = auth;\n    const socket = gameSocket;\n    socket.connect();\n    setGameSocket(socket);\n    setGameInviteInfo({\n      gameType: 'queue',\n      userId: -1\n    });\n    setIsGameQuit(false);\n    if (!isGameStart) {\n      setIsLoading(true);\n    }\n    if (isPrivate) {\n      // player1.uid = userInfo.uid;\n      // player2.uid = userInfo.uid;\n      setP1Id(userInfo.uid);\n    }\n    return () => {\n      gameSocket.disconnect();\n      clearState();\n    };\n  }, []);\n  const connectionEventHandler = () => {\n    if (gameSocket.connected) {\n      //This attribute describes whether the socket is currently connected to the server.\n      if (gameSocket.recovered) {\n        // any missed packets will be received\n      } else {\n        // new or unrecoverable session\n        AdminLogPrinter(adminConsole, \"gameSocket connected\");\n      }\n    }\n  };\n\n  //https://socket.io/docs/v4/client-socket-instance/#disconnect\n  const disconnectionEventHandler = reason => {\n    if (reason === \"io server disconnect\") {}\n    console.log(`gameSocket end`, reason);\n    clearState();\n    AdminLogPrinter(adminConsole, \"gameSocket disconnected\");\n  };\n  const gameStartEventHandler = () => {\n    AdminLogPrinter(adminConsole, \"game start\");\n    setIsLoading(false);\n    setIsMatched(false);\n    setIsGameStart(true);\n  };\n  const matchEventHandler = _ref => {\n    let {\n      p1,\n      p2\n    } = _ref;\n    AdminLogPrinter(adminConsole, \"matched\");\n    if (p1 === userInfo.uid) {\n      setIsP1(true);\n      setP1Id(p1);\n      setP2Id(p2);\n      player1.uid = p1;\n      player2.uid = p2;\n    } else {\n      setIsP1(false);\n      setP1Id(p2);\n      setP2Id(p1);\n      player1.uid = p2;\n      player2.uid = p1;\n    }\n    setIsMatched(true);\n  };\n  const observerHandler = () => {\n    AdminLogPrinter(adminConsole, \"observer\");\n    setIsLoading(false);\n    setIsGameStart(true);\n  };\n\n  // useEffect(() => {\n  //   AdminLogPrinter(\n  //     adminConsole,\n  //     `useeffect: isLoading: ${isLoading}, isPrivate: ${isPrivate}, isMatched: ${isMatched}, isGameStart: ${isGameStart}`\n  //   );\n  // }, [isLoading, isPrivate, isGameStart, isMatched, gameSocket]);\n\n  useEffect(() => {\n    gameSocket.on(\"connect\", connectionEventHandler);\n    gameSocket.on(\"gameStart\", gameStartEventHandler);\n    return () => {\n      gameSocket.off(\"connect\", connectionEventHandler);\n      gameSocket.off(\"gameStart\", gameStartEventHandler);\n    };\n  }, [isGameStart, gameSocket]);\n  useEffect(() => {\n    gameSocket.on(\"disconnect\", disconnectionEventHandler);\n    return () => {\n      gameSocket.off(\"disconnect\", disconnectionEventHandler);\n    };\n  }, [isPrivate, isGameStart, gameSocket]);\n  useEffect(() => {\n    gameSocket.on(\"matched\", matchEventHandler);\n    return () => {\n      gameSocket.off(\"matched\", matchEventHandler);\n    };\n  }, [isMatched, gameSocket]);\n  return /*#__PURE__*/_jsxDEV(BackGround, {\n    children: [adminConsole ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const loading = !isLoading;\n          setIsLoading(loading);\n        },\n        children: \"LadderRanking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const gameOverModal = !gameResultModal;\n          setGameResultModal(gameOverModal);\n        },\n        children: \"GameOver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          console.log(`isPrivate: ${isPrivate}`);\n        },\n        children: \"isPrivate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), isLoading ? isPrivate ? /*#__PURE__*/_jsxDEV(Waiting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 16\n    }, this) : isMatched ? /*#__PURE__*/_jsxDEV(Waiting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(LadderBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 18\n    }, this) : isGameStart ? /*#__PURE__*/_jsxDEV(PingPong, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 16\n    }, this) : '', gameResultModal ? /*#__PURE__*/_jsxDEV(GameResultModal, {\n      leftScore: player1.score,\n      rightScore: player2.score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 26\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n}\n_s(GamePage, \"zikThnFdSdmi8vluRVFEgMR2Lvo=\", false, function () {\n  return [useAtom, useAtom, useAtom, useAtom, useAtom, useSetAtom, useAtom, useAtom, useAtom, useAtom, useAtom, useAtom, useAtom, useAtom, useAtomValue, useAtomValue];\n});\n_c = GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["useEffect","useState","BackGround","PingPong","TopBar","useAtom","useAtomValue","useSetAtom","isGameStartedAtom","isLoadingAtom","isMatchedAtom","isPrivateAtom","isGameQuitAtom","gameInviteInfoAtom","gameSocketAtom","gameModeAtom","isP1Atom","gameWinnerAtom","p1IdAtom","p2IdAtom","chatAtom","gameResultModalAtom","GameResultModal","LadderBoard","Waiting","AdminLogPrinter","PressKey","UserAtom","GameType","player1","player2","jsxDEV","_jsxDEV","GamePage","_s","showComponent","setShowComponent","gameResultModal","setGameResultModal","isLoading","setIsLoading","isMatched","setIsMatched","isPrivate","setIsPrivate","isGameStart","setIsGameStart","setIsGameQuit","gameInviteInfo","setGameInviteInfo","gameMode","setGameMode","adminConsole","setAdminConsole","adminConsoleAtom","userInfo","setUserInfo","gameSocket","setGameSocket","isP1","setIsP1","p1Id","setP1Id","p2Id","setP2Id","userList","userListAtom","gameWinner","socketAuth","constructor","inviteInfo","token","type","invite","observ","localStorage","getItem","PRIVATE","PUBLIC","gameType","userId","prev","clearState","auth","socket","connect","uid","disconnect","connectionEventHandler","connected","recovered","disconnectionEventHandler","reason","console","log","gameStartEventHandler","matchEventHandler","_ref","p1","p2","observerHandler","on","off","children","onClick","loading","fileName","_jsxFileName","lineNumber","columnNumber","gameOverModal","leftScore","score","rightScore","_c","$RefreshReg$"],"sources":["/data/front/src/pages/GamePage.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport BackGround from \"../components/BackGround\";\nimport \"../components/GamePage/PingPong\";\nimport PingPong from \"../components/GamePage/PingPong\";\nimport TopBar from \"../components/TopBar\";\n\nimport { useAtom, useAtomValue, useSetAtom } from \"jotai\";\nimport {\n  isGameStartedAtom,\n  isLoadingAtom,\n  isMatchedAtom,\n  isPrivateAtom,\n  isGameQuitAtom,\n  gameInviteInfoAtom,\n  gameSocketAtom,\n  gameModeAtom,\n  isP1Atom,\n  gameWinnerAtom,\n  p1IdAtom,\n  p2IdAtom,\n} from \"../components/atom/GameAtom\";\n\nimport * as chatSocket from \"../socket/chat.socket\";\nimport * as chatAtom from \"../components/atom/ChatAtom\";\nimport { gameResultModalAtom } from \"../components/atom/ModalAtom\";\nimport GameResultModal from \"../components/GamePage/GameResultModal\";\nimport LadderBoard from \"../components/GamePage/LadderBoard\";\n\nimport Waiting from \"../components/GamePage/Waiting\";\nimport { AdminLogPrinter, PressKey } from \"../event/event.util\";\nimport { io, Socket } from 'socket.io-client';\nimport { UserAtom } from \"../components/atom/UserAtom\";\nimport { GameType } from \"../socket/game.dto\";\nimport { player1, player2 } from \"../components/GamePage/GameInfo\";\n\nexport default function GamePage() {\n  const [showComponent, setShowComponent] = useState(true);\n  const [gameResultModal, setGameResultModal] = useAtom(gameResultModalAtom);\n\n  const [isLoading, setIsLoading] = useAtom(isLoadingAtom);\n  const [isMatched, setIsMatched] = useAtom(isMatchedAtom);\n  const [isPrivate, setIsPrivate] = useAtom(isPrivateAtom);\n  const [isGameStart, setIsGameStart] = useAtom(isGameStartedAtom);\n  const setIsGameQuit = useSetAtom(isGameQuitAtom);\n  const [gameInviteInfo, setGameInviteInfo] = useAtom(gameInviteInfoAtom);\n  const [gameMode, setGameMode] = useAtom(gameModeAtom);\n\n  const [adminConsole, setAdminConsole] = useAtom(chatAtom.adminConsoleAtom);\n\n  const [userInfo, setUserInfo] = useAtom(UserAtom);\n\n  const [gameSocket, setGameSocket] = useAtom(gameSocketAtom);\n  const [isP1, setIsP1] = useAtom(isP1Atom);\n\n  const [p1Id, setP1Id] = useAtom(p1IdAtom);\n  const [p2Id, setP2Id] = useAtom(p2IdAtom);\n\n  const userList = useAtomValue(chatAtom.userListAtom);\n  const gameWinner = useAtomValue(gameWinnerAtom);\n\n  class socketAuth {\n    token: string | null;\n    type: GameType;\n    invite?: number;\n    observ?: number;\n    constructor(inviteInfo: { gameType: string, userId: number }) {\n      this.token = localStorage.getItem(\"refreshToken\");\n      this.type = isPrivate ? GameType.PRIVATE : GameType.PUBLIC;\n      if (inviteInfo.gameType === 'invite') {\n        this.invite = inviteInfo.userId;\n      } else if (inviteInfo.gameType === 'observe') {\n        this.observ = inviteInfo.userId;\n      }\n    }\n  }\n\n  PressKey([\"F4\"], () => {\n    setAdminConsole((prev) => !prev);\n  });\n\n  const clearState = () => {\n    // setIsGameStart(false);\n    setIsLoading(false);\n    setIsMatched(false);\n    setIsGameQuit(true);\n    setGameMode('normal');\n  };\n\n  useEffect(() => {\n    AdminLogPrinter(adminConsole, `gameSocket connection`);\n    const auth = new socketAuth(gameInviteInfo);\n    gameSocket.auth = auth;\n    const socket = gameSocket;\n    socket.connect();\n    setGameSocket(socket);\n    setGameInviteInfo({ gameType: 'queue', userId: -1 });\n    setIsGameQuit(false);\n    if (!isGameStart) {\n      setIsLoading(true);\n    }\n    if (isPrivate) {\n      // player1.uid = userInfo.uid;\n      // player2.uid = userInfo.uid;\n      setP1Id(userInfo.uid);\n    }\n    return () => {\n      gameSocket.disconnect();\n      clearState();\n    };\n  }, []);\n\n  const connectionEventHandler = () => {\n    if (gameSocket.connected) {\n      //This attribute describes whether the socket is currently connected to the server.\n      if (gameSocket.recovered) {\n        // any missed packets will be received\n      } else {\n        // new or unrecoverable session\n        AdminLogPrinter(adminConsole, \"gameSocket connected\");\n      }\n    }\n  };\n\n  //https://socket.io/docs/v4/client-socket-instance/#disconnect\n  const disconnectionEventHandler = (reason: string) => {\n    if (reason === \"io server disconnect\") {\n    }\n    console.log(`gameSocket end`, reason);\n    clearState();\n    AdminLogPrinter(adminConsole, \"gameSocket disconnected\");\n  };\n\n  const gameStartEventHandler = () => {\n    AdminLogPrinter(adminConsole, \"game start\");\n    setIsLoading(false);\n    setIsMatched(false);\n    setIsGameStart(true);\n  };\n\n  const matchEventHandler = ({ p1, p2 }: { p1: number, p2: number }) => {\n    AdminLogPrinter(adminConsole, \"matched\");\n    if (p1 === userInfo.uid) {\n      setIsP1(true);\n      setP1Id(p1);\n      setP2Id(p2);\n      player1.uid = p1;\n      player2.uid = p2;\n    } else {\n      setIsP1(false);\n      setP1Id(p2);\n      setP2Id(p1);\n      player1.uid = p2;\n      player2.uid = p1;\n    }\n    setIsMatched(true);\n  };\n\n  const observerHandler = () => {\n    AdminLogPrinter(adminConsole, \"observer\");\n    setIsLoading(false);\n    setIsGameStart(true);\n  };\n\n  // useEffect(() => {\n  //   AdminLogPrinter(\n  //     adminConsole,\n  //     `useeffect: isLoading: ${isLoading}, isPrivate: ${isPrivate}, isMatched: ${isMatched}, isGameStart: ${isGameStart}`\n  //   );\n  // }, [isLoading, isPrivate, isGameStart, isMatched, gameSocket]);\n\n  useEffect(() => {\n    gameSocket.on(\"connect\", connectionEventHandler);\n    gameSocket.on(\"gameStart\", gameStartEventHandler);\n    return () => {\n      gameSocket.off(\"connect\", connectionEventHandler);\n      gameSocket.off(\"gameStart\", gameStartEventHandler);\n    };\n  }, [isGameStart, gameSocket]);\n\n  useEffect(() => {\n    gameSocket.on(\"disconnect\", disconnectionEventHandler);\n    return () => {\n      gameSocket.off(\"disconnect\", disconnectionEventHandler);\n    };\n  }, [isPrivate, isGameStart, gameSocket]);\n\n  useEffect(() => {\n    gameSocket.on(\"matched\", matchEventHandler);\n    return () => {\n      gameSocket.off(\"matched\", matchEventHandler);\n    }\n  }, [isMatched, gameSocket]);\n\n  return (\n    <BackGround>\n      {adminConsole ? (\n        <div>\n          <button\n            onClick={() => {\n              const loading = !isLoading;\n              setIsLoading(loading);\n            }}\n          >\n            LadderRanking\n          </button>\n          <button\n            onClick={() => {\n              const gameOverModal = !gameResultModal;\n              setGameResultModal(gameOverModal);\n            }}\n          >\n            GameOver\n          </button>\n          <button\n            onClick={() => {\n              console.log(`isPrivate: ${isPrivate}`);\n            }}\n          >\n            isPrivate\n          </button>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <TopBar />\n      {\n        isLoading\n          ? (isPrivate\n            ? (<Waiting />)\n            : (isMatched\n              ? (<Waiting />)\n              : (<LadderBoard />)\n            )\n          )\n          : isGameStart\n            ? (<PingPong />)\n            : ''\n      }\n      {gameResultModal ? <GameResultModal leftScore={player1.score} rightScore={player2.score} /> : null}\n    </BackGround>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}