{"ast":null,"code":"var _jsxFileName = \"/data/front/src/pages/GamePage.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport BackGround from \"../components/BackGround\";\nimport \"../components/GamePage/PingPong\";\nimport PingPong from \"../components/GamePage/PingPong\";\nimport TopBar from \"../components/TopBar\";\nimport { useAtom } from \"jotai\";\nimport { isGameStartedAtom, isLoadingAtom, isMatchedAtom, isPrivateAtom } from \"../components/atom/GameAtom\";\nimport * as chatAtom from \"../components/atom/ChatAtom\";\nimport { gameResultModalAtom } from \"../components/atom/ModalAtom\";\nimport GameResultModal from \"../components/GamePage/GameResultModal\";\nimport LadderBoard from \"../components/GamePage/LadderBoard\";\nimport Waiting from \"../components/GamePage/Waiting\";\nimport { AdminLogPrinter, PressKey } from \"../event/event.util\";\nimport { io } from 'socket.io-client';\nimport { UserAtom } from \"../components/atom/UserAtom\";\nimport { GameType } from \"../socket/game.dto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GamePage() {\n  _s();\n  const [showComponent, setShowComponent] = useState(true);\n  const [gameResultModal, setGameResultModal] = useAtom(gameResultModalAtom);\n  const [isLoading, setIsLoading] = useAtom(isLoadingAtom);\n  const [isMatched, setIsMatched] = useAtom(isMatchedAtom);\n  const [isPrivate, setIsPrivate] = useAtom(isPrivateAtom);\n  const [isGameStart, setIsGameStart] = useAtom(isGameStartedAtom);\n  const [adminConsole, setAdminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const [userInfo, setUserInfo] = useAtom(UserAtom);\n  const [socket, setSocket] = useState(io());\n  let isP1;\n  class socketAuth {\n    constructor() {\n      this.token = void 0;\n      this.type = void 0;\n      this.observ = void 0;\n      this.invite = void 0;\n      this.token = localStorage.getItem(\"refreshToken\");\n      this.type = GameType.PUBLIC;\n    }\n  }\n  const auth = new socketAuth();\n\n  // const URL = process.env.REACT_APP_API_URL;\n  const URL = \"https://localhost\";\n  const NameSpace = \"/game\";\n  const gameSocket = io(`${URL}${NameSpace}`, {\n    auth: auth,\n    autoConnect: false,\n    transports: [\"polling\", \"websocket\"],\n    secure: true,\n    upgrade: true\n  });\n  PressKey([\"F4\"], () => {\n    setAdminConsole(prev => !prev);\n  });\n  useEffect(() => {\n    AdminLogPrinter(adminConsole, `gameSocket connection`);\n    gameSocket.connect();\n    setSocket(gameSocket);\n    setIsLoading(true);\n    return () => {\n      gameSocket.disconnect();\n    };\n  }, []);\n  const connectionEventHandler = () => {\n    if (gameSocket.connected) {\n      //This attribute describes whether the socket is currently connected to the server.\n      if (gameSocket.recovered) {\n        // any missed packets will be received\n      } else {\n        // new or unrecoverable session\n        AdminLogPrinter(adminConsole, \"gameSocket connected\");\n      }\n    }\n  };\n\n  //https://socket.io/docs/v4/client-socket-instance/#disconnect\n  const disconnectionEventHandler = reason => {\n    if (reason === \"io server disconnect\") {}\n    setIsPrivate(false);\n    setIsGameStart(false);\n    setGameResultModal(false);\n    AdminLogPrinter(adminConsole, \"gameSocket disconnected\");\n  };\n  const gameStartEventHandler = () => {\n    AdminLogPrinter(adminConsole, \"game start\");\n    setIsLoading(false);\n    setIsMatched(false);\n    setIsGameStart(true);\n  };\n  const matchEventHandler = playerInfo => {\n    AdminLogPrinter(adminConsole, \"matched\");\n    if (playerInfo.p1 === userInfo.uid) {\n      isP1 = true;\n    } else {\n      isP1 = false;\n    }\n    setIsMatched(true);\n  };\n  const observerHandler = () => {\n    AdminLogPrinter(adminConsole, \"observer\");\n    setIsLoading(false);\n    setIsGameStart(true);\n  };\n  useEffect(() => {\n    AdminLogPrinter(adminConsole, `useeffect: isLoading: ${isLoading}, isPrivate: ${isPrivate}, isMatched: ${isMatched}, isGameStart: ${isGameStart}`);\n  }, [isLoading, isPrivate, isGameStart, isMatched]);\n  useEffect(() => {\n    gameSocket.on(\"connect\", connectionEventHandler);\n    gameSocket.on(\"gameStart\", gameStartEventHandler);\n    return () => {\n      gameSocket.off(\"connect\", connectionEventHandler);\n      gameSocket.off(\"gameStart\", gameStartEventHandler);\n    };\n  }, [isGameStart]);\n  useEffect(() => {\n    gameSocket.on(\"disconnect\", disconnectionEventHandler);\n    return () => {\n      gameSocket.off(\"disconnect\", disconnectionEventHandler);\n    };\n  }, [isPrivate, isGameStart]);\n  useEffect(() => {\n    gameSocket.on(\"matched\", matchEventHandler);\n    return () => {\n      gameSocket.off(\"matched\", matchEventHandler);\n    };\n  }, [isMatched]);\n\n  // useEffect(() => {\n  //   return () => {\n  //   }      \n  // }, [isLoading, isMatched, isGameStart]);\n\n  return /*#__PURE__*/_jsxDEV(BackGround, {\n    children: [adminConsole ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const loading = !isLoading;\n          setIsLoading(loading);\n        },\n        children: \"LadderRanking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const gameOverModal = !gameResultModal;\n          setGameResultModal(gameOverModal);\n        },\n        children: \"GameOver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), isLoading ? isPrivate ? /*#__PURE__*/_jsxDEV(Waiting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }, this) : isMatched ? /*#__PURE__*/_jsxDEV(Waiting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(LadderBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this) : isGameStart ? /*#__PURE__*/_jsxDEV(PingPong, {\n      gameSocket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Waiting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this), gameResultModal ? /*#__PURE__*/_jsxDEV(GameResultModal, {\n      result: true,\n      leftScore: 5,\n      rightScore: 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 26\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n_s(GamePage, \"1JHADdqyAmG+Eg6ZYAE88cdryNI=\", false, function () {\n  return [useAtom, useAtom, useAtom, useAtom, useAtom, useAtom, useAtom];\n});\n_c = GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["useEffect","useState","BackGround","PingPong","TopBar","useAtom","isGameStartedAtom","isLoadingAtom","isMatchedAtom","isPrivateAtom","chatAtom","gameResultModalAtom","GameResultModal","LadderBoard","Waiting","AdminLogPrinter","PressKey","io","UserAtom","GameType","jsxDEV","_jsxDEV","GamePage","_s","showComponent","setShowComponent","gameResultModal","setGameResultModal","isLoading","setIsLoading","isMatched","setIsMatched","isPrivate","setIsPrivate","isGameStart","setIsGameStart","adminConsole","setAdminConsole","adminConsoleAtom","userInfo","setUserInfo","socket","setSocket","isP1","socketAuth","constructor","token","type","observ","invite","localStorage","getItem","PUBLIC","auth","URL","NameSpace","gameSocket","autoConnect","transports","secure","upgrade","prev","connect","disconnect","connectionEventHandler","connected","recovered","disconnectionEventHandler","reason","gameStartEventHandler","matchEventHandler","playerInfo","p1","uid","observerHandler","on","off","children","onClick","loading","fileName","_jsxFileName","lineNumber","columnNumber","gameOverModal","result","leftScore","rightScore","_c","$RefreshReg$"],"sources":["/data/front/src/pages/GamePage.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport BackGround from \"../components/BackGround\";\nimport \"../components/GamePage/PingPong\";\nimport PingPong from \"../components/GamePage/PingPong\";\nimport TopBar from \"../components/TopBar\";\n\nimport { useAtom } from \"jotai\";\nimport {\n  isGameStartedAtom,\n  isLoadingAtom,\n  isMatchedAtom,\n  isPrivateAtom,\n} from \"../components/atom/GameAtom\";\n\nimport * as chatAtom from \"../components/atom/ChatAtom\";\nimport { gameResultModalAtom } from \"../components/atom/ModalAtom\";\nimport GameResultModal from \"../components/GamePage/GameResultModal\";\nimport LadderBoard from \"../components/GamePage/LadderBoard\";\n\nimport Waiting from \"../components/GamePage/Waiting\";\nimport { AdminLogPrinter, PressKey } from \"../event/event.util\";\nimport { io, Socket } from 'socket.io-client';\nimport { UserAtom } from \"../components/atom/UserAtom\";\nimport { GameType } from \"../socket/game.dto\";\n\nexport default function GamePage() {\n  const [showComponent, setShowComponent] = useState(true);\n  const [gameResultModal, setGameResultModal] = useAtom(gameResultModalAtom);\n\n  const [isLoading, setIsLoading] = useAtom(isLoadingAtom);\n  const [isMatched, setIsMatched] = useAtom(isMatchedAtom);\n  const [isPrivate, setIsPrivate] = useAtom(isPrivateAtom);\n  const [isGameStart, setIsGameStart] = useAtom(isGameStartedAtom);\n\n  const [adminConsole, setAdminConsole] = useAtom(chatAtom.adminConsoleAtom);\n\n  const [userInfo, setUserInfo] = useAtom(UserAtom);\n\n  const [socket, setSocket] = useState(io());\n  \n  let isP1: boolean;\n  \n  class socketAuth {\n    token: string | null;\n    type: GameType;\n    observ?: number;\n    invite?: number;\n    constructor() {\n      this.token = localStorage.getItem(\"refreshToken\");\n      this.type = GameType.PUBLIC;\n    }\n  }\n  \n  const auth: socketAuth = new socketAuth();\n\n  // const URL = process.env.REACT_APP_API_URL;\n  const URL = \"https://localhost\";\n  const NameSpace = \"/game\";\n\n  const gameSocket: Socket = io(`${URL}${NameSpace}`, {\n    auth: auth,\n    autoConnect: false,\n    transports: [\"polling\", \"websocket\"],\n    secure: true,\n    upgrade: true,\n  });\n\n  \n  PressKey([\"F4\"], () => {\n    setAdminConsole((prev) => !prev);\n  });\n  \n  useEffect(() => {\n    AdminLogPrinter(adminConsole, `gameSocket connection`);\n    gameSocket.connect();\n    setSocket(gameSocket);\n    setIsLoading(true);\n    return () => {\n      gameSocket!.disconnect();\n    };\n  }, []);\n\n  const connectionEventHandler = () => {\n    if (gameSocket!.connected) {\n      //This attribute describes whether the socket is currently connected to the server.\n      if (gameSocket!.recovered) {\n        // any missed packets will be received\n      } else {\n        // new or unrecoverable session\n        AdminLogPrinter(adminConsole, \"gameSocket connected\");\n      }\n    }\n  };\n\n  //https://socket.io/docs/v4/client-socket-instance/#disconnect\n  const disconnectionEventHandler = (reason: string) => {\n    if (reason === \"io server disconnect\") {\n    }\n    setIsPrivate(false);\n    setIsGameStart(false);\n    setGameResultModal(false);\n    AdminLogPrinter(adminConsole, \"gameSocket disconnected\");\n  };\n\n  const gameStartEventHandler = () => {\n    AdminLogPrinter(adminConsole, \"game start\");\n    setIsLoading(false);\n    setIsMatched(false);\n    setIsGameStart(true);\n  };\n\n  const matchEventHandler = (playerInfo: { p1: number, p2: number }) => {\n    AdminLogPrinter(adminConsole, \"matched\");\n    if (playerInfo.p1 === userInfo.uid) {\n      isP1 = true;\n    } else {\n      isP1 = false;\n    }\n    setIsMatched(true);\n  };\n\n  const observerHandler = () => {\n    AdminLogPrinter(adminConsole, \"observer\");\n    setIsLoading(false);\n    setIsGameStart(true);\n  };\n\n  useEffect(() => {\n    AdminLogPrinter(\n      adminConsole,\n      `useeffect: isLoading: ${isLoading}, isPrivate: ${isPrivate}, isMatched: ${isMatched}, isGameStart: ${isGameStart}`\n    );\n  }, [isLoading, isPrivate, isGameStart, isMatched]);\n\n  useEffect(() => {\n    gameSocket.on(\"connect\", connectionEventHandler);\n    gameSocket.on(\"gameStart\", gameStartEventHandler);\n    return () => {\n      gameSocket.off(\"connect\", connectionEventHandler);\n      gameSocket.off(\"gameStart\", gameStartEventHandler);\n    };\n  }, [isGameStart]);\n\n  useEffect(() => {\n    gameSocket.on(\"disconnect\", disconnectionEventHandler);\n    return () => {\n      gameSocket.off(\"disconnect\", disconnectionEventHandler);\n    };\n  }, [isPrivate, isGameStart]);\n  \n  useEffect(() => {\n    gameSocket.on(\"matched\", matchEventHandler);\n    return () => {\n      gameSocket.off(\"matched\", matchEventHandler);\n    }\n  }, [isMatched]);\n\n  // useEffect(() => {\n  //   return () => {\n  //   }      \n  // }, [isLoading, isMatched, isGameStart]);\n\n  return (\n    <BackGround>\n      {adminConsole ? (\n        <div>\n          <button\n            onClick={() => {\n              const loading = !isLoading;\n              setIsLoading(loading);\n            }}\n          >\n            LadderRanking\n          </button>\n          <button\n            onClick={() => {\n              const gameOverModal = !gameResultModal;\n              setGameResultModal(gameOverModal);\n            }}\n          >\n            GameOver\n          </button>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <TopBar />\n      {isLoading ? (\n        isPrivate ? (\n          <Waiting />\n        ) : (\n          isMatched ? (\n            <Waiting />\n          ) : (\n            <LadderBoard />\n          )\n        )\n      ) : isGameStart ? (\n        <PingPong gameSocket={socket} />\n        \n      ) : (\n        <Waiting />\n      )}\n      {gameResultModal ? <GameResultModal result={true} leftScore={5} rightScore={4} /> : null}\n    </BackGround>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}