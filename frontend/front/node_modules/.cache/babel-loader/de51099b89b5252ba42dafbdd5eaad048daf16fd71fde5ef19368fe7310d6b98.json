{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/GamePage/Waiting.tsx\",\n  _s = $RefreshSig$();\nimport { useAtomValue, useSetAtom } from 'jotai';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as chatAtom from \"../../components/atom/ChatAtom\";\nimport { refreshTokenAtom } from \"../../components/atom/LoginAtom\";\nimport * as api from \"../../event/api.request\";\nimport { AdminLogPrinter } from '../../event/event.util';\nimport \"../../styles/BackGround.css\";\nimport \"../../styles/GamePlayerInfo.css\";\nimport { userListAtom } from '../atom/ChatAtom';\nimport { GamePlayer, gamePlayerAtom, p1IdAtom, p2IdAtom } from '../atom/GameAtom';\nimport CheckBox from \"./CheckBox\";\nimport PlayerRecordBoard from \"./PlayerRecordBoard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Waiting() {\n  _s();\n  var _userList$p1Id$userDi, _userList$p1Id, _userList$p2Id$userDi, _userList$p2Id;\n  const [player1Info, setPlayer1Info] = useState([]);\n  const [player2Info, setPlayer2Info] = useState([]);\n  const setRefreshToken = useSetAtom(refreshTokenAtom);\n  const gamePlayer = useAtomValue(gamePlayerAtom);\n  const p1Id = useAtomValue(p1IdAtom);\n  const p2Id = useAtomValue(p2IdAtom);\n  const userList = useAtomValue(userListAtom);\n  const adminConsole = useAtomValue(chatAtom.adminConsoleAtom);\n  const navigate = useNavigate();\n  const logOutHandler = () => {\n    api.LogOut(adminConsole, setRefreshToken, navigate, \"/\");\n  };\n  async function getGameRecordHandler(setter, userId) {\n    const getProfileResponse = await api.GetOtherGameRecord(adminConsole, setter, userId);\n    if (getProfileResponse === 401) {\n      const refreshResponse = await api.RefreshToken(adminConsole);\n      if (refreshResponse !== 201) {\n        logOutHandler();\n      } else {\n        const getProfileResponse = await api.GetOtherGameRecord(adminConsole, setter, userId);\n        if (getProfileResponse === 401) {\n          logOutHandler();\n        }\n      }\n    }\n  }\n  useEffect(() => {\n    getGameRecordHandler(setPlayer1Info, p1Id).catch(e => {\n      AdminLogPrinter(adminConsole, e);\n    });\n    getGameRecordHandler(setPlayer2Info, p2Id).catch(e => {\n      AdminLogPrinter(adminConsole, e);\n    });\n  }, [p1Id, p2Id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"QueueBackGround\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LeftWrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PlayerWrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PlayerNickName\",\n          children: (_userList$p1Id$userDi = (_userList$p1Id = userList[p1Id]) === null || _userList$p1Id === void 0 ? void 0 : _userList$p1Id.userDisplayName) !== null && _userList$p1Id$userDi !== void 0 ? _userList$p1Id$userDi : 'LeftName'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlayerRecordBoard, {\n          records: player1Info,\n          userId: p1Id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RightWrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PlayerWrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PlayerNickName\",\n          children: (_userList$p2Id$userDi = (_userList$p2Id = userList[p2Id]) === null || _userList$p2Id === void 0 ? void 0 : _userList$p2Id.userDisplayName) !== null && _userList$p2Id$userDi !== void 0 ? _userList$p2Id$userDi : 'Invitee Left...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlayerRecordBoard, {\n          records: player2Info,\n          userId: p2Id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), gamePlayer === GamePlayer.player1 ? /*#__PURE__*/_jsxDEV(CheckBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Waiting, \"4Trb7bC7sUo6iJ4dr0DiycS8hYU=\", false, function () {\n  return [useSetAtom, useAtomValue, useAtomValue, useAtomValue, useAtomValue, useAtomValue, useNavigate];\n});\n_c = Waiting;\nvar _c;\n$RefreshReg$(_c, \"Waiting\");","map":{"version":3,"names":["useAtomValue","useSetAtom","useEffect","useState","useNavigate","chatAtom","refreshTokenAtom","api","AdminLogPrinter","userListAtom","GamePlayer","gamePlayerAtom","p1IdAtom","p2IdAtom","CheckBox","PlayerRecordBoard","jsxDEV","_jsxDEV","Waiting","_s","_userList$p1Id$userDi","_userList$p1Id","_userList$p2Id$userDi","_userList$p2Id","player1Info","setPlayer1Info","player2Info","setPlayer2Info","setRefreshToken","gamePlayer","p1Id","p2Id","userList","adminConsole","adminConsoleAtom","navigate","logOutHandler","LogOut","getGameRecordHandler","setter","userId","getProfileResponse","GetOtherGameRecord","refreshResponse","RefreshToken","catch","e","className","children","userDisplayName","fileName","_jsxFileName","lineNumber","columnNumber","records","player1","_c","$RefreshReg$"],"sources":["/data/front/src/components/GamePage/Waiting.tsx"],"sourcesContent":["import { useAtomValue, useSetAtom } from 'jotai';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as chatAtom from \"../../components/atom/ChatAtom\";\nimport { refreshTokenAtom } from \"../../components/atom/LoginAtom\";\nimport * as api from \"../../event/api.request\";\nimport { AdminLogPrinter } from '../../event/event.util';\nimport \"../../styles/BackGround.css\";\nimport \"../../styles/GamePlayerInfo.css\";\nimport { userListAtom } from '../atom/ChatAtom';\nimport { GamePlayer, gamePlayerAtom, p1IdAtom, p2IdAtom } from '../atom/GameAtom';\nimport { GameRecordType } from '../atom/UserAtom';\nimport CheckBox from \"./CheckBox\";\nimport PlayerRecordBoard from \"./PlayerRecordBoard\";\n\nexport default function Waiting() {\n  const [player1Info, setPlayer1Info] = useState([] as GameRecordType[]);\n  const [player2Info, setPlayer2Info] = useState([] as GameRecordType[]);\n\n  const setRefreshToken = useSetAtom(refreshTokenAtom);\n\n  const gamePlayer = useAtomValue(gamePlayerAtom);\n  const p1Id = useAtomValue(p1IdAtom);\n  const p2Id = useAtomValue(p2IdAtom);\n\n  const userList = useAtomValue(userListAtom);\n  const adminConsole = useAtomValue(chatAtom.adminConsoleAtom);\n\n  const navigate = useNavigate();\n\n  const logOutHandler = () => {\n    api.LogOut(adminConsole, setRefreshToken, navigate, \"/\");\n  };\n\n  async function getGameRecordHandler(setter: React.Dispatch<React.SetStateAction<GameRecordType[]>>, userId: number) {\n    const getProfileResponse = await api.GetOtherGameRecord(adminConsole, setter, userId);\n    if (getProfileResponse === 401) {\n      const refreshResponse = await api.RefreshToken(adminConsole);\n      if (refreshResponse !== 201) {\n        logOutHandler();\n      } else {\n        const getProfileResponse = await api.GetOtherGameRecord(\n          adminConsole,\n          setter,\n          userId\n        );\n        if (getProfileResponse === 401) {\n          logOutHandler();\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    getGameRecordHandler(setPlayer1Info, p1Id)\n      .catch((e) => { AdminLogPrinter(adminConsole, e) });\n    getGameRecordHandler(setPlayer2Info, p2Id)\n      .catch((e) => { AdminLogPrinter(adminConsole, e) });\n  }, [p1Id, p2Id]);\n\n  return (\n    <div className=\"QueueBackGround\">\n      <div className=\"LeftWrap\">\n        <div className=\"PlayerWrap\">\n          <div className=\"PlayerNickName\">{userList[p1Id]?.userDisplayName ?? 'LeftName'}</div>\n          <PlayerRecordBoard records={player1Info} userId={p1Id} />\n        </div>\n      </div>\n      <div className=\"RightWrap\">\n        <div className=\"PlayerWrap\">\n          <div className=\"PlayerNickName\">{userList[p2Id]?.userDisplayName ?? 'Invitee Left...'}</div>\n          <PlayerRecordBoard records={player2Info} userId={p2Id} />\n        </div>\n      </div>\n      {\n        gamePlayer === GamePlayer.player1\n          ? <CheckBox />\n          : \"\"\n      }\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}