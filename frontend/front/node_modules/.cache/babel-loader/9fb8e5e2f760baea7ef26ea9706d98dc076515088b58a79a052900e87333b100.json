{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/ChatPage/RoomModal.tsx\",\n  _s = $RefreshSig$();\nimport { useAtom } from \"jotai\";\nimport { roomModalAtom } from \"../atom/ModalAtom\";\nimport { PressKey } from \"../../event/pressKey\";\nimport \"../../styles/RoomModal.css\";\nimport { useState } from 'react';\nimport * as chatAtom from '../atom/ChatAtom';\nimport * as socket from \"../../socket/chat.socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RoomModal() {\n  _s();\n  const [, setRoomModal] = useAtom(roomModalAtom);\n  const [roomName, setRoomName] = useState(\"\");\n  const [roomPass, setRoomPass] = useState(\"\");\n  const [roomCheck, setRoomCheck] = useState(false);\n  const [roomList, setRoomList] = useAtom(chatAtom.roomListAtom);\n  const [focusRoom, setFocusRoom] = useAtom(chatAtom.focusRoomAtom);\n  const [roomSetting, setRoomSetting] = useAtom(chatAtom.roomSettingAtom);\n  const [roomSettingIsPrivate, setRoomSettingIsPrivate] = useAtom(chatAtom.roomSettingIsPrivateAtom);\n  const [roomSettingCurrentRoomName, setRoomSettingCurrentRoomName] = useAtom(chatAtom.roomSettingCurrentRoomNameAtom);\n  PressKey([\"Escape\"], () => {\n    setRoomModal(false);\n  });\n  const acceptHandler = () => {\n    if (roomSetting) {\n      const trimRoomName = roomSettingCurrentRoomName.trim();\n      if (trimRoomName.length < 1) {\n        alert('방 이름을 입력해주세요.');\n      } else {\n        socket.emitRoomEdit(focusRoom, roomSettingCurrentRoomName, roomSettingIsPrivate, roomPass, roomList[focusRoom].roomType);\n        setRoomModal(false);\n      }\n    } else {\n      const trimRoomName = roomName.trim();\n      if (trimRoomName.length < 1) {\n        alert('방 이름을 입력해주세요.');\n      } else {\n        socket.emitRoomCreate(roomName, roomCheck, roomPass);\n        setRoomModal(false);\n      }\n    }\n    setRoomName(\"\");\n    setRoomPass(\"\");\n  };\n  const handleEnterEvent = e => {\n    if (e.key === 'Enter') {\n      acceptHandler();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RoomModalBG\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RoomModal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PrivacyChecker\",\n        children: [!roomSetting ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"PrivacyCheckbox\",\n          name: \"Privacy\",\n          value: \"false\",\n          onChange: e => setRoomCheck(e.target.checked),\n          checked: roomCheck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"PrivacyCheckbox\",\n          name: \"Privacy\",\n          value: \"false\",\n          onChange: e => setRoomSettingIsPrivate(e.target.checked),\n          checked: roomSettingIsPrivate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"PrivacyCheckbox\",\n          children: \"Private\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RoomNameForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"RoomName\",\n          children: \"RoomName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), !roomSetting ? /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"RoomName\",\n          maxLength: 12,\n          minLength: 1,\n          type: \"text\",\n          placeholder: \"\\uBC29 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n          onChange: e => setRoomName(e.target.value),\n          onKeyDown: e => handleEnterEvent(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"RoomName\",\n          maxLength: 12,\n          minLength: 1,\n          type: \"text\",\n          placeholder: \"\\uBC29 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n          value: roomSettingCurrentRoomName,\n          onChange: e => setRoomSettingCurrentRoomName(e.target.value),\n          onKeyDown: e => handleEnterEvent(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PasswordFrom\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"Password\",\n          maxLength: 20,\n          minLength: 4,\n          type: \"password\",\n          placeholder: \"\\uBE44\\uBC00 \\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n          onChange: e => setRoomPass(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Accept\",\n        onClick: acceptHandler,\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"RoomCancel\",\n        onClick: () => setRoomModal(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(RoomModal, \"7FbJEufqzGhC1RMq+xbfWCJLzns=\", false, function () {\n  return [useAtom, useAtom, useAtom, useAtom, useAtom, useAtom];\n});\n_c = RoomModal;\nvar _c;\n$RefreshReg$(_c, \"RoomModal\");","map":{"version":3,"names":["useAtom","roomModalAtom","PressKey","useState","chatAtom","socket","jsxDEV","_jsxDEV","Fragment","_Fragment","RoomModal","_s","setRoomModal","roomName","setRoomName","roomPass","setRoomPass","roomCheck","setRoomCheck","roomList","setRoomList","roomListAtom","focusRoom","setFocusRoom","focusRoomAtom","roomSetting","setRoomSetting","roomSettingAtom","roomSettingIsPrivate","setRoomSettingIsPrivate","roomSettingIsPrivateAtom","roomSettingCurrentRoomName","setRoomSettingCurrentRoomName","roomSettingCurrentRoomNameAtom","acceptHandler","trimRoomName","trim","length","alert","emitRoomEdit","roomType","emitRoomCreate","handleEnterEvent","e","key","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","value","onChange","target","checked","htmlFor","maxLength","minLength","placeholder","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/data/front/src/components/ChatPage/RoomModal.tsx"],"sourcesContent":["import { useAtom } from \"jotai\";\nimport { roomModalAtom } from \"../atom/ModalAtom\";\nimport { PressKey } from \"../../event/pressKey\";\n\nimport \"../../styles/RoomModal.css\";\n\nimport { useState } from 'react';\nimport * as chatAtom from '../atom/ChatAtom';\nimport * as socket from \"../../socket/chat.socket\";\nimport { keyboardKey } from '@testing-library/user-event';\n\nimport type * as chatType from '../../socket/chat.dto';\nexport default function RoomModal() {\n  const [, setRoomModal] = useAtom(roomModalAtom);\n  const [roomName, setRoomName] = useState(\"\");\n  const [roomPass, setRoomPass] = useState(\"\");\n  const [roomCheck, setRoomCheck] = useState(false);\n  const [roomList, setRoomList] = useAtom(chatAtom.roomListAtom);\n  const [focusRoom, setFocusRoom] = useAtom(chatAtom.focusRoomAtom);\n  const [roomSetting, setRoomSetting] = useAtom(chatAtom.roomSettingAtom);\n  const [roomSettingIsPrivate, setRoomSettingIsPrivate] = useAtom(chatAtom.roomSettingIsPrivateAtom);\n  const [roomSettingCurrentRoomName, setRoomSettingCurrentRoomName] = useAtom(chatAtom.roomSettingCurrentRoomNameAtom);\n\n  PressKey([\"Escape\"], () => {\n    setRoomModal(false);\n  });\n\n  const acceptHandler = () => {\n    if (roomSetting) {\n      const trimRoomName = roomSettingCurrentRoomName.trim();\n      if (trimRoomName.length < 1) {\n        alert('방 이름을 입력해주세요.');\n      } else {\n        socket.emitRoomEdit(focusRoom, roomSettingCurrentRoomName, roomSettingIsPrivate, roomPass, roomList[focusRoom].roomType);\n        setRoomModal(false);\n      }\n    } else {\n      const trimRoomName = roomName.trim();\n      if (trimRoomName.length < 1) {\n        alert('방 이름을 입력해주세요.');\n      } else {\n        socket.emitRoomCreate(roomName, roomCheck, roomPass);\n        setRoomModal(false);\n      }\n    }\n    setRoomName(\"\");\n    setRoomPass(\"\");\n  };\n\n\n  const handleEnterEvent = (e: keyboardKey) => {\n    if (e.key === 'Enter') {\n      acceptHandler();\n    }\n  }\n\n  return (\n    <>\n      <div className=\"RoomModalBG\"></div>\n      <div className=\"RoomModal\">\n        <div className=\"PrivacyChecker\">\n          {\n            !roomSetting\n              ? < input type=\"checkbox\" id=\"PrivacyCheckbox\" name=\"Privacy\" value=\"false\" onChange={(e) => setRoomCheck(e.target.checked)} checked={roomCheck} ></input>\n              : < input type=\"checkbox\" id=\"PrivacyCheckbox\" name=\"Privacy\" value=\"false\" onChange={(e) => setRoomSettingIsPrivate(e.target.checked)} checked={roomSettingIsPrivate} ></input>\n          }\n          <label htmlFor=\"PrivacyCheckbox\">Private</label>\n        </div>\n        <div className=\"RoomNameForm\">\n          <label htmlFor=\"RoomName\">RoomName</label>\n          {\n            !roomSetting\n              ? <input id=\"RoomName\" maxLength={12} minLength={1} type=\"text\" placeholder=\"방 이름을 입력하세요.\" onChange={(e) => setRoomName(e.target.value)} onKeyDown={(e) => handleEnterEvent(e)}></input>\n              : <input id=\"RoomName\" maxLength={12} minLength={1} type=\"text\" placeholder=\"방 이름을 입력하세요.\" value={roomSettingCurrentRoomName} onChange={(e) => setRoomSettingCurrentRoomName(e.target.value)} onKeyDown={(e) => handleEnterEvent(e)}></input>\n          }\n        </div>\n        <div className=\"PasswordFrom\">\n          <label htmlFor=\"Password\">Password</label>\n          <input id=\"Password\" maxLength={20} minLength={4} type=\"password\" placeholder=\"비밀 번호를 입력하세요.\" onChange={(e) => setRoomPass(e.target.value)}></input>\n        </div>\n        <button className=\"Accept\" onClick={acceptHandler}>Accept</button>\n        {/* <button className=\"Accept\" >Accept</button> */}\n        <button className=\"RoomCancel\" onClick={() => setRoomModal(false)}>\n          Cancel\n        </button>\n      </div >\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}