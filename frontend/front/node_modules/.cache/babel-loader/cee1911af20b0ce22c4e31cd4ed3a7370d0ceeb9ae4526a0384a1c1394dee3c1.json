{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/GamePage/PingPong.tsx\",\n  _s = $RefreshSig$();\nimport \"../../styles/BackGround.css\";\nimport \"../../styles/PingPong.css\";\nimport React, { useEffect } from \"react\";\nimport * as chatAtom from \"../atom/ChatAtom\";\nimport { isGameStartedAtom, isPrivateAtom, serverClientTimeDiffAtom } from \"../atom/GameAtom\";\nimport { Game } from \"./Pong\";\nimport * as game from \"../../socket/game.socket\";\nimport { useAtom } from \"jotai\";\nimport { useRef, useState } from \"react\";\nimport { gameResultModalAtom, isLoadingAtom } from \"../atom/ModalAtom\";\nimport { ball, Direction, HEIGHT, Hit, p1, p2, paddle, WIDTH } from \"./GameInfo\";\nimport { AdminLogPrinter } from \"../../event/event.util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PingPong() {\n  _s();\n  const [upArrow, setUpArrow] = useState(false);\n  const [downArrow, setDownArrow] = useState(false);\n  const [adminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const canvas = useRef(null);\n  const [isLoading, setIsLoading] = useAtom(isLoadingAtom);\n  const [isPrivate, setIsPrivate] = useAtom(isPrivateAtom);\n  const [isGameStart, setIsGameStart] = useAtom(isGameStartedAtom);\n  // const [isQueue, setIsQueue] = useAtom(isQueueAtom);\n  const [gameResultModal, setGameResultModal] = useAtom(gameResultModalAtom);\n  const [serverClientTimeDiff, setServerClientTimeDiff] = useAtom(serverClientTimeDiffAtom);\n  let coords = {\n    paddle1Y: 225,\n    ballX: 1150 / 2,\n    ballY: 300,\n    paddle2Y: 225,\n    ballSpeedX: 0,\n    ballSpeedY: 0,\n    paddleSpeed: 0.6,\n    keyPress: [0, 0, 0, 0],\n    time: Date.now()\n  };\n  let lastUpdateTime = coords.time;\n  let requestAnimationId = 0;\n  useEffect(() => {\n    requestAnimationLoop(lastUpdateTime, lastUpdateTime);\n    return () => {\n      cancelAnimationFrame(requestAnimationId);\n    };\n  }, [serverClientTimeDiff]);\n  const syncDataHandler = gameCoord => {\n    coords = gameCoord;\n    for (let i = 0; i < 4; i++) {\n      if (coords.keyPress[i] !== 0) {\n        coords.keyPress[i] += serverClientTimeDiff;\n      }\n    }\n    coords.time += serverClientTimeDiff;\n    update(Date.now(), coords.time);\n  };\n  const scoreEventhandler = scoreInfo => {\n    p1.score = scoreInfo.p1Score;\n    p2.score = scoreInfo.p2Score;\n    coords.ballSpeedX = 0;\n    coords.ballSpeedY = 0;\n    coords.paddleSpeed = 0;\n    Game(coords, canvas);\n  };\n  const finishEventHandler = scoreInfo => {\n    p1.score = scoreInfo.p1Score;\n    p2.score = scoreInfo.p2Score;\n    coords.ballSpeedX = 0;\n    coords.ballSpeedY = 0;\n    coords.paddleSpeed = 0;\n    Game(coords, canvas);\n    setGameResultModal(true);\n  };\n  useEffect(() => {\n    game.gameSocket.on(\"syncData\", syncDataHandler);\n    game.gameSocket.on(\"scoreInfo\", scoreEventhandler);\n    game.gameSocket.on(\"finished\", finishEventHandler);\n    return () => {\n      game.gameSocket.off(\"syncData\", syncDataHandler);\n      game.gameSocket.off(\"scoreInfo\", scoreEventhandler);\n      game.gameSocket.off(\"finished\", finishEventHandler);\n    };\n  }, []);\n  useEffect(() => {\n    game.gameSocket.on(\"syncData\", syncDataHandler);\n    return () => {\n      game.gameSocket.off(\"syncData\", syncDataHandler);\n    };\n  }, [serverClientTimeDiff]);\n\n  // // the connection is denied by the server in a middleware function\n  // game.gameSocket.on(\"connect_error\", (err) => {\n  //   if (err.message === \"unauthorized\") {\n  //     // handle each case\n  //   }\n  //   console.log(err.message); // prints the message associated with the error\n  // });\n\n  function requestAnimationLoop(curTime, lastUpdate) {\n    update(curTime, lastUpdate);\n    requestAnimationId = requestAnimationFrame(() => requestAnimationLoop(Date.now(), lastUpdateTime));\n  }\n\n  // paddle update first, and then ball position update.\n  function update(curTime, lastUpdate) {\n    const dt = curTime - lastUpdate;\n    if (dt > 0) {\n      const keyPressDt = getKeyPressDt(curTime);\n      paddleUpdate(keyPressDt);\n      coords.ballX += coords.ballSpeedX * dt;\n      coords.ballY += coords.ballSpeedY * dt;\n      const isHitY = collisionCheckY();\n      const isHitX = collisionCheckX();\n      if (isHitY) {\n        if (coords.ballY < ball.radius) {\n          coords.ballY = 2 * ball.radius - coords.ballY;\n          coords.ballSpeedY = -coords.ballSpeedY;\n        } else {\n          coords.ballY = 2 * (HEIGHT - ball.radius) - coords.ballY;\n          coords.ballSpeedY = -coords.ballSpeedY;\n        }\n      }\n      if (isHitX == Direction.LEFT) {\n        if (collisionCheckP1Paddle() === Hit.PADDLE) {\n          coords.ballX = 2 * (ball.radius + paddle.width) - coords.ballX;\n          coords.ballSpeedX = -coords.ballSpeedX;\n        }\n      } else if (isHitX === Direction.RIGHT) {\n        if (collisionCheckP2Paddle() === Hit.PADDLE) {\n          coords.ballX = 2 * (WIDTH - ball.radius - paddle.width) - coords.ballX;\n          coords.ballSpeedX = -coords.ballSpeedX;\n        }\n      }\n      lastUpdateTime = curTime;\n      Game(coords, canvas);\n    }\n  }\n  function getKeyPressDt(curTime) {\n    const keyPressDt = [];\n    for (let i = 0; i < 4; i++) {\n      if (coords.keyPress[i] !== 0 && curTime > coords.keyPress[i]) {\n        keyPressDt.push(curTime - coords.keyPress[i]);\n        coords.keyPress[i] = curTime;\n      } else {\n        keyPressDt.push(0);\n      }\n    }\n    // if (coords.keyPress[0] || coords.keyPress[1] || coords.keyPress[2] || coords.keyPress[3]) {\n    //   AdminLogPrinter(adminConsole, JSON.stringify(coords.keyPress));\n    //   AdminLogPrinter(adminConsole, JSON.stringify(keyPressDt));\n    // }\n    return keyPressDt;\n  }\n  function paddleUpdate(keyPressDt) {\n    if (keyPressDt[0] !== 0) {\n      if (coords.paddle1Y > 0) {\n        coords.paddle1Y -= coords.paddleSpeed * keyPressDt[0];\n      }\n      if (coords.paddle1Y < 0) {\n        coords.paddle1Y = 0;\n      }\n    }\n    if (keyPressDt[1] !== 0) {\n      if (coords.paddle1Y < HEIGHT - paddle.height) {\n        coords.paddle1Y += coords.paddleSpeed * keyPressDt[1];\n      }\n      if (coords.paddle1Y > HEIGHT - paddle.height) {\n        coords.paddle1Y = HEIGHT - paddle.height;\n      }\n    }\n    if (keyPressDt[2] !== 0) {\n      if (coords.paddle2Y > 0) {\n        coords.paddle2Y -= coords.paddleSpeed * keyPressDt[2];\n      }\n      if (coords.paddle2Y < 0) {\n        coords.paddle2Y = 0;\n      }\n    }\n    if (keyPressDt[3] !== 0) {\n      if (coords.paddle2Y < HEIGHT - paddle.height) {\n        coords.paddle2Y += coords.paddleSpeed * keyPressDt[3];\n      }\n      if (coords.paddle2Y > HEIGHT - paddle.height) {\n        coords.paddle2Y = HEIGHT - paddle.height;\n      }\n    }\n  }\n  function collisionCheckX() {\n    if (coords.ballX <= ball.radius + paddle.width) {\n      return Direction.LEFT;\n    } else if (coords.ballX >= WIDTH - ball.radius - paddle.width) {\n      return Direction.RIGHT;\n    }\n    return Direction.NONE;\n  }\n  function collisionCheckY() {\n    if (coords.ballY >= HEIGHT - ball.radius) {\n      return Direction.DOWN;\n    } else if (coords.ballY <= ball.radius) {\n      return Direction.UP;\n    }\n    return Direction.NONE;\n  }\n  function collisionCheckP1Paddle() {\n    if (coords.ballY >= coords.paddle1Y && coords.ballY <= coords.paddle1Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n  function collisionCheckP2Paddle() {\n    if (coords.ballY >= coords.paddle2Y && coords.ballY <= coords.paddle2Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n  useEffect(() => {\n    // first draw\n    Game(coords, canvas);\n  }, []);\n  useEffect(() => {\n    function handleKeyPress(event) {\n      if (event.code === \"ArrowUp\") {\n        if (!upArrow) {\n          setUpArrow(true);\n          game.emitUpPress();\n          AdminLogPrinter(adminConsole, \"up press\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        if (!downArrow) {\n          setDownArrow(true);\n          game.emitDownPress();\n          AdminLogPrinter(adminConsole, \"down press\");\n        }\n      }\n    }\n    function handleKeyRelease(event) {\n      if (event.code === \"ArrowUp\") {\n        if (upArrow) {\n          setUpArrow(false);\n          game.emitUpRelease();\n          AdminLogPrinter(adminConsole, \"up release\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        if (downArrow) {\n          setDownArrow(false);\n          game.emitDownRelease();\n          AdminLogPrinter(adminConsole, \"down release\");\n        }\n      }\n    }\n    window.addEventListener(\"keydown\", handleKeyPress);\n    window.addEventListener(\"keyup\", handleKeyRelease);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n      window.removeEventListener(\"keyup\", handleKeyRelease);\n    };\n  }, [upArrow, downArrow]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"QueueBackGround\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas,\n      id: \"pong\",\n      width: 1150,\n      height: 600\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n}\n_s(PingPong, \"B4yWLsxuVtNe0n2YVleF6X7vokQ=\", false, function () {\n  return [useAtom, useAtom, useAtom, useAtom, useAtom, useAtom];\n});\n_c = PingPong;\nvar _c;\n$RefreshReg$(_c, \"PingPong\");","map":{"version":3,"names":["React","useEffect","chatAtom","isGameStartedAtom","isPrivateAtom","serverClientTimeDiffAtom","Game","game","useAtom","useRef","useState","gameResultModalAtom","isLoadingAtom","ball","Direction","HEIGHT","Hit","p1","p2","paddle","WIDTH","AdminLogPrinter","jsxDEV","_jsxDEV","PingPong","_s","upArrow","setUpArrow","downArrow","setDownArrow","adminConsole","adminConsoleAtom","canvas","isLoading","setIsLoading","isPrivate","setIsPrivate","isGameStart","setIsGameStart","gameResultModal","setGameResultModal","serverClientTimeDiff","setServerClientTimeDiff","coords","paddle1Y","ballX","ballY","paddle2Y","ballSpeedX","ballSpeedY","paddleSpeed","keyPress","time","Date","now","lastUpdateTime","requestAnimationId","requestAnimationLoop","cancelAnimationFrame","syncDataHandler","gameCoord","i","update","scoreEventhandler","scoreInfo","score","p1Score","p2Score","finishEventHandler","gameSocket","on","off","curTime","lastUpdate","requestAnimationFrame","dt","keyPressDt","getKeyPressDt","paddleUpdate","isHitY","collisionCheckY","isHitX","collisionCheckX","radius","LEFT","collisionCheckP1Paddle","PADDLE","width","RIGHT","collisionCheckP2Paddle","push","height","NONE","DOWN","UP","WALL","handleKeyPress","event","code","emitUpPress","emitDownPress","handleKeyRelease","emitUpRelease","emitDownRelease","window","addEventListener","removeEventListener","className","children","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/data/front/src/components/GamePage/PingPong.tsx"],"sourcesContent":["import \"../../styles/BackGround.css\";\nimport \"../../styles/PingPong.css\";\n\nimport React, { useEffect } from \"react\";\n\nimport * as chatAtom from \"../atom/ChatAtom\";\nimport { isGameStartedAtom, isPrivateAtom, serverClientTimeDiffAtom } from \"../atom/GameAtom\";\nimport { Game } from \"./Pong\";\n\nimport * as game from \"../../socket/game.socket\";\n\nimport { useAtom } from \"jotai\";\nimport { useRef, useState } from \"react\";\nimport { gameResultModalAtom, isLoadingAtom } from \"../atom/ModalAtom\";\nimport {\n  ball,\n  Direction,\n  HEIGHT,\n  Hit,\n  p1,\n  p2,\n  paddle,\n  paddleInfo,\n  scoreInfo,\n  WIDTH,\n} from \"./GameInfo\";\n\nimport { AdminLogPrinter } from \"../../event/event.util\";\nimport { GameCoordinate } from \"../../socket/game.dto\";\n\nexport default function PingPong() {\n  const [upArrow, setUpArrow] = useState(false);\n  const [downArrow, setDownArrow] = useState(false);\n  const [adminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const canvas = useRef<HTMLCanvasElement>(null);\n\n  const [isLoading, setIsLoading] = useAtom(isLoadingAtom);\n  const [isPrivate, setIsPrivate] = useAtom(isPrivateAtom);\n  const [isGameStart, setIsGameStart] = useAtom(isGameStartedAtom);\n  // const [isQueue, setIsQueue] = useAtom(isQueueAtom);\n  const [gameResultModal, setGameResultModal] = useAtom(gameResultModalAtom);\n\n  const [serverClientTimeDiff, setServerClientTimeDiff] = useAtom(serverClientTimeDiffAtom);\n  \n  let coords = {\n    paddle1Y: 225,\n    ballX: 1150 / 2,\n    ballY: 300,\n    paddle2Y: 225,\n    ballSpeedX: 0,\n    ballSpeedY: 0,\n    paddleSpeed: 0.6,\n    keyPress: [0, 0, 0, 0],\n    time: Date.now(),\n  }\n\n  let lastUpdateTime: number = coords.time;\n  let requestAnimationId: number = 0;\n\n  useEffect(()=> {\n    requestAnimationLoop(lastUpdateTime, lastUpdateTime);\n    return () => {\n      cancelAnimationFrame(requestAnimationId);\n    }\n  }, [serverClientTimeDiff])\n\n  const syncDataHandler = (gameCoord: GameCoordinate) => {\n    coords = gameCoord;\n    for (let i = 0; i < 4; i++) {\n      if (coords.keyPress[i] !== 0) {\n        coords.keyPress[i] += serverClientTimeDiff;\n      }\n    }\n    coords.time += serverClientTimeDiff;\n    update(Date.now(), coords.time);\n  };\n\n  const scoreEventhandler = (scoreInfo: scoreInfo) => {\n    p1.score = scoreInfo.p1Score;\n    p2.score = scoreInfo.p2Score;\n    coords.ballSpeedX = 0;\n    coords.ballSpeedY = 0;\n    coords.paddleSpeed = 0;\n    Game(coords, canvas);\n  };\n\n  const finishEventHandler = (scoreInfo: scoreInfo) => {\n    p1.score = scoreInfo.p1Score;\n    p2.score = scoreInfo.p2Score;\n    coords.ballSpeedX = 0;\n    coords.ballSpeedY = 0;\n    coords.paddleSpeed = 0;\n    Game(coords, canvas);\n    setGameResultModal(true);\n  };\n\n  useEffect(() => {\n    game.gameSocket.on(\"syncData\", syncDataHandler);\n    game.gameSocket.on(\"scoreInfo\", scoreEventhandler);\n    game.gameSocket.on(\"finished\", finishEventHandler);\n    return () => {\n      game.gameSocket.off(\"syncData\", syncDataHandler);\n      game.gameSocket.off(\"scoreInfo\", scoreEventhandler);\n      game.gameSocket.off(\"finished\", finishEventHandler);\n    };\n  }, []);\n\n  useEffect(() => {\n    game.gameSocket.on(\"syncData\", syncDataHandler);\n    return () => {\n      game.gameSocket.off(\"syncData\", syncDataHandler);\n    };\n  }, [serverClientTimeDiff]);\n\n  // // the connection is denied by the server in a middleware function\n  // game.gameSocket.on(\"connect_error\", (err) => {\n  //   if (err.message === \"unauthorized\") {\n  //     // handle each case\n  //   }\n  //   console.log(err.message); // prints the message associated with the error\n  // });\n\n  function requestAnimationLoop(curTime: number, lastUpdate: number) {\n    update(curTime, lastUpdate);\n    requestAnimationId = requestAnimationFrame(() => requestAnimationLoop(Date.now(), lastUpdateTime));\n  }\n\n  // paddle update first, and then ball position update.\n  function update(curTime: number, lastUpdate: number) {\n    const dt = curTime - lastUpdate;\n    if (dt > 0) {\n      const keyPressDt: number[] = getKeyPressDt(curTime);\n\n      paddleUpdate(keyPressDt);\n      coords.ballX += coords.ballSpeedX * dt;\n      coords.ballY += coords.ballSpeedY * dt;\n      const isHitY = collisionCheckY();\n      const isHitX = collisionCheckX();\n      if (isHitY) {\n        if (coords.ballY < ball.radius) {\n          coords.ballY = 2 * ball.radius - coords.ballY;\n          coords.ballSpeedY = -coords.ballSpeedY;\n        } else {\n          coords.ballY = 2 * (HEIGHT - ball.radius) - coords.ballY;\n          coords.ballSpeedY = -coords.ballSpeedY;\n        }\n      }\n      if (isHitX == Direction.LEFT) {\n        if (collisionCheckP1Paddle() === Hit.PADDLE) {\n          coords.ballX = 2 * (ball.radius + paddle.width) - coords.ballX;\n          coords.ballSpeedX = -coords.ballSpeedX;\n        }\n      } else if (isHitX === Direction.RIGHT) {\n        if (collisionCheckP2Paddle() === Hit.PADDLE) {\n          coords.ballX = 2 * (WIDTH - ball.radius - paddle.width) - coords.ballX;\n          coords.ballSpeedX = -coords.ballSpeedX;\n        }\n      }\n      lastUpdateTime = curTime;\n      Game(coords, canvas);\n    }\n  }\n\n  function getKeyPressDt(curTime: number): number[] {\n    const keyPressDt: number[] = [];\n    for (let i = 0; i < 4; i++) {\n      if (coords.keyPress[i] !== 0 && curTime > coords.keyPress[i]) {\n        keyPressDt.push(curTime - coords.keyPress[i]);\n        coords.keyPress[i] = curTime;\n      } else {\n        keyPressDt.push(0);\n      }\n    }\n    // if (coords.keyPress[0] || coords.keyPress[1] || coords.keyPress[2] || coords.keyPress[3]) {\n    //   AdminLogPrinter(adminConsole, JSON.stringify(coords.keyPress));\n    //   AdminLogPrinter(adminConsole, JSON.stringify(keyPressDt));\n    // }\n    return keyPressDt;\n  }\n\n  function paddleUpdate(keyPressDt: number[]) {\n    if (keyPressDt[0] !== 0) {\n      if (coords.paddle1Y > 0) {\n        coords.paddle1Y -= coords.paddleSpeed * keyPressDt[0];\n      }\n      if (coords.paddle1Y < 0) {\n        coords.paddle1Y = 0;\n      }\n    }\n    if (keyPressDt[1] !== 0) {\n      if (coords.paddle1Y < HEIGHT - paddle.height) {\n        coords.paddle1Y += coords.paddleSpeed * keyPressDt[1];\n      }\n      if (coords.paddle1Y > HEIGHT - paddle.height) {\n        coords.paddle1Y = HEIGHT - paddle.height;\n      }\n    }\n    if (keyPressDt[2] !== 0) {\n      if (coords.paddle2Y > 0) {\n        coords.paddle2Y -= coords.paddleSpeed * keyPressDt[2];\n      }\n      if (coords.paddle2Y < 0) {\n        coords.paddle2Y = 0;\n      }\n    }\n    if (keyPressDt[3] !== 0) {\n      if (coords.paddle2Y < HEIGHT - paddle.height) {\n        coords.paddle2Y += coords.paddleSpeed * keyPressDt[3];\n      }\n      if (coords.paddle2Y > HEIGHT - paddle.height) {\n        coords.paddle2Y = HEIGHT - paddle.height;\n      }\n    }\n  }\n\n  function collisionCheckX() {\n    if (coords.ballX <= ball.radius + paddle.width) {\n      return Direction.LEFT;\n    } else if (coords.ballX >= WIDTH - ball.radius - paddle.width) {\n      return Direction.RIGHT;\n    }\n    return Direction.NONE;\n  }\n\n  function collisionCheckY() {\n    if (coords.ballY >= HEIGHT - ball.radius) {\n      return Direction.DOWN;\n    } else if (coords.ballY <= ball.radius) {\n      return Direction.UP;\n    }\n    return Direction.NONE;\n  }\n\n  function collisionCheckP1Paddle() {\n    if (coords.ballY >= coords.paddle1Y && coords.ballY <= coords.paddle1Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n\n  function collisionCheckP2Paddle() {\n    if (coords.ballY >= coords.paddle2Y && coords.ballY <= coords.paddle2Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n\n  useEffect(() => {\n    // first draw\n    Game(coords, canvas);\n  }, []);\n\n  useEffect(() => {\n    function handleKeyPress(event: globalThis.KeyboardEvent) {\n      if (event.code === \"ArrowUp\") {\n        if (!upArrow) {\n          setUpArrow(true);\n          game.emitUpPress();\n          AdminLogPrinter(adminConsole, \"up press\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        if (!downArrow) {\n          setDownArrow(true);\n          game.emitDownPress();\n          AdminLogPrinter(adminConsole, \"down press\");\n        }\n      }\n    }\n\n    function handleKeyRelease(event: globalThis.KeyboardEvent) {\n      if (event.code === \"ArrowUp\") {\n        if (upArrow) {\n          setUpArrow(false);\n          game.emitUpRelease();\n          AdminLogPrinter(adminConsole, \"up release\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        if (downArrow) {\n          setDownArrow(false);\n          game.emitDownRelease();\n          AdminLogPrinter(adminConsole, \"down release\");\n        }\n      }\n    }\n    window.addEventListener(\"keydown\", handleKeyPress);\n    window.addEventListener(\"keyup\", handleKeyRelease);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n      window.removeEventListener(\"keyup\", handleKeyRelease);\n    };\n  }, [upArrow, downArrow]);\n\n  return (\n    <div className=\"QueueBackGround\">\n      <canvas ref={canvas} id=\"pong\" width={1150} height={600}></canvas>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}