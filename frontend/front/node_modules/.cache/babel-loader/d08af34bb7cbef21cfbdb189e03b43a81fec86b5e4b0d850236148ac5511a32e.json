{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/GamePage/PingPong.tsx\",\n  _s = $RefreshSig$();\nimport \"../../styles/BackGround.css\";\nimport \"../../styles/PingPong.css\";\nimport React, { useEffect } from \"react\";\nimport * as chatAtom from \"../atom/ChatAtom\";\nimport { gameSocketAtom, gameWinnerAtom, isGameStartedAtom, isP1Atom, isPrivateAtom } from \"../atom/GameAtom\";\nimport { Game } from \"./Pong\";\nimport { useAtom, useAtomValue, useSetAtom } from \"jotai\";\nimport { useRef, useState } from \"react\";\nimport { gameResultModalAtom, isLoadingAtom } from \"../atom/ModalAtom\";\nimport { ball, HEIGHT, p1, p2, paddle, WIDTH } from \"./GameInfo\";\nimport { AdminLogPrinter } from \"../../event/event.util\";\nimport { Direction, Hit } from \"../../socket/game.dto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PingPong() {\n  _s();\n  const [upArrow, setUpArrow] = useState(false);\n  const [downArrow, setDownArrow] = useState(false);\n  const [adminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const canvas = useRef(null);\n  const [isLoading, setIsLoading] = useAtom(isLoadingAtom);\n  const [isPrivate, setIsPrivate] = useAtom(isPrivateAtom);\n  const [isGameStart, setIsGameStart] = useAtom(isGameStartedAtom);\n  // const [isQueue, setIsQueue] = useAtom(isQueueAtom);\n  const [gameResultModal, setGameResultModal] = useAtom(gameResultModalAtom);\n  const gameSocket = useAtomValue(gameSocketAtom);\n  const isP1 = useAtomValue(isP1Atom);\n  const setGameWinner = useSetAtom(gameWinnerAtom);\n\n  // let cnt: number = 0\n  const [cnt, setCnt] = useState(0);\n  // const [serverClientTimeDiff, setServerClientTimeDiff] = useAtom(serverClientTimeDiffAtom);\n\n  let serverClientTimeDiff = 1000;\n  const coords = {\n    paddle1Y: 225,\n    ballX: 1150 / 2,\n    ballY: 300,\n    paddle2Y: 225,\n    ballSpeedX: 0,\n    ballSpeedY: 0,\n    paddleSpeed: 0.6,\n    keyPress: [0, 0, 0, 0],\n    time: Date.now()\n  };\n  let lastUpdateTime = coords.time;\n  let requestAnimationId = 0;\n\n  // 1 sec delay for init value\n  let pingRTTmin = 2000;\n  let pingInterval;\n  const pingEvent = () => {\n    if (!isGameStart) {\n      clearInterval(pingInterval);\n    }\n    const curTime = Date.now();\n    const pingEventHandler = serverTime => {\n      const now = Date.now();\n      const pingRTT = now - curTime;\n      AdminLogPrinter(adminConsole, `pingRTT: ${pingRTT}ms`);\n      if (pingRTTmin > pingRTT) {\n        pingRTTmin = pingRTT;\n        const adjServerTime = serverTime + pingRTTmin / 2;\n        serverClientTimeDiff = now - adjServerTime;\n      }\n    };\n    gameSocket.emit(\"ping\", pingEventHandler);\n  };\n  useEffect(() => {\n    console.log(\"pingInterval\");\n    pingInterval = setInterval(pingEvent, 1000);\n    return () => {\n      console.log(\"clear pingInterval\");\n      clearInterval(pingInterval);\n    };\n  }, []);\n  const copyCoord = gameCoord => {\n    coords.paddle1Y = gameCoord.paddle1Y;\n    coords.ballX = gameCoord.ballX;\n    coords.ballY = gameCoord.ballY;\n    coords.paddle2Y = gameCoord.paddle2Y;\n    coords.ballSpeedX = gameCoord.ballSpeedX;\n    coords.ballSpeedY = gameCoord.ballSpeedY;\n    coords.paddleSpeed = gameCoord.paddleSpeed;\n    coords.time = gameCoord.time;\n    for (let i = 0; i < 4; i++) {\n      coords.keyPress[i] = gameCoord.keyPress[i];\n    }\n  };\n  const syncDataHandler = gameCoord => {\n    const tmpCoords = gameCoord;\n    for (let i = 0; i < 4; i++) {\n      if (tmpCoords.keyPress[i] !== 0) {\n        tmpCoords.keyPress[i] += serverClientTimeDiff;\n      }\n    }\n    if (isP1 === false) {\n      tmpCoords.ballX = WIDTH - tmpCoords.ballX;\n      tmpCoords.ballSpeedX = -tmpCoords.ballSpeedX;\n      const tmpPaddle1Y = tmpCoords.paddle1Y;\n      tmpCoords.paddle1Y = tmpCoords.paddle2Y;\n      tmpCoords.paddle2Y = tmpPaddle1Y;\n      const tmpUp = tmpCoords.keyPress[0];\n      const tmpDown = tmpCoords.keyPress[1];\n      tmpCoords.keyPress[0] = tmpCoords.keyPress[2];\n      tmpCoords.keyPress[1] = tmpCoords.keyPress[3];\n      tmpCoords.keyPress[2] = tmpUp;\n      tmpCoords.keyPress[3] = tmpDown;\n    }\n    tmpCoords.time += serverClientTimeDiff;\n    copyCoord(tmpCoords);\n    update(Date.now(), tmpCoords.time);\n  };\n  const scoreEventHandler = _ref => {\n    let {\n      gameCoord,\n      scoreInfo\n    } = _ref;\n    if (isP1) {\n      p1.score = scoreInfo.p1Score;\n      p2.score = scoreInfo.p2Score;\n    } else {\n      p1.score = scoreInfo.p2Score;\n      p2.score = scoreInfo.p1Score;\n    }\n    const tmpCoords = gameCoord;\n    for (let i = 0; i < 4; i++) {\n      if (tmpCoords.keyPress[i] !== 0) {\n        tmpCoords.keyPress[i] += serverClientTimeDiff;\n      }\n    }\n    if (isP1 === false) {\n      tmpCoords.ballX = WIDTH - tmpCoords.ballX;\n      tmpCoords.ballSpeedX = -tmpCoords.ballSpeedX;\n      const tmpPaddle1Y = tmpCoords.paddle1Y;\n      tmpCoords.paddle1Y = tmpCoords.paddle2Y;\n      tmpCoords.paddle2Y = tmpPaddle1Y;\n      const tmpUp = tmpCoords.keyPress[0];\n      const tmpDown = tmpCoords.keyPress[1];\n      tmpCoords.keyPress[0] = tmpCoords.keyPress[2];\n      tmpCoords.keyPress[1] = tmpCoords.keyPress[3];\n      tmpCoords.keyPress[2] = tmpUp;\n      tmpCoords.keyPress[3] = tmpDown;\n    }\n    tmpCoords.time += serverClientTimeDiff;\n    tmpCoords.ballSpeedX = 0;\n    tmpCoords.ballSpeedY = 0;\n    tmpCoords.paddleSpeed = 0;\n    copyCoord(tmpCoords);\n    update(Date.now(), tmpCoords.time);\n  };\n  const finishEventHandler = scoreInfo => {\n    console.log(\"finished!!!!!!\");\n    p1.score = scoreInfo.p1Score;\n    p2.score = scoreInfo.p2Score;\n    if (p1.score > p2.score) {\n      setGameWinner(p1.uid);\n    } else {\n      setGameWinner(p2.uid);\n    }\n    setGameResultModal(true);\n    clearInterval(pingInterval);\n  };\n  const countdownEventHandler = () => {\n    AdminLogPrinter(adminConsole, \"countdown!!!\");\n  };\n  useEffect(() => {\n    gameSocket.on(\"syncData\", syncDataHandler);\n    gameSocket.on(\"scoreInfo\", scoreEventHandler);\n    gameSocket.on(\"finished\", finishEventHandler);\n    gameSocket.on(\"countdown\", countdownEventHandler);\n    return () => {\n      gameSocket.off(\"syncData\", syncDataHandler);\n      gameSocket.off(\"scoreInfo\", scoreEventHandler);\n      gameSocket.off(\"finished\", finishEventHandler);\n      gameSocket.off(\"countdown\", countdownEventHandler);\n    };\n  }, []);\n  useEffect(() => {\n    console.log(`cnt: ${cnt}`);\n  }, [cnt]);\n  useEffect(() => {\n    setCnt(cnt + 1);\n    requestAnimationLoop(Date.now(), lastUpdateTime);\n    return () => {\n      setCnt(cnt - 1);\n      cancelAnimationFrame(requestAnimationId);\n    };\n  }, []);\n  //   console.log(\"coords updated!!!!\");\n\n  // // the connection is denied by the server in a middleware function\n  // gameSocket.on(\"connect_error\", (err) => {\n  //   if (err.message === \"unauthorized\") {\n  //     // handle each case\n  //   }\n  //   console.log(err.message); // prints the message associated with the error\n  // });\n\n  function requestAnimationLoop(curTime, lastUpdate) {\n    if (coords.keyPress !== null) {\n      update(curTime, lastUpdate);\n    }\n    requestAnimationId = requestAnimationFrame(() => requestAnimationLoop(Date.now(), lastUpdateTime));\n  }\n\n  // paddle update first, and then ball position update.\n  function update(curTime, lastUpdate) {\n    const dt = curTime - lastUpdate;\n    if (dt > 0) {\n      const keyPressDt = getKeyPressDt(curTime);\n      paddleUpdate(keyPressDt);\n      coords.ballX += coords.ballSpeedX * dt;\n      coords.ballY += coords.ballSpeedY * dt;\n      const isHitY = collisionCheckY();\n      const isHitX = collisionCheckX();\n      if (isHitY !== Direction.NONE) {\n        if (isHitY === Direction.UP) {\n          coords.ballY = 2 * ball.radius - coords.ballY;\n          coords.ballSpeedY = -coords.ballSpeedY;\n        } else {\n          coords.ballY = 2 * (HEIGHT - ball.radius) - coords.ballY;\n          coords.ballSpeedY = -coords.ballSpeedY;\n        }\n      }\n      if (isHitX !== Direction.NONE) {\n        if (isHitX === Direction.LEFT) {\n          if (collisionCheckP1Paddle() === Hit.PADDLE) {\n            coords.ballX = 2 * (ball.radius + paddle.width) - coords.ballX;\n            coords.ballSpeedX = -coords.ballSpeedX;\n          }\n        } else {\n          if (collisionCheckP2Paddle() === Hit.PADDLE) {\n            coords.ballX = 2 * (WIDTH - ball.radius - paddle.width) - coords.ballX;\n            coords.ballSpeedX = -coords.ballSpeedX;\n          }\n        }\n      }\n      lastUpdateTime = curTime;\n      Game(coords, canvas);\n    }\n  }\n  function getKeyPressDt(curTime) {\n    const keyPressDt = [];\n    for (let i = 0; i < 4; i++) {\n      if (coords.keyPress[i] !== 0 && curTime > coords.keyPress[i]) {\n        keyPressDt.push(curTime - coords.keyPress[i]);\n        coords.keyPress[i] = curTime;\n      } else {\n        keyPressDt.push(0);\n      }\n    }\n    return keyPressDt;\n  }\n  function paddleUpdate(keyPressDt) {\n    if (keyPressDt[0] !== 0) {\n      if (coords.paddle1Y > 0) {\n        coords.paddle1Y -= coords.paddleSpeed * keyPressDt[0];\n      }\n      if (coords.paddle1Y < 0) {\n        coords.paddle1Y = 0;\n      }\n    }\n    if (keyPressDt[1] !== 0) {\n      if (coords.paddle1Y < HEIGHT - paddle.height) {\n        coords.paddle1Y += coords.paddleSpeed * keyPressDt[1];\n      }\n      if (coords.paddle1Y > HEIGHT - paddle.height) {\n        coords.paddle1Y = HEIGHT - paddle.height;\n      }\n    }\n    if (keyPressDt[2] !== 0) {\n      if (coords.paddle2Y > 0) {\n        coords.paddle2Y -= coords.paddleSpeed * keyPressDt[2];\n      }\n      if (coords.paddle2Y < 0) {\n        coords.paddle2Y = 0;\n      }\n    }\n    if (keyPressDt[3] !== 0) {\n      if (coords.paddle2Y < HEIGHT - paddle.height) {\n        coords.paddle2Y += coords.paddleSpeed * keyPressDt[3];\n      }\n      if (coords.paddle2Y > HEIGHT - paddle.height) {\n        coords.paddle2Y = HEIGHT - paddle.height;\n      }\n    }\n  }\n  function collisionCheckX() {\n    if (coords.ballX <= ball.radius + paddle.width) {\n      return Direction.LEFT;\n    } else if (coords.ballX >= WIDTH - ball.radius - paddle.width) {\n      return Direction.RIGHT;\n    }\n    return Direction.NONE;\n  }\n  function collisionCheckY() {\n    if (coords.ballY >= HEIGHT - ball.radius) {\n      return Direction.DOWN;\n    } else if (coords.ballY <= ball.radius) {\n      return Direction.UP;\n    }\n    return Direction.NONE;\n  }\n  function collisionCheckP1Paddle() {\n    if (coords.ballY >= coords.paddle1Y && coords.ballY <= coords.paddle1Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n  function collisionCheckP2Paddle() {\n    if (coords.ballY >= coords.paddle2Y && coords.ballY <= coords.paddle2Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n  useEffect(() => {\n    // first draw\n    p1.score = 0;\n    p2.score = 0;\n    Game(coords, canvas);\n  }, []);\n  useEffect(() => {\n    function handleKeyPress(event) {\n      if (event.code === \"ArrowUp\") {\n        event.preventDefault();\n        if (!upArrow) {\n          setUpArrow(true);\n          gameSocket.emit(\"upPress\");\n          AdminLogPrinter(adminConsole, \"up press\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        event.preventDefault();\n        if (!downArrow) {\n          setDownArrow(true);\n          gameSocket.emit(\"downPress\");\n          AdminLogPrinter(adminConsole, \"down press\");\n        }\n      }\n    }\n    function handleKeyRelease(event) {\n      if (event.code === \"ArrowUp\") {\n        event.preventDefault();\n        if (upArrow) {\n          setUpArrow(false);\n          gameSocket.emit(\"upRelease\");\n          AdminLogPrinter(adminConsole, \"up release\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        event.preventDefault();\n        if (downArrow) {\n          setDownArrow(false);\n          gameSocket.emit(\"downRelease\");\n          AdminLogPrinter(adminConsole, \"down release\");\n        }\n      }\n    }\n    window.addEventListener(\"keydown\", handleKeyPress);\n    window.addEventListener(\"keyup\", handleKeyRelease);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n      window.removeEventListener(\"keyup\", handleKeyRelease);\n    };\n  }, [upArrow, downArrow]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"QueueBackGround\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas,\n      id: \"pong\",\n      width: 1150,\n      height: 600\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 401,\n    columnNumber: 5\n  }, this);\n}\n_s(PingPong, \"QH48Gw/zWHW8mpHNQ+zWzy0ib0c=\", false, function () {\n  return [useAtom, useAtom, useAtom, useAtom, useAtom, useAtomValue, useAtomValue, useSetAtom];\n});\n_c = PingPong;\nvar _c;\n$RefreshReg$(_c, \"PingPong\");","map":{"version":3,"names":["React","useEffect","chatAtom","gameSocketAtom","gameWinnerAtom","isGameStartedAtom","isP1Atom","isPrivateAtom","Game","useAtom","useAtomValue","useSetAtom","useRef","useState","gameResultModalAtom","isLoadingAtom","ball","HEIGHT","p1","p2","paddle","WIDTH","AdminLogPrinter","Direction","Hit","jsxDEV","_jsxDEV","PingPong","_s","upArrow","setUpArrow","downArrow","setDownArrow","adminConsole","adminConsoleAtom","canvas","isLoading","setIsLoading","isPrivate","setIsPrivate","isGameStart","setIsGameStart","gameResultModal","setGameResultModal","gameSocket","isP1","setGameWinner","cnt","setCnt","serverClientTimeDiff","coords","paddle1Y","ballX","ballY","paddle2Y","ballSpeedX","ballSpeedY","paddleSpeed","keyPress","time","Date","now","lastUpdateTime","requestAnimationId","pingRTTmin","pingInterval","pingEvent","clearInterval","curTime","pingEventHandler","serverTime","pingRTT","adjServerTime","emit","console","log","setInterval","copyCoord","gameCoord","i","syncDataHandler","tmpCoords","tmpPaddle1Y","tmpUp","tmpDown","update","scoreEventHandler","_ref","scoreInfo","score","p1Score","p2Score","finishEventHandler","uid","countdownEventHandler","on","off","requestAnimationLoop","cancelAnimationFrame","lastUpdate","requestAnimationFrame","dt","keyPressDt","getKeyPressDt","paddleUpdate","isHitY","collisionCheckY","isHitX","collisionCheckX","NONE","UP","radius","LEFT","collisionCheckP1Paddle","PADDLE","width","collisionCheckP2Paddle","push","height","RIGHT","DOWN","WALL","handleKeyPress","event","code","preventDefault","handleKeyRelease","window","addEventListener","removeEventListener","className","children","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/data/front/src/components/GamePage/PingPong.tsx"],"sourcesContent":["import \"../../styles/BackGround.css\";\nimport \"../../styles/PingPong.css\";\n\nimport React, { useEffect } from \"react\";\n\nimport * as chatAtom from \"../atom/ChatAtom\";\nimport { gameSocketAtom, gameWinnerAtom, isGameStartedAtom, isP1Atom, isPrivateAtom } from \"../atom/GameAtom\";\nimport { Game } from \"./Pong\";\n\n\nimport { useAtom, useAtomValue, useSetAtom } from \"jotai\";\nimport { useRef, useState } from \"react\";\nimport { gameResultModalAtom, isLoadingAtom } from \"../atom/ModalAtom\";\nimport {\n  ball,\n  HEIGHT,\n  p1,\n  p2,\n  paddle,\n  WIDTH,\n} from \"./GameInfo\";\n\nimport { AdminLogPrinter } from \"../../event/event.util\";\nimport { GameCoordinate, scoreInfo, Direction, Hit, GameType } from \"../../socket/game.dto\";\n\nexport default function PingPong() {\n\n  const [upArrow, setUpArrow] = useState(false);\n  const [downArrow, setDownArrow] = useState(false);\n  const [adminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const canvas = useRef<HTMLCanvasElement>(null);\n\n  const [isLoading, setIsLoading] = useAtom(isLoadingAtom);\n  const [isPrivate, setIsPrivate] = useAtom(isPrivateAtom);\n  const [isGameStart, setIsGameStart] = useAtom(isGameStartedAtom);\n  // const [isQueue, setIsQueue] = useAtom(isQueueAtom);\n  const [gameResultModal, setGameResultModal] = useAtom(gameResultModalAtom);\n\n  const gameSocket = useAtomValue(gameSocketAtom);\n\n  const isP1 = useAtomValue(isP1Atom);\n  const setGameWinner = useSetAtom(gameWinnerAtom);\n\n  // let cnt: number = 0\n  const [cnt, setCnt] = useState(0);\n  // const [serverClientTimeDiff, setServerClientTimeDiff] = useAtom(serverClientTimeDiffAtom);\n\n  let serverClientTimeDiff: number = 1000;\n\n  const coords: GameCoordinate = {\n    paddle1Y: 225,\n    ballX: 1150 / 2,\n    ballY: 300,\n    paddle2Y: 225,\n    ballSpeedX: 0,\n    ballSpeedY: 0,\n    paddleSpeed: 0.6,\n    keyPress: [0, 0, 0, 0],\n    time: Date.now(),\n  };\n\n  let lastUpdateTime: number = coords.time;\n  let requestAnimationId: number = 0;\n\n  // 1 sec delay for init value\n  let pingRTTmin: number = 2000;\n  let pingInterval: NodeJS.Timer;\n\n  const pingEvent = () => {\n    if (!isGameStart) {\n      clearInterval(pingInterval);\n    }\n    const curTime = Date.now();\n    const pingEventHandler = (serverTime: number) => {\n      const now = Date.now();\n      const pingRTT = now - curTime;\n      AdminLogPrinter(adminConsole, `pingRTT: ${pingRTT}ms`);\n      if (pingRTTmin > pingRTT) {\n        pingRTTmin = pingRTT;\n        const adjServerTime = serverTime + pingRTTmin / 2;\n        serverClientTimeDiff = now - adjServerTime\n      }\n    };\n    gameSocket.emit(\"ping\", pingEventHandler);\n  };\n\n  useEffect(() => {\n    console.log(\"pingInterval\");\n    pingInterval = setInterval(pingEvent, 1000);\n    return () => {\n      console.log(\"clear pingInterval\");\n      clearInterval(pingInterval);\n    }\n  }, []);\n\n  const copyCoord = (gameCoord: GameCoordinate) => {\n    coords.paddle1Y = gameCoord.paddle1Y;\n    coords.ballX = gameCoord.ballX;\n    coords.ballY = gameCoord.ballY;\n    coords.paddle2Y = gameCoord.paddle2Y;\n    coords.ballSpeedX = gameCoord.ballSpeedX;\n    coords.ballSpeedY = gameCoord.ballSpeedY;\n    coords.paddleSpeed = gameCoord.paddleSpeed;\n    coords.time = gameCoord.time;\n\n    for (let i = 0; i < 4; i++) {\n      coords.keyPress[i] = gameCoord.keyPress[i];\n    }\n  }\n\n  const syncDataHandler = (gameCoord: GameCoordinate) => {\n    const tmpCoords = gameCoord;\n    for (let i = 0; i < 4; i++) {\n      if (tmpCoords.keyPress[i] !== 0) {\n        tmpCoords.keyPress[i] += serverClientTimeDiff;\n      }\n    }\n    if (isP1 === false) {\n      tmpCoords.ballX = WIDTH - tmpCoords.ballX;\n      tmpCoords.ballSpeedX = -tmpCoords.ballSpeedX;\n      const tmpPaddle1Y = tmpCoords.paddle1Y;\n      tmpCoords.paddle1Y = tmpCoords.paddle2Y;\n      tmpCoords.paddle2Y = tmpPaddle1Y;\n      const tmpUp = tmpCoords.keyPress[0];\n      const tmpDown = tmpCoords.keyPress[1];\n      tmpCoords.keyPress[0] = tmpCoords.keyPress[2];\n      tmpCoords.keyPress[1] = tmpCoords.keyPress[3];\n      tmpCoords.keyPress[2] = tmpUp;\n      tmpCoords.keyPress[3] = tmpDown;\n    }\n    tmpCoords.time += serverClientTimeDiff;\n    copyCoord(tmpCoords);\n    update(Date.now(), tmpCoords.time);\n  };\n\n  const scoreEventHandler = ({ gameCoord, scoreInfo }: { gameCoord: GameCoordinate, scoreInfo: scoreInfo }) => {\n    if (isP1) {\n      p1.score = scoreInfo.p1Score;\n      p2.score = scoreInfo.p2Score;\n    } else {\n      p1.score = scoreInfo.p2Score;\n      p2.score = scoreInfo.p1Score;\n    }\n    const tmpCoords = gameCoord;\n    for (let i = 0; i < 4; i++) {\n      if (tmpCoords.keyPress[i] !== 0) {\n        tmpCoords.keyPress[i] += serverClientTimeDiff;\n      }\n    }\n    if (isP1 === false) {\n      tmpCoords.ballX = WIDTH - tmpCoords.ballX;\n      tmpCoords.ballSpeedX = -tmpCoords.ballSpeedX;\n      const tmpPaddle1Y = tmpCoords.paddle1Y;\n      tmpCoords.paddle1Y = tmpCoords.paddle2Y;\n      tmpCoords.paddle2Y = tmpPaddle1Y;\n      const tmpUp = tmpCoords.keyPress[0];\n      const tmpDown = tmpCoords.keyPress[1];\n      tmpCoords.keyPress[0] = tmpCoords.keyPress[2];\n      tmpCoords.keyPress[1] = tmpCoords.keyPress[3];\n      tmpCoords.keyPress[2] = tmpUp;\n      tmpCoords.keyPress[3] = tmpDown;\n    }\n    tmpCoords.time += serverClientTimeDiff;\n    tmpCoords.ballSpeedX = 0;\n    tmpCoords.ballSpeedY = 0;\n    tmpCoords.paddleSpeed = 0;\n    copyCoord(tmpCoords);\n    update(Date.now(), tmpCoords.time);\n  };\n\n  const finishEventHandler = (scoreInfo: scoreInfo) => {\n    console.log(\"finished!!!!!!\");\n    p1.score = scoreInfo.p1Score;\n    p2.score = scoreInfo.p2Score;\n    if (p1.score > p2.score) {\n      setGameWinner(p1.uid);\n    } else {\n      setGameWinner(p2.uid);\n    }\n    setGameResultModal(true);\n    clearInterval(pingInterval);\n  };\n\n  const countdownEventHandler = () => {\n    AdminLogPrinter(adminConsole, \"countdown!!!\");\n  }\n\n  useEffect(() => {\n    gameSocket.on(\"syncData\", syncDataHandler);\n    gameSocket.on(\"scoreInfo\", scoreEventHandler);\n    gameSocket.on(\"finished\", finishEventHandler);\n    gameSocket.on(\"countdown\", countdownEventHandler);\n    return () => {\n      gameSocket.off(\"syncData\", syncDataHandler);\n      gameSocket.off(\"scoreInfo\", scoreEventHandler);\n      gameSocket.off(\"finished\", finishEventHandler);\n      gameSocket.off(\"countdown\", countdownEventHandler);\n    };\n  }, []);\n\n  useEffect(() => {\n    console.log(`cnt: ${cnt}`);\n  }, [cnt]);\n\n  useEffect(() => {\n    setCnt(cnt + 1);\n    requestAnimationLoop(Date.now(), lastUpdateTime);\n    return () => {\n      setCnt(cnt - 1);\n      cancelAnimationFrame(requestAnimationId);\n    }\n  }, []);\n  //   console.log(\"coords updated!!!!\");\n\n  // // the connection is denied by the server in a middleware function\n  // gameSocket.on(\"connect_error\", (err) => {\n  //   if (err.message === \"unauthorized\") {\n  //     // handle each case\n  //   }\n  //   console.log(err.message); // prints the message associated with the error\n  // });\n\n  function requestAnimationLoop(curTime: number, lastUpdate: number) {\n    if (coords.keyPress !== null) {\n      update(curTime, lastUpdate);\n    }\n    requestAnimationId = requestAnimationFrame(() => requestAnimationLoop(Date.now(), lastUpdateTime));\n  }\n\n  // paddle update first, and then ball position update.\n  function update(curTime: number, lastUpdate: number) {\n    const dt = curTime - lastUpdate;\n    if (dt > 0) {\n      const keyPressDt: number[] = getKeyPressDt(curTime);\n\n      paddleUpdate(keyPressDt);\n      coords.ballX += coords.ballSpeedX * dt;\n      coords.ballY += coords.ballSpeedY * dt;\n      const isHitY = collisionCheckY();\n      const isHitX = collisionCheckX();\n      if (isHitY !== Direction.NONE) {\n        if (isHitY === Direction.UP) {\n          coords.ballY = 2 * ball.radius - coords.ballY;\n          coords.ballSpeedY = -coords.ballSpeedY;\n        } else {\n          coords.ballY = 2 * (HEIGHT - ball.radius) - coords.ballY;\n          coords.ballSpeedY = -coords.ballSpeedY;\n        }\n      }\n      if (isHitX !== Direction.NONE) {\n        if (isHitX === Direction.LEFT) {\n          if (collisionCheckP1Paddle() === Hit.PADDLE) {\n            coords.ballX = 2 * (ball.radius + paddle.width) - coords.ballX;\n            coords.ballSpeedX = -coords.ballSpeedX;\n          }\n        } else {\n          if (collisionCheckP2Paddle() === Hit.PADDLE) {\n            coords.ballX = 2 * (WIDTH - ball.radius - paddle.width) - coords.ballX;\n            coords.ballSpeedX = -coords.ballSpeedX;\n          }\n        }\n      }\n      lastUpdateTime = curTime;\n      Game(coords, canvas);\n    }\n  }\n\n  function getKeyPressDt(curTime: number): number[] {\n    const keyPressDt: number[] = [];\n    for (let i = 0; i < 4; i++) {\n      if (coords.keyPress[i] !== 0 && curTime > coords.keyPress[i]) {\n        keyPressDt.push(curTime - coords.keyPress[i]);\n        coords.keyPress[i] = curTime;\n      } else {\n        keyPressDt.push(0);\n      }\n    }\n    return keyPressDt;\n  }\n\n  function paddleUpdate(keyPressDt: number[]) {\n    if (keyPressDt[0] !== 0) {\n      if (coords.paddle1Y > 0) {\n        coords.paddle1Y -= coords.paddleSpeed * keyPressDt[0];\n      }\n      if (coords.paddle1Y < 0) {\n        coords.paddle1Y = 0;\n      }\n    }\n    if (keyPressDt[1] !== 0) {\n      if (coords.paddle1Y < HEIGHT - paddle.height) {\n        coords.paddle1Y += coords.paddleSpeed * keyPressDt[1];\n      }\n      if (coords.paddle1Y > HEIGHT - paddle.height) {\n        coords.paddle1Y = HEIGHT - paddle.height;\n      }\n    }\n    if (keyPressDt[2] !== 0) {\n      if (coords.paddle2Y > 0) {\n        coords.paddle2Y -= coords.paddleSpeed * keyPressDt[2];\n      }\n      if (coords.paddle2Y < 0) {\n        coords.paddle2Y = 0;\n      }\n    }\n    if (keyPressDt[3] !== 0) {\n      if (coords.paddle2Y < HEIGHT - paddle.height) {\n        coords.paddle2Y += coords.paddleSpeed * keyPressDt[3];\n      }\n      if (coords.paddle2Y > HEIGHT - paddle.height) {\n        coords.paddle2Y = HEIGHT - paddle.height;\n      }\n    }\n  }\n\n  function collisionCheckX() {\n    if (coords.ballX <= ball.radius + paddle.width) {\n      return Direction.LEFT;\n    } else if (coords.ballX >= WIDTH - ball.radius - paddle.width) {\n      return Direction.RIGHT;\n    }\n    return Direction.NONE;\n  }\n\n  function collisionCheckY() {\n    if (coords.ballY >= HEIGHT - ball.radius) {\n      return Direction.DOWN;\n    } else if (coords.ballY <= ball.radius) {\n      return Direction.UP;\n    }\n    return Direction.NONE;\n  }\n\n  function collisionCheckP1Paddle() {\n    if (coords.ballY >= coords.paddle1Y && coords.ballY <= coords.paddle1Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n\n  function collisionCheckP2Paddle() {\n    if (coords.ballY >= coords.paddle2Y && coords.ballY <= coords.paddle2Y + paddle.height) {\n      return Hit.PADDLE;\n    }\n    return Hit.WALL;\n  }\n\n  useEffect(() => {\n    // first draw\n    p1.score = 0;\n    p2.score = 0;\n    Game(coords, canvas);\n  }, []);\n\n  useEffect(() => {\n    function handleKeyPress(event: globalThis.KeyboardEvent) {\n      if (event.code === \"ArrowUp\") {\n        event.preventDefault();\n        if (!upArrow) {\n          setUpArrow(true);\n          gameSocket.emit(\"upPress\");\n          AdminLogPrinter(adminConsole, \"up press\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        event.preventDefault();\n        if (!downArrow) {\n          setDownArrow(true);\n          gameSocket.emit(\"downPress\");\n          AdminLogPrinter(adminConsole, \"down press\");\n        }\n      }\n    }\n\n    function handleKeyRelease(event: globalThis.KeyboardEvent) {\n      if (event.code === \"ArrowUp\") {\n        event.preventDefault();\n        if (upArrow) {\n          setUpArrow(false);\n          gameSocket.emit(\"upRelease\");\n          AdminLogPrinter(adminConsole, \"up release\");\n        }\n      } else if (event.code === \"ArrowDown\") {\n        event.preventDefault();\n        if (downArrow) {\n          setDownArrow(false);\n          gameSocket.emit(\"downRelease\");\n          AdminLogPrinter(adminConsole, \"down release\");\n        }\n      }\n    }\n    window.addEventListener(\"keydown\", handleKeyPress);\n    window.addEventListener(\"keyup\", handleKeyRelease);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n      window.removeEventListener(\"keyup\", handleKeyRelease);\n    };\n  }, [upArrow, downArrow]);\n\n  return (\n    <div className=\"QueueBackGround\">\n      <canvas ref={canvas} id=\"pong\" width={1150} height={600}></canvas>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}