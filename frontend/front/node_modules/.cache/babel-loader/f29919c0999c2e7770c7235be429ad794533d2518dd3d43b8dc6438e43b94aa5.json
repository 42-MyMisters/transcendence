{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/ChatPage/ChatArea.tsx\",\n  _s = $RefreshSig$();\nimport \"../../styles/ChatArea.css\";\nimport SpeechBubble from \"../objects/SpeechBubble\";\nimport * as chatAtom from '../atom/ChatAtom';\nimport { UserAtom } from \"../atom/UserAtom\";\nimport { useAtom } from 'jotai';\nimport { useState } from 'react';\nimport * as socket from \"../../socket/chat.socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatArea() {\n  _s();\n  var _roomList$focusRoom2, _roomList$focusRoom2$;\n  const [focusRoom] = useAtom(chatAtom.focusRoomAtom);\n  const [roomList, setRoomList] = useAtom(chatAtom.roomListAtom);\n  const [userList] = useAtom(chatAtom.userListAtom);\n  const [message, setMessage] = useState('');\n  const [userInfo] = useAtom(UserAtom);\n  const defaultText = \"채팅방을 선택해주세요. 방을 만들거나, 참여하면 채팅을 할 수 있습니다.\";\n  const handleSendMessage = () => {\n    const tempMessage = message.trim();\n    if (tempMessage !== '') {\n      var _roomList$focusRoom;\n      if (((_roomList$focusRoom = roomList[focusRoom]) === null || _roomList$focusRoom === void 0 ? void 0 : _roomList$focusRoom.roomType) === 'dm') {\n        socket.emitDM(focusRoom, tempMessage);\n      } else {\n        socket.emitMessage({\n          roomList\n        }, focusRoom, tempMessage);\n      }\n    }\n    setMessage('');\n  };\n  const handleEnterEvent = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ChatAreaBG\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatBubbleArea\",\n      children: focusRoom === -1 ? /*#__PURE__*/_jsxDEV(SpeechBubble, {\n        nickName: \"Norminette\",\n        isMe: false,\n        text: defaultText\n      }, \"-42\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this) : (_roomList$focusRoom2 = roomList[focusRoom]) === null || _roomList$focusRoom2 === void 0 ? void 0 : (_roomList$focusRoom2$ = _roomList$focusRoom2.detail) === null || _roomList$focusRoom2$ === void 0 ? void 0 : _roomList$focusRoom2$.messageList.map(key => /*#__PURE__*/_jsxDEV(SpeechBubble, {\n        // nickName={userList[key.userId]?.userDisplayName}\n        nickName: userList[key.userId].userDisplayName || key.userName,\n        text: key.message,\n        isMe: key.isMe\n      }, key.number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"ChatAreaInput\",\n      maxLength: 256,\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyDown: e => handleEnterEvent(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatDMImg\",\n      onClick: handleSendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatArea, \"/GG3ppsoheKzZbxbBdwry7zEk0w=\", false, function () {\n  return [useAtom, useAtom, useAtom, useAtom];\n});\n_c = ChatArea;\nvar _c;\n$RefreshReg$(_c, \"ChatArea\");","map":{"version":3,"names":["SpeechBubble","chatAtom","UserAtom","useAtom","useState","socket","jsxDEV","_jsxDEV","ChatArea","_s","_roomList$focusRoom2","_roomList$focusRoom2$","focusRoom","focusRoomAtom","roomList","setRoomList","roomListAtom","userList","userListAtom","message","setMessage","userInfo","defaultText","handleSendMessage","tempMessage","trim","_roomList$focusRoom","roomType","emitDM","emitMessage","handleEnterEvent","e","key","className","children","nickName","isMe","text","fileName","_jsxFileName","lineNumber","columnNumber","detail","messageList","map","userId","userDisplayName","userName","number","type","maxLength","value","onChange","target","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/data/front/src/components/ChatPage/ChatArea.tsx"],"sourcesContent":["import \"../../styles/ChatArea.css\";\nimport SpeechBubble from \"../objects/SpeechBubble\";\nimport * as chatAtom from '../atom/ChatAtom';\nimport { UserAtom } from \"../atom/UserAtom\";\nimport { useAtom } from 'jotai';\nimport { keyboardKey } from '@testing-library/user-event';\nimport { useState } from 'react';\nimport * as socket from \"../../socket/chat.socket\";\n\nexport default function ChatArea() {\n  const [focusRoom,] = useAtom(chatAtom.focusRoomAtom);\n  const [roomList, setRoomList] = useAtom(chatAtom.roomListAtom);\n  const [userList,] = useAtom(chatAtom.userListAtom);\n  const [message, setMessage] = useState('');\n  const [userInfo,] = useAtom(UserAtom);\n\n  const defaultText: string = \"채팅방을 선택해주세요. 방을 만들거나, 참여하면 채팅을 할 수 있습니다.\";\n\n  const handleSendMessage = () => {\n    const tempMessage = message.trim();\n    if (tempMessage !== '') {\n      if (roomList[focusRoom]?.roomType === 'dm') {\n        socket.emitDM(focusRoom, tempMessage);\n      } else {\n        socket.emitMessage({ roomList }, focusRoom, tempMessage);\n      }\n    }\n    setMessage('');\n  }\n\n  const handleEnterEvent = (e: keyboardKey) => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  }\n\n  return (\n    <div className=\"ChatAreaBG\">\n      <div className=\"ChatBubbleArea\">\n        {\n          focusRoom === -1\n            ?\n            <SpeechBubble key=\"-42\" nickName=\"Norminette\" isMe={false}\n              text={defaultText}\n            />\n            :\n            roomList[focusRoom]?.detail?.messageList!.map((key) => (\n              <SpeechBubble\n                key={key.number}\n                // nickName={userList[key.userId]?.userDisplayName}\n                nickName={userList[key.userId].userDisplayName || key.userName}\n                text={key.message}\n                isMe={key.isMe}\n              />\n            ))\n        }\n      </div>\n      <input type=\"text\" className=\"ChatAreaInput\" maxLength={256} value={message} onChange={(e) => setMessage(e.target.value)} onKeyDown={(e) => handleEnterEvent(e)}></input>\n      <div className=\"ChatDMImg\" onClick={handleSendMessage} />\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}