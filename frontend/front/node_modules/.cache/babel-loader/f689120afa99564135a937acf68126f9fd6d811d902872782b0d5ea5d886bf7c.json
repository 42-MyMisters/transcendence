{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/LoginPage/TwoFactorAuth.tsx\",\n  _s2 = $RefreshSig$();\nimport { useAtomValue, useSetAtom } from \"jotai\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport * as chatAtom from \"../../components/atom/ChatAtom\";\nimport { hasLoginAtom } from \"../../components/atom/ChatAtom\";\nimport { isFirstLoginAtom } from \"../../components/atom/LoginAtom\";\nimport * as api from \"../../event/api.request\";\nimport { AdminLogPrinter } from '../../event/event.util';\nimport \"../../styles/LoginModals.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TFAModal() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [checkError, setCheckError] = useState(false);\n  const [authCode, setAuthCode] = useState(\"\");\n  const adminConsole = useAtomValue(chatAtom.adminConsoleAtom);\n  const setIsFirstLogin = useSetAtom(isFirstLoginAtom);\n  const setHasLogin = useSetAtom(hasLoginAtom);\n  const navigate = useNavigate();\n  const useAutoFocus = () => {\n    _s();\n    const inputRef = useRef(null);\n    useEffect(() => {\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    }, [checkError]);\n    return inputRef;\n  };\n  _s(useAutoFocus, \"cBQ6FQ+sf5H+lvNONLKqtm4aeQ8=\");\n  const AuthCodeRef = useAutoFocus();\n  const handleAuthenticate = async () => {\n    if (!Number(authCode) || !Number.isInteger(Number(authCode)) || Number(authCode) < 0) {\n      alert(\"Please enter digit only\");\n      return false;\n    } else if (authCode.length !== 6) {\n      alert(\"Please enter 6 digits\");\n      return false;\n    }\n    const format = JSON.stringify({\n      twoFactorCode: authCode\n    });\n    AdminLogPrinter(adminConsole, \"TFA Code: \", format);\n    const loginTFARes = await api.loginWithTFA(adminConsole, format);\n    if (loginTFARes !== 302) {\n      alert(\"please enter right code\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n  const checkValification = async () => {\n    const isValified = await handleAuthenticate();\n    if (!isValified) {\n      setAuthCode(\"\");\n      setCheckError(prev => !prev);\n      return;\n    }\n    setIsFirstLogin(false);\n    setHasLogin(true);\n    navigate(\"/chat\");\n  };\n  const handleEnterEvent = e => {\n    if (e.key === 'Enter') {\n      checkValification();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LoginModalsBG\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LoginTxt\",\n      children: \"2FA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: AuthCodeRef,\n      className: \"LoginModalInput\",\n      placeholder: \"Six Number\",\n      minLength: 6,\n      maxLength: 6,\n      value: authCode,\n      onChange: e => {\n        setAuthCode(e.target.value);\n      },\n      onKeyDown: e => handleEnterEvent(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"LoginBtn\",\n      onClick: checkValification,\n      children: \"verify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s2(TFAModal, \"/QMuB0XyB46gcbIK1Ejbvz7qdL0=\", true, function () {\n  return [useAtomValue, useSetAtom, useSetAtom, useNavigate];\n});\n_c = TFAModal;\nvar _c;\n$RefreshReg$(_c, \"TFAModal\");","map":{"version":3,"names":["useAtomValue","useSetAtom","useEffect","useRef","useState","useNavigate","chatAtom","hasLoginAtom","isFirstLoginAtom","api","AdminLogPrinter","jsxDEV","_jsxDEV","TFAModal","_s2","_s","$RefreshSig$","checkError","setCheckError","authCode","setAuthCode","adminConsole","adminConsoleAtom","setIsFirstLogin","setHasLogin","navigate","useAutoFocus","inputRef","current","focus","AuthCodeRef","handleAuthenticate","Number","isInteger","alert","length","format","JSON","stringify","twoFactorCode","loginTFARes","loginWithTFA","checkValification","isValified","prev","handleEnterEvent","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","placeholder","minLength","maxLength","value","onChange","target","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/data/front/src/components/LoginPage/TwoFactorAuth.tsx"],"sourcesContent":["import { keyboardKey } from '@testing-library/user-event';\nimport { useAtomValue, useSetAtom } from \"jotai\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport * as chatAtom from \"../../components/atom/ChatAtom\";\nimport { hasLoginAtom } from \"../../components/atom/ChatAtom\";\nimport { isFirstLoginAtom, } from \"../../components/atom/LoginAtom\";\nimport * as api from \"../../event/api.request\";\nimport { AdminLogPrinter } from '../../event/event.util';\nimport \"../../styles/LoginModals.css\";\n\nexport default function TFAModal() {\n  const [checkError, setCheckError] = useState(false);\n  const [authCode, setAuthCode] = useState(\"\");\n  const adminConsole = useAtomValue(chatAtom.adminConsoleAtom);\n  const setIsFirstLogin = useSetAtom(isFirstLoginAtom);\n  const setHasLogin = useSetAtom(hasLoginAtom);\n  const navigate = useNavigate();\n\n  const useAutoFocus = () => {\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    }, [checkError]);\n\n    return inputRef;\n  };\n\n  const AuthCodeRef = useAutoFocus();\n\n  const handleAuthenticate = async (): Promise<boolean> => {\n    if (!Number(authCode) || !Number.isInteger(Number(authCode)) || Number(authCode) < 0) {\n      alert(\"Please enter digit only\");\n      return false;\n    } else if (authCode.length !== 6) {\n      alert(\"Please enter 6 digits\");\n      return false;\n    }\n\n    const format = JSON.stringify({ twoFactorCode: authCode });\n    AdminLogPrinter(adminConsole, \"TFA Code: \", format);\n    const loginTFARes = await api.loginWithTFA(adminConsole, format);\n    if (loginTFARes !== 302) {\n      alert(\"please enter right code\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const checkValification = async () => {\n    const isValified = await handleAuthenticate();\n    if (!isValified) {\n      setAuthCode(\"\");\n      setCheckError((prev) => (!prev));\n      return;\n    }\n    setIsFirstLogin(false);\n    setHasLogin(true);\n    navigate(\"/chat\");\n  };\n\n\n  const handleEnterEvent = (e: keyboardKey) => {\n    if (e.key === 'Enter') {\n      checkValification();\n    }\n  }\n\n  return (\n    <div className=\"LoginModalsBG\">\n      <div className=\"LoginTxt\">2FA</div>\n      <input\n        type=\"text\"\n        ref={AuthCodeRef}\n        className=\"LoginModalInput\"\n        placeholder=\"Six Number\"\n        minLength={6}\n        maxLength={6}\n        value={authCode}\n        onChange={(e) => {\n          setAuthCode(e.target.value);\n        }}\n        onKeyDown={(e) => handleEnterEvent(e)}\n      />\n      <button className=\"LoginBtn\" onClick={checkValification}>verify</button>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}