{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/ChatPage/PasswordModal.tsx\",\n  _s = $RefreshSig$();\nimport { useAtom } from \"jotai\";\nimport { passwordInputModalAtom } from \"../../components/atom/ModalAtom\";\nimport { PressKey } from \"../../event/pressKey\";\nimport { useState } from 'react';\nimport \"../../styles/PasswordModal.css\";\nimport * as socket from \"../../socket/chat.socket\";\nimport * as chatAtom from \"../atom/ChatAtom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PasswordModal() {\n  _s();\n  const [pwInputModal, setPwInputModal] = useAtom(passwordInputModalAtom);\n  const [password, setPassword] = useState('');\n  const [focusRoom, setFocusRoom] = useAtom(chatAtom.focusRoomAtom);\n  const [roomList, setRoomList] = useAtom(chatAtom.roomListAtom);\n  const [clickRoom] = useAtom(chatAtom.clickRoomAtom);\n  PressKey([\"Escape\"], () => {\n    setPwInputModal(false);\n    setPassword('');\n  });\n  const handleJoinRoom = () => {\n    setPwInputModal(false);\n    socket.emitRoomJoin({\n      roomList,\n      setRoomList,\n      focusRoom,\n      setFocusRoom\n    }, clickRoom, password);\n    setPassword('');\n  };\n  const handleEnterEvent = e => {\n    if (e.key === 'Enter') {\n      handleJoinRoom();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PasswordModalBG\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PasswordModal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PasswordForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"Password\",\n          type: \"password\",\n          maxLength: 20,\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          onKeyDown: e => handleEnterEvent(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Password\",\n        onClick: handleJoinRoom,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"PasswordCancel\",\n        onClick: () => setPwInputModal(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(PasswordModal, \"HQ2TE168wL5AJe39MPHwAg+1kXE=\", false, function () {\n  return [useAtom, useAtom, useAtom, useAtom];\n});\n_c = PasswordModal;\nvar _c;\n$RefreshReg$(_c, \"PasswordModal\");","map":{"version":3,"names":["useAtom","passwordInputModalAtom","PressKey","useState","socket","chatAtom","jsxDEV","_jsxDEV","Fragment","_Fragment","PasswordModal","_s","pwInputModal","setPwInputModal","password","setPassword","focusRoom","setFocusRoom","focusRoomAtom","roomList","setRoomList","roomListAtom","clickRoom","clickRoomAtom","handleJoinRoom","emitRoomJoin","handleEnterEvent","e","key","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","maxLength","value","onChange","target","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/data/front/src/components/ChatPage/PasswordModal.tsx"],"sourcesContent":["import { useAtom } from \"jotai\";\nimport { passwordInputModalAtom } from \"../../components/atom/ModalAtom\";\nimport { PressKey } from \"../../event/pressKey\";\nimport { keyboardKey } from '@testing-library/user-event';\nimport { useState } from 'react';\n\nimport \"../../styles/PasswordModal.css\";\n\nimport * as socket from \"../../socket/chat.socket\";\nimport * as chatAtom from \"../atom/ChatAtom\";\n\nexport default function PasswordModal() {\n  const [pwInputModal, setPwInputModal] = useAtom(passwordInputModalAtom);\n  const [password, setPassword] = useState('');\n  const [focusRoom, setFocusRoom] = useAtom(chatAtom.focusRoomAtom);\n  const [roomList, setRoomList] = useAtom(chatAtom.roomListAtom);\n  const [clickRoom,] = useAtom(chatAtom.clickRoomAtom);\n\n  PressKey([\"Escape\"], () => {\n    setPwInputModal(false);\n    setPassword('');\n  });\n\n  const handleJoinRoom = () => {\n    setPwInputModal(false);\n    socket.emitRoomJoin({ roomList, setRoomList, focusRoom, setFocusRoom }, clickRoom, password);\n    setPassword('');\n  }\n\n  const handleEnterEvent = (e: keyboardKey) => {\n    if (e.key === 'Enter') {\n      handleJoinRoom();\n    }\n  }\n\n  return (\n    <>\n      <div className=\"PasswordModalBG\"></div>\n      <div className=\"PasswordModal\">\n        <div className=\"PasswordForm\">\n          <label htmlFor=\"Password\">Password</label>\n          <input id=\"Password\" type=\"password\" maxLength={20} value={password} onChange={(e) => setPassword(e.target.value)} onKeyDown={(e) => handleEnterEvent(e)}></input>\n        </div>\n        <button className=\"Password\" onClick={handleJoinRoom}>Join</button>\n        <button className=\"PasswordCancel\" onClick={() => setPwInputModal(false)}>\n          Cancel\n        </button>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}