{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/ChatPage/ChatRoomList.tsx\",\n  _s = $RefreshSig$();\nimport { useAtom, useAtomValue, useSetAtom } from \"jotai\";\nimport { passwordInputModalAtom, roomModalAtom } from \"../../components/atom/ModalAtom\";\nimport \"../../styles/ChatList.css\";\nimport ChatRoom from \"../objects/ChatRoom\";\nimport * as socket from \"../../socket/chat.socket\";\nimport * as chatAtom from \"../atom/ChatAtom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatRoomList() {\n  _s();\n  const setRoomModal = useSetAtom(roomModalAtom);\n  const setPasswordModal = useSetAtom(passwordInputModalAtom);\n  const [focusRoom, setFocusRoom] = useAtom(chatAtom.focusRoomAtom);\n  const [roomList, setRoomList] = useAtom(chatAtom.roomListAtom);\n  const setClickRoom = useSetAtom(chatAtom.clickRoomAtom);\n  const setRoomSetting = useSetAtom(chatAtom.roomSettingAtom);\n  const adminConsole = useAtomValue(chatAtom.adminConsoleAtom);\n  const roomClickHandler = roomId => {\n    if (roomList[roomId].isJoined) {\n      setFocusRoom(roomId);\n    } else if (roomList[roomId].roomType === \"protected\") {\n      setClickRoom(roomId);\n      setPasswordModal(true);\n    } else {\n      socket.emitRoomJoin({\n        adminConsole,\n        roomList,\n        setRoomList,\n        focusRoom,\n        setFocusRoom\n      }, roomId);\n    }\n  };\n  const roomPlusBtnHandler = () => {\n    setRoomSetting(false);\n    setRoomModal(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ChatListBG ChatRoomList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatListTxt\",\n      children: \"Chatting List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatRoomListPlusBtn\",\n      onClick: roomPlusBtnHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatRooms\",\n      children: [Object.entries(roomList).map(key => {\n        var _roomList$Number, _roomList$Number2, _roomList$Number3;\n        return roomList[Number(key[0])].roomType !== \"dm\" && roomList[Number(key[0])].isJoined === true ? /*#__PURE__*/_jsxDEV(ChatRoom, {\n          roomId: Number(key[0]),\n          roomName: (_roomList$Number = roomList[Number(key[0])]) === null || _roomList$Number === void 0 ? void 0 : _roomList$Number.roomName,\n          type: (_roomList$Number2 = roomList[Number(key[0])]) === null || _roomList$Number2 === void 0 ? void 0 : _roomList$Number2.roomType,\n          isJoin: (_roomList$Number3 = roomList[Number(key[0])]) === null || _roomList$Number3 === void 0 ? void 0 : _roomList$Number3.isJoined,\n          callBack: roomClickHandler\n        }, key[0], false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this) : '';\n      }), Object.entries(roomList).map(key => {\n        var _roomList$Number4, _roomList$Number5, _roomList$Number6;\n        return roomList[Number(key[0])].roomType !== \"dm\" && roomList[Number(key[0])].isJoined === false ? /*#__PURE__*/_jsxDEV(ChatRoom, {\n          roomId: Number(key[0]),\n          roomName: (_roomList$Number4 = roomList[Number(key[0])]) === null || _roomList$Number4 === void 0 ? void 0 : _roomList$Number4.roomName,\n          type: (_roomList$Number5 = roomList[Number(key[0])]) === null || _roomList$Number5 === void 0 ? void 0 : _roomList$Number5.roomType,\n          isJoin: (_roomList$Number6 = roomList[Number(key[0])]) === null || _roomList$Number6 === void 0 ? void 0 : _roomList$Number6.isJoined,\n          callBack: roomClickHandler\n        }, key[0], false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this) : '';\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatRoomList, \"lpt2o9yROs1NxELB1ILkenXyqak=\", false, function () {\n  return [useSetAtom, useSetAtom, useAtom, useAtom, useSetAtom, useSetAtom, useAtomValue];\n});\n_c = ChatRoomList;\nvar _c;\n$RefreshReg$(_c, \"ChatRoomList\");","map":{"version":3,"names":["useAtom","useAtomValue","useSetAtom","passwordInputModalAtom","roomModalAtom","ChatRoom","socket","chatAtom","jsxDEV","_jsxDEV","ChatRoomList","_s","setRoomModal","setPasswordModal","focusRoom","setFocusRoom","focusRoomAtom","roomList","setRoomList","roomListAtom","setClickRoom","clickRoomAtom","setRoomSetting","roomSettingAtom","adminConsole","adminConsoleAtom","roomClickHandler","roomId","isJoined","roomType","emitRoomJoin","roomPlusBtnHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","entries","map","key","_roomList$Number","_roomList$Number2","_roomList$Number3","Number","roomName","type","isJoin","callBack","_roomList$Number4","_roomList$Number5","_roomList$Number6","_c","$RefreshReg$"],"sources":["/data/front/src/components/ChatPage/ChatRoomList.tsx"],"sourcesContent":["import { useAtom, useAtomValue, useSetAtom } from \"jotai\";\nimport { passwordInputModalAtom, roomModalAtom } from \"../../components/atom/ModalAtom\";\n\nimport \"../../styles/ChatList.css\";\nimport ChatRoom from \"../objects/ChatRoom\";\n\nimport * as socket from \"../../socket/chat.socket\";\nimport * as chatAtom from \"../atom/ChatAtom\";\n\nexport default function ChatRoomList() {\n  const setRoomModal = useSetAtom(roomModalAtom);\n  const setPasswordModal = useSetAtom(passwordInputModalAtom);\n  const [focusRoom, setFocusRoom] = useAtom(chatAtom.focusRoomAtom);\n  const [roomList, setRoomList] = useAtom(chatAtom.roomListAtom);\n  const setClickRoom = useSetAtom(chatAtom.clickRoomAtom);\n  const setRoomSetting = useSetAtom(chatAtom.roomSettingAtom);\n  const adminConsole = useAtomValue(chatAtom.adminConsoleAtom);\n\n  const roomClickHandler = (roomId: number) => {\n\n    if (roomList[roomId].isJoined) {\n      setFocusRoom(roomId);\n    } else if (roomList[roomId].roomType === \"protected\") {\n      setClickRoom(roomId);\n      setPasswordModal(true);\n    } else {\n      socket.emitRoomJoin({ adminConsole, roomList, setRoomList, focusRoom, setFocusRoom }, roomId)\n    }\n  };\n\n  const roomPlusBtnHandler = () => {\n    setRoomSetting(false);\n    setRoomModal(true)\n  };\n\n  return (\n    <div className=\"ChatListBG ChatRoomList\">\n      <div className=\"ChatListTxt\">Chatting List</div>\n      <div className=\"ChatRoomListPlusBtn\" onClick={roomPlusBtnHandler} />\n      <div className=\"ChatRooms\">\n        {\n          Object.entries(roomList).map((key) => (\n            roomList[Number(key[0])].roomType !== \"dm\" && roomList[Number(key[0])].isJoined === true\n              ? <ChatRoom\n                key={key[0]}\n                roomId={Number(key[0])}\n                roomName={roomList[Number(key[0])]?.roomName}\n                type={roomList[Number(key[0])]?.roomType}\n                isJoin={roomList[Number(key[0])]?.isJoined}\n                callBack={roomClickHandler}\n              />\n              : ''\n          ))\n        }\n        {\n          Object.entries(roomList).map((key) => (\n            roomList[Number(key[0])].roomType !== \"dm\" && roomList[Number(key[0])].isJoined === false\n              ? <ChatRoom\n                key={key[0]}\n                roomId={Number(key[0])}\n                roomName={roomList[Number(key[0])]?.roomName}\n                type={roomList[Number(key[0])]?.roomType}\n                isJoin={roomList[Number(key[0])]?.isJoined}\n                callBack={roomClickHandler}\n              />\n              : ''\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}