{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/ProfilePage/ProfileOptions.tsx\",\n  _s = $RefreshSig$();\nimport { useAtom, useAtomValue, useSetAtom } from \"jotai\";\nimport { changeImageModalAtom, changeNameModalAtom } from \"../atom/ModalAtom\";\nimport { isMyProfileAtom, TFAAtom } from \"../atom/UserAtom\";\nimport * as chatAtom from \"../../components/atom/ChatAtom\";\nimport * as api from '../../event/api.request';\nimport { useNavigate } from 'react-router-dom';\nimport { refreshTokenAtom } from \"../../components/atom/LoginAtom\";\nimport { TFAModalAtom, TFAQRURL } from \"../../components/atom/ModalAtom\";\nimport { AdminLogPrinter } from '../../event/event.util';\nimport \"../../styles/ProfilePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileOptions() {\n  _s();\n  const setchangeNameModal = useSetAtom(changeNameModalAtom);\n  const setChangeImageModal = useSetAtom(changeImageModalAtom);\n  const isMyProfile = useAtomValue(isMyProfileAtom);\n  const adminConsole = useAtomValue(chatAtom.adminConsoleAtom);\n  const [tfa, setTfa] = useAtom(TFAAtom);\n  const setRefreshToken = useSetAtom(refreshTokenAtom);\n  const navigate = useNavigate();\n  const setQRcodeURL = useSetAtom(TFAQRURL);\n  const setTFAModal = useSetAtom(TFAModalAtom);\n  const logOutHandler = () => {\n    api.LogOut(adminConsole, setRefreshToken, navigate, \"/\");\n  };\n  const handleFTARequest = async () => {\n    const FTARes = await api.toggleTFA(adminConsole, setQRcodeURL);\n    if (FTARes === 401) {\n      const refreshResponse = await api.RefreshToken(adminConsole);\n      if (refreshResponse !== 201) {\n        logOutHandler();\n      } else {\n        const FTARes = await api.toggleTFA(adminConsole, setQRcodeURL);\n        if (FTARes === 401) {\n          logOutHandler();\n        }\n      }\n    }\n  };\n  const handleTFA = async () => {\n    if (tfa) {\n      AdminLogPrinter(adminConsole, \"\\n2FA off\");\n      await handleFTARequest();\n    } else {\n      AdminLogPrinter(adminConsole, \"\\n2FA on\");\n      await handleFTARequest();\n      setTFAModal(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isMyProfile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ProfileOptions\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setchangeNameModal(true),\n        children: \"change Nickname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setChangeImageModal(true),\n        children: \"change Profile Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"2FA\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"checkbox_TFA\",\n          name: \"TFA\",\n          value: \"false\",\n          onChange: e => {\n            setTfa(e.target.checked);\n            handleTFA();\n          },\n          checked: tfa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"checkbox_TFA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfileOptions, \"Kdqbqp2epgV25fdlZFXyHwhY2xQ=\", false, function () {\n  return [useSetAtom, useSetAtom, useAtomValue, useAtomValue, useAtom, useSetAtom, useNavigate, useSetAtom, useSetAtom];\n});\n_c = ProfileOptions;\nvar _c;\n$RefreshReg$(_c, \"ProfileOptions\");","map":{"version":3,"names":["useAtom","useAtomValue","useSetAtom","changeImageModalAtom","changeNameModalAtom","isMyProfileAtom","TFAAtom","chatAtom","api","useNavigate","refreshTokenAtom","TFAModalAtom","TFAQRURL","AdminLogPrinter","jsxDEV","_jsxDEV","ProfileOptions","_s","setchangeNameModal","setChangeImageModal","isMyProfile","adminConsole","adminConsoleAtom","tfa","setTfa","setRefreshToken","navigate","setQRcodeURL","setTFAModal","logOutHandler","LogOut","handleFTARequest","FTARes","toggleTFA","refreshResponse","RefreshToken","handleTFA","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","value","onChange","e","target","checked","htmlFor","_c","$RefreshReg$"],"sources":["/data/front/src/components/ProfilePage/ProfileOptions.tsx"],"sourcesContent":["import { useAtom, useAtomValue, useSetAtom } from \"jotai\";\nimport { changeImageModalAtom, changeNameModalAtom } from \"../atom/ModalAtom\";\nimport { isMyProfileAtom, TFAAtom } from \"../atom/UserAtom\";\n\nimport * as chatAtom from \"../../components/atom/ChatAtom\";\nimport * as api from '../../event/api.request';\n\nimport { useNavigate } from 'react-router-dom';\nimport { refreshTokenAtom } from \"../../components/atom/LoginAtom\";\nimport { TFAModalAtom, TFAQRURL } from \"../../components/atom/ModalAtom\";\nimport { AdminLogPrinter } from '../../event/event.util';\nimport \"../../styles/ProfilePage.css\";\n\nexport default function ProfileOptions() {\n  const setchangeNameModal = useSetAtom(changeNameModalAtom);\n  const setChangeImageModal = useSetAtom(changeImageModalAtom);\n  const isMyProfile = useAtomValue(isMyProfileAtom);\n  const adminConsole = useAtomValue(chatAtom.adminConsoleAtom);\n  const [tfa, setTfa] = useAtom(TFAAtom);\n  const setRefreshToken = useSetAtom(refreshTokenAtom);\n  const navigate = useNavigate();\n  const setQRcodeURL = useSetAtom(TFAQRURL);\n  const setTFAModal = useSetAtom(TFAModalAtom);\n\n  const logOutHandler = () => {\n    api.LogOut(adminConsole, setRefreshToken, navigate, \"/\");\n  };\n\n  const handleFTARequest = async () => {\n    const FTARes = await api.toggleTFA(adminConsole, setQRcodeURL);\n    if (FTARes === 401) {\n      const refreshResponse = await api.RefreshToken(adminConsole);\n      if (refreshResponse !== 201) {\n        logOutHandler();\n      } else {\n        const FTARes = await api.toggleTFA(adminConsole, setQRcodeURL);\n        if (FTARes === 401) {\n          logOutHandler();\n        }\n      }\n    }\n  };\n\n  const handleTFA = async () => {\n    if (tfa) {\n      AdminLogPrinter(adminConsole, \"\\n2FA off\");\n      await handleFTARequest();\n    } else {\n      AdminLogPrinter(adminConsole, \"\\n2FA on\");\n      await handleFTARequest();\n      setTFAModal(true);\n    }\n  };\n\n  return (\n    <div>\n      {\n        isMyProfile\n          ? <div className=\"ProfileOptions\">\n            <div onClick={() => setchangeNameModal(true)}>change Nickname</div>\n            <div onClick={() => setChangeImageModal(true)}>change Profile Image</div>\n            <div>\n              2FA\n              <input type=\"checkbox\" id=\"checkbox_TFA\" name=\"TFA\" value=\"false\"\n                onChange={(e) => {\n                  setTfa(e.target.checked);\n                  handleTFA();\n                }\n                }\n                checked={tfa}\n              />\n              <label htmlFor=\"checkbox_TFA\"></label>\n            </div>\n          </div>\n          : ''\n      }\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}