{"ast":null,"code":"var _jsxFileName = \"/data/front/src/pages/LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport jwt_decode from \"jwt-decode\";\nimport { useAtom } from \"jotai\";\nimport { useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport BackGround from \"../components/BackGround\";\nimport SignInModal from \"../components/LoginPage/SignIn\";\nimport TFAModal from \"../components/LoginPage/TwoFactorAuth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TFAEnabledAtom, cookieAtom, isFirstLoginAtom, refreshTokenAtom, loginModalJudgeAtom } from \"../components/atom/LoginAtom\";\nimport InitialSettingModal from \"../components/LoginPage/InitialSetting\";\nimport * as chatAtom from \"../components/atom/ChatAtom\";\nimport { hasLoginAtom } from \"../components/atom/ChatAtom\";\nimport { UserAtom } from \"../components/atom/UserAtom\";\nimport * as api from \"../event/api.request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  /* localstorage에 없는데 cookie에 있으면 로그인이 된거다 */\n  /* localstorage에 있으면 로그인 된거다 */\n  const [refreshToken, setRefreshToken] = useAtom(refreshTokenAtom);\n  const [cookie, setCookie] = useAtom(cookieAtom);\n  const [TFAEnabled, setTFAEnabled] = useAtom(TFAEnabledAtom);\n  const [hasLogin, setHasLogin] = useAtom(hasLoginAtom);\n  const [isFirstLogin, setIsFirstLogin] = useAtom(isFirstLoginAtom);\n  const [userInfo, setUserInfo] = useAtom(UserAtom);\n  const [loginModalJudge, setLoginModalJudge] = useAtom(loginModalJudgeAtom);\n  const [adminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const refreshTokenKey = \"refreshToken\";\n  const [cookies, setCookies, removeCookie] = useCookies([refreshTokenKey]);\n  const navigate = useNavigate();\n  const logOutHandler = () => {\n    api.LogOut(adminConsole, setRefreshToken, navigate, \"/\");\n  };\n  const initialSettingHandler = async () => {\n    const getMeResponse = await api.FirstTimeGetMyInfo(adminConsole, hasLogin, setUserInfo, navigate, setHasLogin, setIsFirstLogin);\n    if (getMeResponse === 401) {\n      const refreshResponse = await api.RefreshToken(adminConsole);\n      if (refreshResponse !== 201) {\n        logOutHandler();\n      } else {\n        const getMeResponse = await api.FirstTimeGetMyInfo(adminConsole, hasLogin, setUserInfo, navigate, setHasLogin, setIsFirstLogin);\n        if (getMeResponse === 401) {\n          logOutHandler();\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    if (cookies[refreshTokenKey] !== undefined) {\n      setCookie(true);\n      localStorage.setItem(\"refreshToken\", cookies[refreshTokenKey]);\n      removeCookie(refreshTokenKey);\n      setCookie(false);\n    }\n    const storedRefreshToken = localStorage.getItem(\"refreshToken\");\n    if (storedRefreshToken !== null) {\n      setRefreshToken(true);\n      const decoded = jwt_decode(JSON.stringify(storedRefreshToken));\n      if (decoded.twoFactorEnabled) {\n        if (!decoded.twoFactorAuthenticated) {\n          setTFAEnabled(true);\n        } else {\n          setHasLogin(true);\n          navigate(\"/chat\");\n        }\n      } else {\n        initialSettingHandler();\n      }\n    } else {\n      setRefreshToken(false);\n      setLoginModalJudge(true);\n    }\n  }, [cookies]);\n  return /*#__PURE__*/_jsxDEV(BackGround, {\n    children: refreshToken ? isFirstLogin ? /*#__PURE__*/_jsxDEV(InitialSettingModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }, this) : TFAEnabled ? /*#__PURE__*/_jsxDEV(TFAModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this) : '' : loginModalJudge ? /*#__PURE__*/_jsxDEV(SignInModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }, this) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"yShmJAq69sgpTkgI+FqjuAvvP7o=\", false, function () {\n  return [useAtom, useAtom, useAtom, useAtom, useAtom, useAtom, useAtom, useAtom, useCookies, useNavigate];\n});\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["jwt_decode","useAtom","useEffect","useCookies","BackGround","SignInModal","TFAModal","useNavigate","TFAEnabledAtom","cookieAtom","isFirstLoginAtom","refreshTokenAtom","loginModalJudgeAtom","InitialSettingModal","chatAtom","hasLoginAtom","UserAtom","api","jsxDEV","_jsxDEV","LoginPage","_s","refreshToken","setRefreshToken","cookie","setCookie","TFAEnabled","setTFAEnabled","hasLogin","setHasLogin","isFirstLogin","setIsFirstLogin","userInfo","setUserInfo","loginModalJudge","setLoginModalJudge","adminConsole","adminConsoleAtom","refreshTokenKey","cookies","setCookies","removeCookie","navigate","logOutHandler","LogOut","initialSettingHandler","getMeResponse","FirstTimeGetMyInfo","refreshResponse","RefreshToken","undefined","localStorage","setItem","storedRefreshToken","getItem","decoded","JSON","stringify","twoFactorEnabled","twoFactorAuthenticated","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/data/front/src/pages/LoginPage.tsx"],"sourcesContent":["import jwt_decode from \"jwt-decode\";\n\nimport { useAtom } from \"jotai\";\nimport { useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nimport BackGround from \"../components/BackGround\";\nimport SignInModal from \"../components/LoginPage/SignIn\";\nimport TFAModal from \"../components/LoginPage/TwoFactorAuth\";\n\nimport { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { TFAEnabledAtom, cookieAtom, isFirstLoginAtom, refreshTokenAtom, loginModalJudgeAtom } from \"../components/atom/LoginAtom\";\n\nimport InitialSettingModal from \"../components/LoginPage/InitialSetting\";\nimport * as chatAtom from \"../components/atom/ChatAtom\";\nimport { hasLoginAtom } from \"../components/atom/ChatAtom\";\n\nimport { UserAtom } from \"../components/atom/UserAtom\";\nimport * as api from \"../event/api.request\";\n\nexport default function LoginPage() {\n  /* localstorage에 없는데 cookie에 있으면 로그인이 된거다 */\n  /* localstorage에 있으면 로그인 된거다 */\n  const [refreshToken, setRefreshToken] = useAtom(refreshTokenAtom);\n  const [cookie, setCookie] = useAtom(cookieAtom);\n  const [TFAEnabled, setTFAEnabled] = useAtom(TFAEnabledAtom);\n  const [hasLogin, setHasLogin] = useAtom(hasLoginAtom);\n  const [isFirstLogin, setIsFirstLogin] = useAtom(isFirstLoginAtom);\n  const [userInfo, setUserInfo] = useAtom(UserAtom);\n  const [loginModalJudge, setLoginModalJudge] = useAtom(loginModalJudgeAtom);\n\n  const [adminConsole] = useAtom(chatAtom.adminConsoleAtom);\n\n  const refreshTokenKey = \"refreshToken\";\n  const [cookies, setCookies, removeCookie] = useCookies([refreshTokenKey]);\n  const navigate = useNavigate();\n\n  const logOutHandler = () => {\n    api.LogOut(adminConsole, setRefreshToken, navigate, \"/\");\n  };\n\n  const initialSettingHandler = async () => {\n    const getMeResponse = await api.FirstTimeGetMyInfo(adminConsole, hasLogin, setUserInfo, navigate, setHasLogin, setIsFirstLogin);\n    if (getMeResponse === 401) {\n      const refreshResponse = await api.RefreshToken(adminConsole);\n      if (refreshResponse !== 201) {\n        logOutHandler();\n      } else {\n        const getMeResponse = await api.FirstTimeGetMyInfo(adminConsole, hasLogin, setUserInfo, navigate, setHasLogin, setIsFirstLogin);\n        if (getMeResponse === 401) {\n          logOutHandler();\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (cookies[refreshTokenKey] !== undefined) {\n      setCookie(true);\n      localStorage.setItem(\"refreshToken\", cookies[refreshTokenKey]);\n      removeCookie(refreshTokenKey);\n      setCookie(false);\n    }\n\n    const storedRefreshToken = localStorage.getItem(\"refreshToken\");\n    if (storedRefreshToken !== null) {\n      setRefreshToken(true);\n\n      const decoded: any = jwt_decode(JSON.stringify(storedRefreshToken));\n      if (decoded.twoFactorEnabled) {\n        if (!decoded.twoFactorAuthenticated) {\n          setTFAEnabled(true);\n        } else {\n          setHasLogin(true);\n          navigate(\"/chat\");\n        }\n      } else {\n        initialSettingHandler();\n      }\n    } else {\n      setRefreshToken(false);\n      setLoginModalJudge(true);\n    }\n  }, [cookies]);\n\n  return (\n    <BackGround>\n      {/* refresh Token이 있으면 SigninModal이 꺼짐 */}\n      {/* refresh Token이 없으면 SigninModal이 켜짐 */}\n      {/* {!refreshToken && <SignInModal />} */}\n      {/* refresh Token이 있고 cookie가 없으면 TFAModal실행 */}\n      {/* {refreshToken && !cookie && TFAEnabled && <TFAModal />} */}\n      {/* {refreshToken && isFirstLogin ? <InitialSettingModal /> : null} */}\n      {\n        refreshToken\n          ? isFirstLogin\n            ? <InitialSettingModal />\n            : TFAEnabled\n              ? < TFAModal />\n              : ''\n          : loginModalJudge\n            ? <SignInModal />\n            : ''\n      }\n    </BackGround>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,YAAY;AAEnC,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,UAAU,QAAQ,cAAc;AAEzC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,WAAW,MAAM,gCAAgC;AACxD,OAAOC,QAAQ,MAAM,uCAAuC;AAG5D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,EAAEC,UAAU,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,mBAAmB,QAAQ,8BAA8B;AAElI,OAAOC,mBAAmB,MAAM,wCAAwC;AACxE,OAAO,KAAKC,QAAQ,MAAM,6BAA6B;AACvD,SAASC,YAAY,QAAQ,6BAA6B;AAE1D,SAASC,QAAQ,QAAQ,6BAA6B;AACtD,OAAO,KAAKC,GAAG,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC;EACA;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGtB,OAAO,CAACU,gBAAgB,CAAC;EACjE,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGxB,OAAO,CAACQ,UAAU,CAAC;EAC/C,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,OAAO,CAACO,cAAc,CAAC;EAC3D,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,OAAO,CAACc,YAAY,CAAC;EACrD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAG9B,OAAO,CAACS,gBAAgB,CAAC;EACjE,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGhC,OAAO,CAACe,QAAQ,CAAC;EACjD,MAAM,CAACkB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlC,OAAO,CAACW,mBAAmB,CAAC;EAE1E,MAAM,CAACwB,YAAY,CAAC,GAAGnC,OAAO,CAACa,QAAQ,CAACuB,gBAAgB,CAAC;EAEzD,MAAMC,eAAe,GAAG,cAAc;EACtC,MAAM,CAACC,OAAO,EAAEC,UAAU,EAAEC,YAAY,CAAC,GAAGtC,UAAU,CAAC,CAACmC,eAAe,CAAC,CAAC;EACzE,MAAMI,QAAQ,GAAGnC,WAAW,EAAE;EAE9B,MAAMoC,aAAa,GAAGA,CAAA,KAAM;IAC1B1B,GAAG,CAAC2B,MAAM,CAACR,YAAY,EAAEb,eAAe,EAAEmB,QAAQ,EAAE,GAAG,CAAC;EAC1D,CAAC;EAED,MAAMG,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,MAAMC,aAAa,GAAG,MAAM7B,GAAG,CAAC8B,kBAAkB,CAACX,YAAY,EAAER,QAAQ,EAAEK,WAAW,EAAES,QAAQ,EAAEb,WAAW,EAAEE,eAAe,CAAC;IAC/H,IAAIe,aAAa,KAAK,GAAG,EAAE;MACzB,MAAME,eAAe,GAAG,MAAM/B,GAAG,CAACgC,YAAY,CAACb,YAAY,CAAC;MAC5D,IAAIY,eAAe,KAAK,GAAG,EAAE;QAC3BL,aAAa,EAAE;MACjB,CAAC,MAAM;QACL,MAAMG,aAAa,GAAG,MAAM7B,GAAG,CAAC8B,kBAAkB,CAACX,YAAY,EAAER,QAAQ,EAAEK,WAAW,EAAES,QAAQ,EAAEb,WAAW,EAAEE,eAAe,CAAC;QAC/H,IAAIe,aAAa,KAAK,GAAG,EAAE;UACzBH,aAAa,EAAE;QACjB;MACF;IACF;EACF,CAAC;EAEDzC,SAAS,CAAC,MAAM;IACd,IAAIqC,OAAO,CAACD,eAAe,CAAC,KAAKY,SAAS,EAAE;MAC1CzB,SAAS,CAAC,IAAI,CAAC;MACf0B,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEb,OAAO,CAACD,eAAe,CAAC,CAAC;MAC9DG,YAAY,CAACH,eAAe,CAAC;MAC7Bb,SAAS,CAAC,KAAK,CAAC;IAClB;IAEA,MAAM4B,kBAAkB,GAAGF,YAAY,CAACG,OAAO,CAAC,cAAc,CAAC;IAC/D,IAAID,kBAAkB,KAAK,IAAI,EAAE;MAC/B9B,eAAe,CAAC,IAAI,CAAC;MAErB,MAAMgC,OAAY,GAAGvD,UAAU,CAACwD,IAAI,CAACC,SAAS,CAACJ,kBAAkB,CAAC,CAAC;MACnE,IAAIE,OAAO,CAACG,gBAAgB,EAAE;QAC5B,IAAI,CAACH,OAAO,CAACI,sBAAsB,EAAE;UACnChC,aAAa,CAAC,IAAI,CAAC;QACrB,CAAC,MAAM;UACLE,WAAW,CAAC,IAAI,CAAC;UACjBa,QAAQ,CAAC,OAAO,CAAC;QACnB;MACF,CAAC,MAAM;QACLG,qBAAqB,EAAE;MACzB;IACF,CAAC,MAAM;MACLtB,eAAe,CAAC,KAAK,CAAC;MACtBY,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EACF,CAAC,EAAE,CAACI,OAAO,CAAC,CAAC;EAEb,oBACEpB,OAAA,CAACf,UAAU;IAAAwD,QAAA,EAQPtC,YAAY,GACRQ,YAAY,gBACVX,OAAA,CAACN,mBAAmB;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,GACvBtC,UAAU,gBACRP,OAAA,CAAEb,QAAQ;MAAAuD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,GACb,EAAE,GACN9B,eAAe,gBACbf,OAAA,CAACd,WAAW;MAAAwD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,GACf;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEC;AAEjB;AAAC3C,EAAA,CAtFuBD,SAAS;EAAA,QAGSnB,OAAO,EACnBA,OAAO,EACCA,OAAO,EACXA,OAAO,EACCA,OAAO,EACfA,OAAO,EACOA,OAAO,EAE9BA,OAAO,EAGcE,UAAU,EACrCI,WAAW;AAAA;AAAA0D,EAAA,GAfN7C,SAAS;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}