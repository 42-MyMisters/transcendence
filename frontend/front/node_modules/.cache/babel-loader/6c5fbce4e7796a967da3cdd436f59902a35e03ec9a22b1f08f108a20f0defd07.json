{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/LoginPage/InitialSetting.tsx\",\n  _s = $RefreshSig$();\nimport \"../../styles/LoginModals.css\";\nimport { useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InitialSettingModal() {\n  _s();\n  const [profileImage, setProfileImage] = useState(\"/smile.png\");\n  const profileRef = useRef(null);\n  const saveImageFile = () => {\n    var _profileRef$current, _profileRef$current$f;\n    if ((_profileRef$current = profileRef.current) !== null && _profileRef$current !== void 0 && (_profileRef$current$f = _profileRef$current.files) !== null && _profileRef$current$f !== void 0 && _profileRef$current$f[0]) {\n      var _profileRef$current2;\n      const newImg = URL.createObjectURL((_profileRef$current2 = profileRef.current) === null || _profileRef$current2 === void 0 ? void 0 : _profileRef$current2.files[0]);\n      setProfileImage(newImg);\n    }\n  };\n  const [newName, setNewName] = useState(\"\");\n  const navigate = useNavigate();\n  const setDefaultInfo = async () => {\n    var _profileRef$current3, _profileRef$current3$;\n    if (newName.length < 2 || newName.trim().length < 2) {\n      alert(\"닉네임은 2글자 이상이어야 합니다.\");\n      setNewName(\"\");\n      return;\n    }\n    const formData = new FormData();\n    if ((_profileRef$current3 = profileRef.current) !== null && _profileRef$current3 !== void 0 && (_profileRef$current3$ = _profileRef$current3.files) !== null && _profileRef$current3$ !== void 0 && _profileRef$current3$[0]) {\n      var _profileRef$current4, _profileRef$current4$, _profileRef$current5, _profileRef$current5$;\n      formData.append(\"profileImage\", (_profileRef$current4 = profileRef.current) === null || _profileRef$current4 === void 0 ? void 0 : (_profileRef$current4$ = _profileRef$current4.files) === null || _profileRef$current4$ === void 0 ? void 0 : _profileRef$current4$[0]);\n      console.log((_profileRef$current5 = profileRef.current) === null || _profileRef$current5 === void 0 ? void 0 : (_profileRef$current5$ = _profileRef$current5.files) === null || _profileRef$current5$ === void 0 ? void 0 : _profileRef$current5$[0].name);\n    }\n    const nickNameFormat = JSON.stringify({\n      nickname: newName\n    });\n    try {\n      var _profileRef$current6, _profileRef$current6$;\n      if ((_profileRef$current6 = profileRef.current) !== null && _profileRef$current6 !== void 0 && (_profileRef$current6$ = _profileRef$current6.files) !== null && _profileRef$current6$ !== void 0 && _profileRef$current6$[0]) {\n        const profileChange = await fetch(\"http://localhost:4000/user/profile-img-change\", {\n          credentials: \"include\",\n          method: \"POST\",\n          body: formData\n        });\n        if (!profileChange.ok) {\n          alert(\"파일 업로드에 실패했습니다.\");\n          return;\n        }\n      }\n      const nickNameChange = await fetch(\"http://localhost:4000/user/nickname\", {\n        credentials: \"include\",\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: nickNameFormat\n      });\n      if (!nickNameChange.ok) {\n        alert(\"닉네임 변경에 실패했습니다.\");\n        return;\n      }\n    } catch (error) {\n      alert(error);\n    }\n    console.log(newName);\n    navigate(\"/chat\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LoginModalsBG\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DefaultProfileImg\",\n      style: {\n        backgroundImage: `url(${profileImage})`,\n        backgroundSize: \"200px\",\n        width: \"200px\",\n        height: \"200px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChangeProfileImageBtn\",\n      onClick: () => {},\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ChangeImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"ChangeImage\",\n        type: \"file\",\n        accept: \"image/*\",\n        multiple: false,\n        onChange: saveImageFile,\n        ref: profileRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NickNameInitialForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"InitialSaveName\",\n        children: \"New Nickname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"InitialSaveName\",\n        type: \"text\",\n        placeholder: \"New Nickname\",\n        maxLength: 8,\n        value: newName,\n        onChange: e => {\n          setNewName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"InitialSettingSaveBtn\",\n      onClick: setDefaultInfo,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(InitialSettingModal, \"9I4/EUJl4Cb2Q7aJJCFtz4J5tRQ=\", false, function () {\n  return [useNavigate];\n});\n_c = InitialSettingModal;\nvar _c;\n$RefreshReg$(_c, \"InitialSettingModal\");","map":{"version":3,"names":["useRef","useState","useNavigate","jsxDEV","_jsxDEV","InitialSettingModal","_s","profileImage","setProfileImage","profileRef","saveImageFile","_profileRef$current","_profileRef$current$f","current","files","_profileRef$current2","newImg","URL","createObjectURL","newName","setNewName","navigate","setDefaultInfo","_profileRef$current3","_profileRef$current3$","length","trim","alert","formData","FormData","_profileRef$current4","_profileRef$current4$","_profileRef$current5","_profileRef$current5$","append","console","log","name","nickNameFormat","JSON","stringify","nickname","_profileRef$current6","_profileRef$current6$","profileChange","fetch","credentials","method","body","ok","nickNameChange","headers","error","className","children","style","backgroundImage","backgroundSize","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","id","type","accept","multiple","onChange","ref","placeholder","maxLength","value","e","target","_c","$RefreshReg$"],"sources":["/data/front/src/components/LoginPage/InitialSetting.tsx"],"sourcesContent":["import \"../../styles/LoginModals.css\";\n\nimport { useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function InitialSettingModal() {\n  const [profileImage, setProfileImage] = useState(\"/smile.png\");\n  const profileRef = useRef<HTMLInputElement>(null);\n\n  const saveImageFile = () => {\n    if (profileRef.current?.files?.[0]) {\n      const newImg = URL.createObjectURL(profileRef.current?.files[0]);\n      setProfileImage(newImg);\n    }\n  };\n\n  const [newName, setNewName] = useState(\"\");\n  const navigate = useNavigate();\n\n  const setDefaultInfo = async () => {\n    if (newName.length < 2 || newName.trim().length < 2) {\n      alert(\"닉네임은 2글자 이상이어야 합니다.\");\n      setNewName(\"\");\n      return;\n    }\n\n    const formData = new FormData();\n    if (profileRef.current?.files?.[0]) {\n      formData.append(\"profileImage\", profileRef.current?.files?.[0]!);\n      console.log(profileRef.current?.files?.[0]!.name);\n    }\n\n    const nickNameFormat = JSON.stringify({ nickname: newName });\n\n    try {\n      if (profileRef.current?.files?.[0]) {\n        const profileChange = await fetch(\"http://localhost:4000/user/profile-img-change\", {\n          credentials: \"include\",\n          method: \"POST\",\n          body: formData,\n        });\n\n        if (!profileChange.ok) {\n          alert(\"파일 업로드에 실패했습니다.\");\n          return;\n        }\n      }\n\n      const nickNameChange = await fetch(\"http://localhost:4000/user/nickname\", {\n        credentials: \"include\",\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: nickNameFormat,\n      });\n\n      if (!nickNameChange.ok) {\n        alert(\"닉네임 변경에 실패했습니다.\");\n        return;\n      }\n    } catch (error) {\n      alert(error);\n    }\n    console.log(newName);\n    navigate(\"/chat\");\n  };\n\n  return (\n    <div className=\"LoginModalsBG\">\n      <div\n        className=\"DefaultProfileImg\"\n        style={{\n          backgroundImage: `url(${profileImage})`,\n          backgroundSize: \"200px\",\n          width: \"200px\",\n          height: \"200px\",\n        }}\n      />\n      <div className=\"ChangeProfileImageBtn\" onClick={() => {}}>\n        <label htmlFor=\"ChangeImage\" />\n        <input\n          id=\"ChangeImage\"\n          type=\"file\"\n          accept=\"image/*\"\n          multiple={false}\n          onChange={saveImageFile}\n          ref={profileRef}\n        />\n      </div>\n      <div className=\"NickNameInitialForm\">\n        <label htmlFor=\"InitialSaveName\">New Nickname</label>\n        <input\n          id=\"InitialSaveName\"\n          type=\"text\"\n          placeholder=\"New Nickname\"\n          maxLength={8}\n          value={newName}\n          onChange={(e) => {\n            setNewName(e.target.value);\n          }}\n        />\n      </div>\n      <button className=\"InitialSettingSaveBtn\" onClick={setDefaultInfo}>\n        Save\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}