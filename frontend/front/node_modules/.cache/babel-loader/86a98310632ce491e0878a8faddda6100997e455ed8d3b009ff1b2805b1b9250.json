{"ast":null,"code":"var _jsxFileName = \"/data/front/src/components/ProfilePage/ChangeImageModal.tsx\",\n  _s = $RefreshSig$();\nimport { useAtom } from \"jotai\";\nimport { UserAtom } from \"../atom/UserAtom\";\nimport { useRef, useState } from \"react\";\nimport { changeImageModalAtom } from \"../../components/atom/ModalAtom\";\nimport { PressKey, AdminLogPrinter } from \"../../event/event.util\";\nimport * as chatAtom from \"../../components/atom/ChatAtom\";\nimport * as api from '../../event/api.request';\nimport { useNavigate } from 'react-router-dom';\nimport { refreshTokenAtom } from \"../../components/atom/LoginAtom\";\nimport \"../../styles/ChangeImageModal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChangeImageModal() {\n  _s();\n  const [changeImageModal, setchangeImageModal] = useAtom(changeImageModalAtom);\n  const [userInfo, setUserInfo] = useAtom(UserAtom);\n  const [newImage, setnewImage] = useState(\"\");\n  const [adminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const [, setRefreshToken] = useAtom(refreshTokenAtom);\n  const profileRef = useRef(null);\n  const navigate = useNavigate();\n  PressKey([\"Escape\"], () => {\n    setchangeImageModal(false);\n  });\n  const handleChangeImage = () => {\n    var _profileRef$current, _profileRef$current$f;\n    if ((_profileRef$current = profileRef.current) !== null && _profileRef$current !== void 0 && (_profileRef$current$f = _profileRef$current.files) !== null && _profileRef$current$f !== void 0 && _profileRef$current$f[0]) {\n      var _profileRef$current2;\n      const newImg = URL.createObjectURL((_profileRef$current2 = profileRef.current) === null || _profileRef$current2 === void 0 ? void 0 : _profileRef$current2.files[0]);\n      setnewImage(newImg);\n      AdminLogPrinter(adminConsole, `new Image: ${newImg}`);\n    }\n  };\n  const logOutHandler = () => {\n    api.LogOut(adminConsole, setRefreshToken, navigate, \"/\");\n  };\n  async function getMyinfoHandler() {\n    const getMeResponse = await api.GetMyInfo(adminConsole, setUserInfo);\n    if (getMeResponse == 401) {\n      const refreshResponse = await api.RefreshToken(adminConsole);\n      if (refreshResponse !== 201) {\n        logOutHandler();\n      } else {\n        const getMeResponse = await api.GetMyInfo(adminConsole, setUserInfo);\n        if (getMeResponse == 401) {\n          logOutHandler();\n        }\n      }\n    }\n  }\n  const changeNewImageHandler = async () => {\n    var _profileRef$current3, _profileRef$current3$, _profileRef$current4, _profileRef$current4$;\n    if (newImage === \"\") {\n      alert(\"이미지를 선택해주세요.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"profileImage\", (_profileRef$current3 = profileRef.current) === null || _profileRef$current3 === void 0 ? void 0 : (_profileRef$current3$ = _profileRef$current3.files) === null || _profileRef$current3$ === void 0 ? void 0 : _profileRef$current3$[0]);\n    AdminLogPrinter(adminConsole, (_profileRef$current4 = profileRef.current) === null || _profileRef$current4 === void 0 ? void 0 : (_profileRef$current4$ = _profileRef$current4.files) === null || _profileRef$current4$ === void 0 ? void 0 : _profileRef$current4$[0].name);\n    const changeNickNameRes = await api.changeProfileImage(adminConsole, formData, getMyinfoHandler);\n    if (changeNickNameRes === 401) {\n      const refreshResponse = await api.RefreshToken(adminConsole);\n      if (refreshResponse !== 201) {\n        logOutHandler();\n      } else {\n        const getMeResponse = await api.changeProfileImage(adminConsole, formData, getMyinfoHandler);\n        if (getMeResponse == 401) {\n          logOutHandler();\n        } else {\n          setchangeImageModal(false);\n          setnewImage(\"\");\n        }\n      }\n    } else {\n      setchangeImageModal(false);\n      setnewImage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChangeImageModalBG\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChangeImageModal\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"ChangeImageForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newImage\",\n          children: \"New Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"newImage\",\n          type: \"file\",\n          accept: \".jpg,.jpeg,.png\",\n          multiple: false,\n          onChange: handleChangeImage,\n          ref: profileRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"ChangeImage\",\n        onClick: changeNewImageHandler,\n        children: \"Change\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ChangeImageCancel\",\n        onClick: () => setchangeImageModal(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ChangeImageModal, \"z1dwNu9OhZZHSr8KD80/RLCoiR4=\", false, function () {\n  return [useAtom, useAtom, useAtom, useAtom, useNavigate];\n});\n_c = ChangeImageModal;\nvar _c;\n$RefreshReg$(_c, \"ChangeImageModal\");","map":{"version":3,"names":["useAtom","UserAtom","useRef","useState","changeImageModalAtom","PressKey","AdminLogPrinter","chatAtom","api","useNavigate","refreshTokenAtom","jsxDEV","_jsxDEV","Fragment","_Fragment","ChangeImageModal","_s","changeImageModal","setchangeImageModal","userInfo","setUserInfo","newImage","setnewImage","adminConsole","adminConsoleAtom","setRefreshToken","profileRef","navigate","handleChangeImage","_profileRef$current","_profileRef$current$f","current","files","_profileRef$current2","newImg","URL","createObjectURL","logOutHandler","LogOut","getMyinfoHandler","getMeResponse","GetMyInfo","refreshResponse","RefreshToken","changeNewImageHandler","_profileRef$current3","_profileRef$current3$","_profileRef$current4","_profileRef$current4$","alert","formData","FormData","append","name","changeNickNameRes","changeProfileImage","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","accept","multiple","onChange","ref","onClick","_c","$RefreshReg$"],"sources":["/data/front/src/components/ProfilePage/ChangeImageModal.tsx"],"sourcesContent":["import { useAtom } from \"jotai\";\nimport { UserAtom } from \"../atom/UserAtom\";\nimport { useRef, useState } from \"react\";\nimport { changeImageModalAtom } from \"../../components/atom/ModalAtom\";\nimport { PressKey, AdminLogPrinter } from \"../../event/event.util\";\nimport { keyboardKey } from '@testing-library/user-event';\nimport * as chatAtom from \"../../components/atom/ChatAtom\";\nimport * as api from '../../event/api.request';\nimport { useNavigate } from 'react-router-dom';\nimport { refreshTokenAtom } from \"../../components/atom/LoginAtom\";\n\nimport \"../../styles/ChangeImageModal.css\";\n\nexport default function ChangeImageModal() {\n  const [changeImageModal, setchangeImageModal] = useAtom(changeImageModalAtom);\n  const [userInfo, setUserInfo] = useAtom(UserAtom);\n  const [newImage, setnewImage] = useState(\"\");\n  const [adminConsole] = useAtom(chatAtom.adminConsoleAtom);\n  const [, setRefreshToken] = useAtom(refreshTokenAtom);\n  const profileRef = useRef<HTMLInputElement>(null);\n  const navigate = useNavigate();\n\n  PressKey([\"Escape\"], () => {\n    setchangeImageModal(false);\n  });\n\n  const handleChangeImage = () => {\n    if (profileRef.current?.files?.[0]) {\n      const newImg = URL.createObjectURL(profileRef.current?.files[0]);\n      setnewImage(newImg);\n      AdminLogPrinter(adminConsole, `new Image: ${newImg}`);\n    }\n  };\n\n  const logOutHandler = () => {\n    api.LogOut(adminConsole, setRefreshToken, navigate, \"/\");\n  };\n\n  async function getMyinfoHandler() {\n    const getMeResponse = await api.GetMyInfo(adminConsole, setUserInfo);\n    if (getMeResponse == 401) {\n      const refreshResponse = await api.RefreshToken(adminConsole);\n      if (refreshResponse !== 201) {\n        logOutHandler();\n      } else {\n        const getMeResponse = await api.GetMyInfo(adminConsole, setUserInfo);\n        if (getMeResponse == 401) {\n          logOutHandler();\n        }\n      }\n    }\n  }\n\n  const changeNewImageHandler = async () => {\n    if (newImage === \"\") {\n      alert(\"이미지를 선택해주세요.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"profileImage\", profileRef.current?.files?.[0]!);\n    AdminLogPrinter(adminConsole, profileRef.current?.files?.[0]!.name);\n\n    const changeNickNameRes = await api.changeProfileImage(adminConsole, formData, getMyinfoHandler);\n    if (changeNickNameRes === 401) {\n      const refreshResponse = await api.RefreshToken(adminConsole);\n      if (refreshResponse !== 201) {\n        logOutHandler();\n      } else {\n        const getMeResponse = await api.changeProfileImage(adminConsole, formData, getMyinfoHandler);\n        if (getMeResponse == 401) {\n          logOutHandler();\n        } else {\n          setchangeImageModal(false);\n          setnewImage(\"\");\n        }\n      }\n    } else {\n      setchangeImageModal(false);\n      setnewImage(\"\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"ChangeImageModalBG\"></div>\n      <div className=\"ChangeImageModal\">\n        <form className=\"ChangeImageForm\">\n          <label htmlFor=\"newImage\">New Image</label>\n          <input\n            id=\"newImage\"\n            type=\"file\"\n            accept=\".jpg,.jpeg,.png\"\n            multiple={false}\n            onChange={handleChangeImage}\n            ref={profileRef}\n          ></input>\n        </form>\n        <button type=\"submit\" className=\"ChangeImage\" onClick={changeNewImageHandler}  >\n          Change\n        </button>\n        <button className=\"ChangeImageCancel\" onClick={() => setchangeImageModal(false)}>\n          Cancel\n        </button>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}